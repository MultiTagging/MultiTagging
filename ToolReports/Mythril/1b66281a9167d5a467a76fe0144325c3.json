[{"issues": [{"description": {"head": "An assertion violation was triggered.", "tail": "It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values)."}, "extra": {"discoveryTime": 1046135902, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x40000000", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x60606040525b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b610aa3806100576000396000f30060606040523615610097576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634592cd1d14610163578063557f4bc91461018d5780635aa77d3c146101db57806383197ef01461022d578063ab0da5a91461023f578063b6a5d7de14610275578063ce606ee0146102c3578063d8f9659b14610315578063fe9fbb801461039f575b341561009f57fe5b6101615b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156100fb5761015f565b3373ffffffffffffffffffffffffffffffffffffffff1660003660006040516020015260405180838380828437820191505092505050602060405180830381856102c65a03f4151561014957fe5b505060405180519050151561015e5760006000fd5b5b565b005b341561016b57fe5b6101736103ed565b604051808215151515815260200191505060405180910390f35b341561019557fe5b6101c1600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506104df565b604051808215151515815260200191505060405180910390f35b34156101e357fe5b6101eb6105ac565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561023557fe5b61023d6105d2565b005b341561024757fe5b610273600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610645565b005b341561027d57fe5b6102a9600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506106f0565b604051808215151515815260200191505060405180910390f35b34156102cb57fe5b6102d3610807565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561031d57fe5b61038960048080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061082d565b6040518082815260200191505060405180910390f35b34156103a757fe5b6103d3600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a57565b604051808215151515815260200191505060405180910390f35b60003373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561044f57600090506104dc565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600190505b90565b60003373ffffffffffffffffffffffffffffffffffffffff16600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156105a65760008273ffffffffffffffffffffffffffffffffffffffff16141561055f57600090506105a5565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190505b5b5b919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff16600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610642573373ffffffffffffffffffffffffffffffffffffffff16ff5b5b5b565b3373ffffffffffffffffffffffffffffffffffffffff16600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106ec57600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff02191690555b5b5b50565b60003373ffffffffffffffffffffffffffffffffffffffff16600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561080157600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156107a35760009050610800565b6001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600190505b5b5b919050565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006000600060003373ffffffffffffffffffffffffffffffffffffffff16600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610a4d57600092505b8551831015610a475785838151811015156108a757fe5b9060200190602002015191508173ffffffffffffffffffffffffffffffffffffffff166370a08231306000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561095357fe5b6102c65a03f1151561096157fe5b505050604051805190509050600081141515610a39578173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb86836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515610a1f57fe5b6102c65a03f11515610a2d57fe5b50505060405180519050505b5b8280600101935050610890565b600193505b5b5b50505092915050565b60026020528060005260406000206000915054906101000a900460ff16815600a165627a7a723058201a4d1bf6a699c75827b957b7fb77468258f440c9fd87e82cbce56d29009205a10029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x", "name": "unknown", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x1"}]}]}, "locations": [{"sourceMap": "158:1:6"}], "severity": "Medium", "swcID": "SWC-110", "swcTitle": "Assert Violation"}, {"description": {"head": "An assertion violation was triggered.", "tail": "It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values)."}, "extra": {"discoveryTime": 2007556676, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x6060604052341561000c57fe5b5b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b61043f8061005f6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634592cd1d14610067578063557f4bc9146100915780635aa77d3c146100df57806383197ef014610131578063ce606ee014610143575bfe5b341561006f57fe5b610077610195565b604051808215151515815260200191505060405180910390f35b341561009957fe5b6100c5600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610287565b604051808215151515815260200191505060405180910390f35b34156100e757fe5b6100ef610354565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561013957fe5b61014161037a565b005b341561014b57fe5b6101536103ed565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60003373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156101f75760009050610284565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600190505b90565b60003373ffffffffffffffffffffffffffffffffffffffff16600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561034e5760008273ffffffffffffffffffffffffffffffffffffffff161415610307576000905061034d565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190505b5b5b919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff16600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156103ea573373ffffffffffffffffffffffffffffffffffffffff16ff5b5b5b565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a7230582042075393f7b1e69a4e4fdd19d573fb30457b5b194f14d58c5abf343140f4a6f20029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x1"}]}]}, "locations": [{"sourceMap": "11:1:5"}], "severity": "Medium", "swcID": "SWC-110", "swcTitle": "Assert Violation"}], "meta": {"logs": [{"hidden": true, "level": "error", "msg": "Traceback (most recent call last):\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 445, in execute_state\n    ).evaluate(global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/instructions.py\", line 265, in evaluate\n    result = instruction_mutator(global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/instructions.py\", line 196, in wrapper\n    new_global_states = self.call_on_state_copy(func, func_obj, global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/instructions.py\", line 131, in call_on_state_copy\n    return func(func_obj, global_state_copy)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/instructions.py\", line 1976, in stop_\n    global_state.current_transaction.end(global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/transaction/transaction_models.py\", line 203, in end\n    raise TransactionEndSignal(global_state, revert)\nmythril.laser.ethereum.transaction.transaction_models.TransactionEndSignal: (<mythril.laser.ethereum.state.global_state.GlobalState object at 0x7f00120e51e0>, False)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/mythril/mythril_analyzer.py\", line 151, in fire_lasers\n    sym = SymExecWrapper(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/analysis/symbolic.py\", line 182, in __init__\n    self.laser.sym_exec(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 206, in sym_exec\n    self.execute_transactions(created_account.address)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 232, in execute_transactions\n    self._execute_transactions_incremental(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 302, in _execute_transactions_incremental\n    execute_message_call(self, address, func_hashes=func_hashes)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/transaction/symbolic.py\", line 151, in execute_message_call\n    laser_evm.exec()\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 344, in exec\n    new_states, op_code = self.execute_state(global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 496, in execute_state\n    self._add_world_state(end_signal.global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 374, in _add_world_state\n    hook(global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/plugin/plugins/mutation_pruner.py\", line 82, in world_state_filter_hook\n    solver.get_model(constraints)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/model.py\", line 101, in get_model\n    ret_model = model_cache.check_quick_sat(simplify(And(*constraints)).raw)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/support_utils.py\", line 63, in check_quick_sat\n    model_copy = deepcopy(model)\n  File \"/usr/lib/python3.10/copy.py\", line 172, in deepcopy\n    y = _reconstruct(x, memo, *rv)\n  File \"/usr/lib/python3.10/copy.py\", line 271, in _reconstruct\n    state = deepcopy(state, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 231, in _deepcopy_dict\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 206, in _deepcopy_list\n    append(deepcopy(a, memo))\n  File \"/usr/lib/python3.10/copy.py\", line 153, in deepcopy\n    y = copier(memo)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6257, in __deepcopy__\n    return self.translate(self.ctx)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6251, in translate\n    return Model(model, target)\nTypeError: Model() takes from 0 to 1 positional arguments but 2 were given\n"}, {"hidden": true, "level": "error", "msg": "Traceback (most recent call last):\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/mythril/mythril_analyzer.py\", line 151, in fire_lasers\n    sym = SymExecWrapper(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/analysis/symbolic.py\", line 182, in __init__\n    self.laser.sym_exec(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 206, in sym_exec\n    self.execute_transactions(created_account.address)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 232, in execute_transactions\n    self._execute_transactions_incremental(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 277, in _execute_transactions_incremental\n    self.open_states = [\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 280, in <listcomp>\n    if state.constraints.is_possible()\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/state/constraints.py\", line 34, in is_possible\n    get_model(self, solver_timeout=solver_timeout)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/model.py\", line 101, in get_model\n    ret_model = model_cache.check_quick_sat(simplify(And(*constraints)).raw)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/support_utils.py\", line 63, in check_quick_sat\n    model_copy = deepcopy(model)\n  File \"/usr/lib/python3.10/copy.py\", line 172, in deepcopy\n    y = _reconstruct(x, memo, *rv)\n  File \"/usr/lib/python3.10/copy.py\", line 271, in _reconstruct\n    state = deepcopy(state, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 231, in _deepcopy_dict\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 206, in _deepcopy_list\n    append(deepcopy(a, memo))\n  File \"/usr/lib/python3.10/copy.py\", line 153, in deepcopy\n    y = copier(memo)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6257, in __deepcopy__\n    return self.translate(self.ctx)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6251, in translate\n    return Model(model, target)\nTypeError: Model() takes from 0 to 1 positional arguments but 2 were given\n"}, {"hidden": true, "level": "error", "msg": "Traceback (most recent call last):\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/mythril/mythril_analyzer.py\", line 151, in fire_lasers\n    sym = SymExecWrapper(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/analysis/symbolic.py\", line 182, in __init__\n    self.laser.sym_exec(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 206, in sym_exec\n    self.execute_transactions(created_account.address)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 232, in execute_transactions\n    self._execute_transactions_incremental(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 277, in _execute_transactions_incremental\n    self.open_states = [\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 280, in <listcomp>\n    if state.constraints.is_possible()\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/state/constraints.py\", line 34, in is_possible\n    get_model(self, solver_timeout=solver_timeout)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/model.py\", line 101, in get_model\n    ret_model = model_cache.check_quick_sat(simplify(And(*constraints)).raw)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/support_utils.py\", line 63, in check_quick_sat\n    model_copy = deepcopy(model)\n  File \"/usr/lib/python3.10/copy.py\", line 172, in deepcopy\n    y = _reconstruct(x, memo, *rv)\n  File \"/usr/lib/python3.10/copy.py\", line 271, in _reconstruct\n    state = deepcopy(state, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 231, in _deepcopy_dict\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 206, in _deepcopy_list\n    append(deepcopy(a, memo))\n  File \"/usr/lib/python3.10/copy.py\", line 153, in deepcopy\n    y = copier(memo)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6257, in __deepcopy__\n    return self.translate(self.ctx)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6251, in translate\n    return Model(model, target)\nTypeError: Model() takes from 0 to 1 positional arguments but 2 were given\n"}], "mythril_execution_info": {"analysis_duration": 2300322056}}, "sourceFormat": "text", "sourceList": ["Benchmarks/Study_SamplesSet/1b66281a9167d5a467a76fe0144325c3.sol", "Benchmarks/Study_SamplesSet/1b66281a9167d5a467a76fe0144325c3.sol", "Benchmarks/Study_SamplesSet/1b66281a9167d5a467a76fe0144325c3.sol"], "sourceType": "solidity-file"}]
