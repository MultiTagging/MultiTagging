[{"issues": [{"description": {"head": "A control flow decision is made based on The block.timestamp environment variable.", "tail": "The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners."}, "extra": {"discoveryTime": 943895816, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x60606040526000600660006101000a81548160ff021916908315150217905550341561002a57600080fd5b604051606080610899833981016040528080519060200190919080519060200190919080519060200190919050505b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603c8202420160038190555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050505b61079f806100fa6000396000f3006060604052361561008c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806307537ad41461036f57806329dcb0cf1461038457806338af3eed146103ad5780636e66f6e91461040257806370a08231146104575780637b3e5e7b146104a4578063e011ac87146104cd578063fd6b7ef8146104f6575b5b6000600660009054906101000a900460ff161515156100ab57600080fd5b34905080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555080600160008282540192505081905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3361271084026040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15156101d357600080fd5b6102c65a03f115156101e457600080fd5b5050507fe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf633826001604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001935050505060405180910390a16000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015610358577fe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf66000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826000604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001935050505060405180910390a161036b565b6002546002600082825401925050819055505b5b50005b341561037a57600080fd5b61038261050b565b005b341561038f57600080fd5b61039761058c565b6040518082815260200191505060405180910390f35b34156103b857600080fd5b6103c0610592565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561040d57600080fd5b6104156105b7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561046257600080fd5b61048e600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506105dd565b6040518082815260200191505060405180910390f35b34156104af57600080fd5b6104b76105f5565b6040518082815260200191505060405180910390f35b34156104d857600080fd5b6104e06105fb565b6040518082815260200191505060405180910390f35b341561050157600080fd5b610509610601565b005b60035442101515610589573373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610587576001600660006101000a81548160ff0219169083151502179055505b5b5b5b565b60035481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60056020528060005260406000206000915090505481565b60015481565b60025481565b60035442101515610770573373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801561066a57506000600254115b1561076e576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f193505050501561076c577fe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf66000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166002546000604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151515158152602001935050505060405180910390a161076d565b5b5b5b5b5b5600a165627a7a72305820fa04c5624c8066536f61ef4e285d74e98564655fb6409d3f38fc0fdbd20860730029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x07537ad4", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x07537ad4", "name": "closeCrowdSale()", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "resolved_input": null, "value": "0x0"}]}]}, "locations": [{"sourceMap": "1302:1:2"}], "severity": "Low", "swcID": "SWC-116", "swcTitle": "Timestamp Dependence"}], "meta": {"logs": [{"hidden": true, "level": "error", "msg": "Traceback (most recent call last):\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 445, in execute_state\n    ).evaluate(global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/instructions.py\", line 265, in evaluate\n    result = instruction_mutator(global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/instructions.py\", line 196, in wrapper\n    new_global_states = self.call_on_state_copy(func, func_obj, global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/instructions.py\", line 131, in call_on_state_copy\n    return func(func_obj, global_state_copy)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/instructions.py\", line 1976, in stop_\n    global_state.current_transaction.end(global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/transaction/transaction_models.py\", line 203, in end\n    raise TransactionEndSignal(global_state, revert)\nmythril.laser.ethereum.transaction.transaction_models.TransactionEndSignal: (<mythril.laser.ethereum.state.global_state.GlobalState object at 0x7f4aba4377c0>, False)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/mythril/mythril_analyzer.py\", line 151, in fire_lasers\n    sym = SymExecWrapper(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/analysis/symbolic.py\", line 182, in __init__\n    self.laser.sym_exec(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 206, in sym_exec\n    self.execute_transactions(created_account.address)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 232, in execute_transactions\n    self._execute_transactions_incremental(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 302, in _execute_transactions_incremental\n    execute_message_call(self, address, func_hashes=func_hashes)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/transaction/symbolic.py\", line 151, in execute_message_call\n    laser_evm.exec()\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 344, in exec\n    new_states, op_code = self.execute_state(global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 496, in execute_state\n    self._add_world_state(end_signal.global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 374, in _add_world_state\n    hook(global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/plugin/plugins/mutation_pruner.py\", line 82, in world_state_filter_hook\n    solver.get_model(constraints)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/model.py\", line 101, in get_model\n    ret_model = model_cache.check_quick_sat(simplify(And(*constraints)).raw)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/support_utils.py\", line 63, in check_quick_sat\n    model_copy = deepcopy(model)\n  File \"/usr/lib/python3.10/copy.py\", line 172, in deepcopy\n    y = _reconstruct(x, memo, *rv)\n  File \"/usr/lib/python3.10/copy.py\", line 271, in _reconstruct\n    state = deepcopy(state, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 231, in _deepcopy_dict\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 206, in _deepcopy_list\n    append(deepcopy(a, memo))\n  File \"/usr/lib/python3.10/copy.py\", line 153, in deepcopy\n    y = copier(memo)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6257, in __deepcopy__\n    return self.translate(self.ctx)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6251, in translate\n    return Model(model, target)\nTypeError: Model() takes from 0 to 1 positional arguments but 2 were given\n"}], "mythril_execution_info": {"analysis_duration": 978480577}}, "sourceFormat": "text", "sourceList": ["Benchmarks/Study_SamplesSet/b845d738638a81cf34298171cd543497.sol"], "sourceType": "solidity-file"}]
