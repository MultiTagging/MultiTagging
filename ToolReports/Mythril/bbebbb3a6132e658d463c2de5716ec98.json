[{"issues": [{"description": {"head": "An assertion violation was triggered.", "tail": "It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values)."}, "extra": {"discoveryTime": 56536912, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x300004b", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x606060405233600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550341561004d57fe5b5b6106548061005d6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633ccfd60b146100675780635a70fe72146100795780636046d7181461009f578063b0a94ef714610102578063c081996114610122575bfe5b341561006f57fe5b61007761012c565b005b341561008157fe5b6100896102a6565b6040518082815260200191505060405180910390f35b61010060048080359060200190919080356000191690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506102ee565b005b341561010a57fe5b6101206004808035906020019091905050610418565b005b61012a6105c7565b005b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156102a3573073ffffffffffffffffffffffffffffffffffffffff16636046d7183073ffffffffffffffffffffffffffffffffffffffff163133600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020016000018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050600060405180830381600087803b151561029157fe5b6102c65a03f1151561029f57fe5b5050505b5b565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b90565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103295760006000fd5b8173ffffffffffffffffffffffffffffffffffffffff168460405180905060006040518083038185876187965a03f19250505015610411577f1f0c5f264d58c67f311160f9581374b8e04d7fd457e8f97c14ac5e667e123dee848484846040518085815260200184600019166000191681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390a15b5b50505050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541180156104675750600081115b156105c3573073ffffffffffffffffffffffffffffffffffffffff16636046d7188233600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020016000018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050600060405180830381600087803b151561056457fe5b6102c65a03f1151561057257fe5b50505080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b5b50565b670de0b6b3a76400003411156106255734600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b5b5600a165627a7a72305820b740a788bc79f3a971c2f7ef2beac7e7e6e187cccd330a7879aa1a06f27ae7a60029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x1"}]}]}, "locations": [{"sourceMap": "76:1:1"}], "severity": "Medium", "swcID": "SWC-110", "swcTitle": "Assert Violation"}], "meta": {"logs": [{"hidden": true, "level": "error", "msg": "Traceback (most recent call last):\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/mythril/mythril_analyzer.py\", line 151, in fire_lasers\n    sym = SymExecWrapper(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/analysis/symbolic.py\", line 182, in __init__\n    self.laser.sym_exec(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 206, in sym_exec\n    self.execute_transactions(created_account.address)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 232, in execute_transactions\n    self._execute_transactions_incremental(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 277, in _execute_transactions_incremental\n    self.open_states = [\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 280, in <listcomp>\n    if state.constraints.is_possible()\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/state/constraints.py\", line 34, in is_possible\n    get_model(self, solver_timeout=solver_timeout)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/model.py\", line 101, in get_model\n    ret_model = model_cache.check_quick_sat(simplify(And(*constraints)).raw)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/support_utils.py\", line 63, in check_quick_sat\n    model_copy = deepcopy(model)\n  File \"/usr/lib/python3.10/copy.py\", line 172, in deepcopy\n    y = _reconstruct(x, memo, *rv)\n  File \"/usr/lib/python3.10/copy.py\", line 271, in _reconstruct\n    state = deepcopy(state, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 231, in _deepcopy_dict\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 206, in _deepcopy_list\n    append(deepcopy(a, memo))\n  File \"/usr/lib/python3.10/copy.py\", line 153, in deepcopy\n    y = copier(memo)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6257, in __deepcopy__\n    return self.translate(self.ctx)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6251, in translate\n    return Model(model, target)\nTypeError: Model() takes from 0 to 1 positional arguments but 2 were given\n"}], "mythril_execution_info": {"analysis_duration": 511984348}}, "sourceFormat": "text", "sourceList": ["Benchmarks/Study_SamplesSet/bbebbb3a6132e658d463c2de5716ec98.sol"], "sourceType": "solidity-file"}]
