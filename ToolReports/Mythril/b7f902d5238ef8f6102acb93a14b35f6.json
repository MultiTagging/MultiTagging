[{"issues": [{"description": {"head": "An assertion violation was triggered.", "tail": "It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values)."}, "extra": {"discoveryTime": 5345606565, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x1", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x606060405260008060146101000a81548160ff02191690831515021790555060006003556005600a5561016060405190810160405280601060ff168152602001600c60ff168152602001600a60ff168152602001600860ff168152602001600760ff168152602001600660ff168152602001600560ff168152602001600460ff168152602001600360ff168152602001600260ff168152602001600160ff16815250600b90600b620000b3929190620001a9565b50600f600d5560e060405190810160405280603c63ffffffff1663ffffffff16815260200161070863ffffffff1663ffffffff168152602001611c2063ffffffff1663ffffffff16815260200161546063ffffffff1663ffffffff16815260200161a8c063ffffffff1663ffffffff1681526020016201518063ffffffff1663ffffffff1681526020016203f48063ffffffff1663ffffffff16815250600e9060076200016292919062000257565b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000369565b82805482825590600052602060002090601f01602090048101928215620002445791602002820160005b838211156200021357835183826101000a81548160ff021916908360ff1602179055509260200192600101602081600001049283019260010302620001d3565b8015620002425782816101000a81549060ff021916905560010160208160000104928301926001030262000213565b505b50905062000253919062000300565b5090565b8260078001600890048101928215620002ed5791602002820160005b83821115620002b957835183826101000a81548163ffffffff021916908363ffffffff160217905550926020019260040160208160030104928301926001030262000273565b8015620002eb5782816101000a81549063ffffffff0219169055600401602081600301049283019260010302620002b9565b505b509050620002fc919062000333565b5090565b6200033091905b808211156200032c57600081816101000a81549060ff02191690555060010162000307565b5090565b90565b6200036691905b808211156200036257600081816101000a81549063ffffffff0219169055506001016200033a565b5090565b90565b61166a80620003796000396000f30060606040526004361061016a576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806321cde8241461016f57806324e7a38a146101a65780633a9e9d0d146101df5780633ed2b77a146102225780633f4ba83a14610285578063454f34341461029a5780634e0896a1146102f15780635663896e1461032c5780635c975abb1461034f5780635fb6bca21461037c5780636af04a57146103d157806371587988146104265780637a7d49371461045f5780637bbd3f19146104885780637cdd053a1461049d5780638456cb59146104db5780638660cbf5146104f05780638da5cb5b1461054557806390393fc81461059a57806398981756146105c3578063a5e82807146105fe578063b2775b0214610635578063b39a7fbe14610672578063cc9f28ea146106ab578063cfa24ee314610715578063e8554e8b1461074e578063f2b47d5214610793578063f2fde38b146107e8575b600080fd5b341561017a57600080fd5b6101906004808035906020019091905050610821565b6040518082815260200191505060405180910390f35b34156101b157600080fd5b6101dd600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610839565b005b34156101ea57600080fd5b61020060048080359060200190919050506108a0565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b341561022d57600080fd5b61024360048080359060200190919050506108cf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561029057600080fd5b61029861091c565b005b34156102a557600080fd5b6102bb60048080359060200190919050506109da565b604051808460ff1660ff1681526020018360ff1660ff1681526020018260ff1660ff168152602001935050505060405180910390f35b34156102fc57600080fd5b6103126004808035906020019091905050610a37565b604051808215151515815260200191505060405180910390f35b341561033757600080fd5b61034d6004808035906020019091905050610a57565b005b341561035a57600080fd5b610362610afb565b604051808215151515815260200191505060405180910390f35b341561038757600080fd5b61038f610b0e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156103dc57600080fd5b6103e4610b34565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561043157600080fd5b61045d600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610b5a565b005b341561046a57600080fd5b610472610c77565b6040518082815260200191505060405180910390f35b341561049357600080fd5b61049b610c7d565b005b34156104a857600080fd5b6104d9600480803560ff1690602001909190803560ff1690602001909190803560ff16906020019091905050610d4f565b005b34156104e657600080fd5b6104ee610e60565b005b34156104fb57600080fd5b610503610f20565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561055057600080fd5b610558610f46565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156105a557600080fd5b6105ad610f6b565b6040518082815260200191505060405180910390f35b34156105ce57600080fd5b6105e46004808035906020019091905050610f71565b604051808215151515815260200191505060405180910390f35b341561060957600080fd5b61061f6004808035906020019091905050610fa2565b6040518082815260200191505060405180910390f35b341561064057600080fd5b6106566004808035906020019091905050610fc6565b604051808260ff1660ff16815260200191505060405180910390f35b341561067d57600080fd5b6106a9600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610ff9565b005b34156106b657600080fd5b6106be611060565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156107015780820151818401526020810190506106e6565b505050509050019250505060405180910390f35b341561072057600080fd5b61074c600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506110be565b005b341561075957600080fd5b61076f6004808035906020019091905050611125565b60405180848152602001838152602001828152602001935050505060405180910390f35b341561079e57600080fd5b6107a6611194565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156107f357600080fd5b61081f600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111ba565b005b60076020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561089457600080fd5b61089d8161130f565b50565b600e816007811015156108af57fe5b60089182820401919006600402915054906101000a900463ffffffff1681565b6001818154811015156108de57fe5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561097757600080fd5b600060149054906101000a900460ff16151561099257600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b6002818154811015156109e957fe5b90600052602060002090016000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16908060000160029054906101000a900460ff16905083565b60086020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ab257600080fd5b600e6000600781101515610ac257fe5b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1681101515610af157600080fd5b80600d8190555050565b600060149054906101000a900460ff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bb557600080fd5b600060149054906101000a900460ff161515610bd057600080fd5b80600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f450db8da6efbe9c22f2347f7c2021231df1fc58d3ae9a2fa75d39fa44619930581604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600d5481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610cd857600080fd5b6004600280549050111515610cec57600080fd5b6002600160028054905003815481101515610d0357fe5b9060005260206000209001600080820160006101000a81549060ff02191690556000820160016101000a81549060ff02191690556000820160026101000a81549060ff02191690555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610daa57600080fd5b60028054806001018281610dbe91906115a3565b916000526020600020900160006060604051908101604052808760ff1681526020018660ff1681526020018560ff16815250909190915060008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548160ff021916908360ff16021790555060408201518160000160026101000a81548160ff021916908360ff160217905550505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ebb57600080fd5b600060149054906101000a900460ff16151515610ed757600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b6000600115156008600084815260200190815260200160002060009054906101000a900460ff161515149050919050565b600981815481101515610fb157fe5b90600052602060002090016000915090505481565b600b81815481101515610fd557fe5b9060005260206000209060209182820401919006915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561105457600080fd5b61105d816113eb565b50565b6110686115cf565b60098054806020026020016040519081016040528092919081815260200182805480156110b457602002820191906000526020600020905b8154815260200190600101908083116110a0575b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561111957600080fd5b611122816114c7565b50565b60008060008060028581548110151561113a57fe5b906000526020600020900190508060000160009054906101000a900460ff1660ff1693508060000160019054906101000a900460ff1660ff1692508060000160029054906101000a900460ff1660ff169150509193909250565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561121557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561125157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008190508073ffffffffffffffffffffffffffffffffffffffff166354c15b826000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561138057600080fd5b6102c65a03f1151561139157600080fd5b5050506040518051905015156113a657600080fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008190508073ffffffffffffffffffffffffffffffffffffffff1663c03c72aa6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561145c57600080fd5b6102c65a03f1151561146d57600080fd5b50505060405180519050151561148257600080fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008190508073ffffffffffffffffffffffffffffffffffffffff16631051db346000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561153857600080fd5b6102c65a03f1151561154957600080fd5b50505060405180519050151561155e57600080fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b8154818355818115116115ca578183600052602060002091820191016115c991906115e3565b5b505050565b602060405190810160405280600081525090565b61163b91905b8082111561163757600080820160006101000a81549060ff02191690556000820160016101000a81549060ff02191690556000820160026101000a81549060ff0219169055506001016115e9565b5090565b905600a165627a7a723058207b29c7806439ea1540f91874ea53865298fcd1f3a54a0dd76984e8c0ae8e960d0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x3a9e9d0d80", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x3a9e9d0d80", "name": "prizeCooldowns(uint256)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": [57896044618658097711785492504343953926634992332820282019728792003956564819968], "value": "0x0"}]}]}, "locations": [{"sourceMap": "2222:1:12"}], "severity": "Medium", "swcID": "SWC-110", "swcTitle": "Assert Violation"}, {"description": {"head": "An assertion violation was triggered.", "tail": "It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values)."}, "extra": {"discoveryTime": 5589289426, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x606060405260008060146101000a81548160ff02191690831515021790555060006003556005600a5561016060405190810160405280601060ff168152602001600c60ff168152602001600a60ff168152602001600860ff168152602001600760ff168152602001600660ff168152602001600560ff168152602001600460ff168152602001600360ff168152602001600260ff168152602001600160ff16815250600b90600b620000b3929190620001a9565b50600f600d5560e060405190810160405280603c63ffffffff1663ffffffff16815260200161070863ffffffff1663ffffffff168152602001611c2063ffffffff1663ffffffff16815260200161546063ffffffff1663ffffffff16815260200161a8c063ffffffff1663ffffffff1681526020016201518063ffffffff1663ffffffff1681526020016203f48063ffffffff1663ffffffff16815250600e9060076200016292919062000257565b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000369565b82805482825590600052602060002090601f01602090048101928215620002445791602002820160005b838211156200021357835183826101000a81548160ff021916908360ff1602179055509260200192600101602081600001049283019260010302620001d3565b8015620002425782816101000a81549060ff021916905560010160208160000104928301926001030262000213565b505b50905062000253919062000300565b5090565b8260078001600890048101928215620002ed5791602002820160005b83821115620002b957835183826101000a81548163ffffffff021916908363ffffffff160217905550926020019260040160208160030104928301926001030262000273565b8015620002eb5782816101000a81549063ffffffff0219169055600401602081600301049283019260010302620002b9565b505b509050620002fc919062000333565b5090565b6200033091905b808211156200032c57600081816101000a81549060ff02191690555060010162000307565b5090565b90565b6200036691905b808211156200036257600081816101000a81549063ffffffff0219169055506001016200033a565b5090565b90565b61166a80620003796000396000f30060606040526004361061016a576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806321cde8241461016f57806324e7a38a146101a65780633a9e9d0d146101df5780633ed2b77a146102225780633f4ba83a14610285578063454f34341461029a5780634e0896a1146102f15780635663896e1461032c5780635c975abb1461034f5780635fb6bca21461037c5780636af04a57146103d157806371587988146104265780637a7d49371461045f5780637bbd3f19146104885780637cdd053a1461049d5780638456cb59146104db5780638660cbf5146104f05780638da5cb5b1461054557806390393fc81461059a57806398981756146105c3578063a5e82807146105fe578063b2775b0214610635578063b39a7fbe14610672578063cc9f28ea146106ab578063cfa24ee314610715578063e8554e8b1461074e578063f2b47d5214610793578063f2fde38b146107e8575b600080fd5b341561017a57600080fd5b6101906004808035906020019091905050610821565b6040518082815260200191505060405180910390f35b34156101b157600080fd5b6101dd600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610839565b005b34156101ea57600080fd5b61020060048080359060200190919050506108a0565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b341561022d57600080fd5b61024360048080359060200190919050506108cf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561029057600080fd5b61029861091c565b005b34156102a557600080fd5b6102bb60048080359060200190919050506109da565b604051808460ff1660ff1681526020018360ff1660ff1681526020018260ff1660ff168152602001935050505060405180910390f35b34156102fc57600080fd5b6103126004808035906020019091905050610a37565b604051808215151515815260200191505060405180910390f35b341561033757600080fd5b61034d6004808035906020019091905050610a57565b005b341561035a57600080fd5b610362610afb565b604051808215151515815260200191505060405180910390f35b341561038757600080fd5b61038f610b0e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156103dc57600080fd5b6103e4610b34565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561043157600080fd5b61045d600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610b5a565b005b341561046a57600080fd5b610472610c77565b6040518082815260200191505060405180910390f35b341561049357600080fd5b61049b610c7d565b005b34156104a857600080fd5b6104d9600480803560ff1690602001909190803560ff1690602001909190803560ff16906020019091905050610d4f565b005b34156104e657600080fd5b6104ee610e60565b005b34156104fb57600080fd5b610503610f20565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561055057600080fd5b610558610f46565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156105a557600080fd5b6105ad610f6b565b6040518082815260200191505060405180910390f35b34156105ce57600080fd5b6105e46004808035906020019091905050610f71565b604051808215151515815260200191505060405180910390f35b341561060957600080fd5b61061f6004808035906020019091905050610fa2565b6040518082815260200191505060405180910390f35b341561064057600080fd5b6106566004808035906020019091905050610fc6565b604051808260ff1660ff16815260200191505060405180910390f35b341561067d57600080fd5b6106a9600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610ff9565b005b34156106b657600080fd5b6106be611060565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156107015780820151818401526020810190506106e6565b505050509050019250505060405180910390f35b341561072057600080fd5b61074c600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506110be565b005b341561075957600080fd5b61076f6004808035906020019091905050611125565b60405180848152602001838152602001828152602001935050505060405180910390f35b341561079e57600080fd5b6107a6611194565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156107f357600080fd5b61081f600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111ba565b005b60076020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561089457600080fd5b61089d8161130f565b50565b600e816007811015156108af57fe5b60089182820401919006600402915054906101000a900463ffffffff1681565b6001818154811015156108de57fe5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561097757600080fd5b600060149054906101000a900460ff16151561099257600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b6002818154811015156109e957fe5b90600052602060002090016000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16908060000160029054906101000a900460ff16905083565b60086020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ab257600080fd5b600e6000600781101515610ac257fe5b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1681101515610af157600080fd5b80600d8190555050565b600060149054906101000a900460ff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bb557600080fd5b600060149054906101000a900460ff161515610bd057600080fd5b80600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f450db8da6efbe9c22f2347f7c2021231df1fc58d3ae9a2fa75d39fa44619930581604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600d5481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610cd857600080fd5b6004600280549050111515610cec57600080fd5b6002600160028054905003815481101515610d0357fe5b9060005260206000209001600080820160006101000a81549060ff02191690556000820160016101000a81549060ff02191690556000820160026101000a81549060ff02191690555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610daa57600080fd5b60028054806001018281610dbe91906115a3565b916000526020600020900160006060604051908101604052808760ff1681526020018660ff1681526020018560ff16815250909190915060008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548160ff021916908360ff16021790555060408201518160000160026101000a81548160ff021916908360ff160217905550505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ebb57600080fd5b600060149054906101000a900460ff16151515610ed757600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b6000600115156008600084815260200190815260200160002060009054906101000a900460ff161515149050919050565b600981815481101515610fb157fe5b90600052602060002090016000915090505481565b600b81815481101515610fd557fe5b9060005260206000209060209182820401919006915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561105457600080fd5b61105d816113eb565b50565b6110686115cf565b60098054806020026020016040519081016040528092919081815260200182805480156110b457602002820191906000526020600020905b8154815260200190600101908083116110a0575b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561111957600080fd5b611122816114c7565b50565b60008060008060028581548110151561113a57fe5b906000526020600020900190508060000160009054906101000a900460ff1660ff1693508060000160019054906101000a900460ff1660ff1692508060000160029054906101000a900460ff1660ff169150509193909250565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561121557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561125157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008190508073ffffffffffffffffffffffffffffffffffffffff166354c15b826000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561138057600080fd5b6102c65a03f1151561139157600080fd5b5050506040518051905015156113a657600080fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008190508073ffffffffffffffffffffffffffffffffffffffff1663c03c72aa6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561145c57600080fd5b6102c65a03f1151561146d57600080fd5b50505060405180519050151561148257600080fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008190508073ffffffffffffffffffffffffffffffffffffffff16631051db346000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561153857600080fd5b6102c65a03f1151561154957600080fd5b50505060405180519050151561155e57600080fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b8154818355818115116115ca578183600052602060002091820191016115c991906115e3565b5b505050565b602060405190810160405280600081525090565b61163b91905b8082111561163757600080820160006101000a81549060ff02191690556000820160016101000a81549060ff02191690556000820160026101000a81549060ff0219169055506001016115e9565b5090565b905600a165627a7a723058207b29c7806439ea1540f91874ea53865298fcd1f3a54a0dd76984e8c0ae8e960d0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x3ed2b77a", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x3ed2b77a", "name": "teams(uint256)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0x0"}]}]}, "locations": [{"sourceMap": "2269:1:12"}], "severity": "Medium", "swcID": "SWC-110", "swcTitle": "Assert Violation"}, {"description": {"head": "An assertion violation was triggered.", "tail": "It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values)."}, "extra": {"discoveryTime": 5746850013, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x606060405260008060146101000a81548160ff02191690831515021790555060006003556005600a5561016060405190810160405280601060ff168152602001600c60ff168152602001600a60ff168152602001600860ff168152602001600760ff168152602001600660ff168152602001600560ff168152602001600460ff168152602001600360ff168152602001600260ff168152602001600160ff16815250600b90600b620000b3929190620001a9565b50600f600d5560e060405190810160405280603c63ffffffff1663ffffffff16815260200161070863ffffffff1663ffffffff168152602001611c2063ffffffff1663ffffffff16815260200161546063ffffffff1663ffffffff16815260200161a8c063ffffffff1663ffffffff1681526020016201518063ffffffff1663ffffffff1681526020016203f48063ffffffff1663ffffffff16815250600e9060076200016292919062000257565b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000369565b82805482825590600052602060002090601f01602090048101928215620002445791602002820160005b838211156200021357835183826101000a81548160ff021916908360ff1602179055509260200192600101602081600001049283019260010302620001d3565b8015620002425782816101000a81549060ff021916905560010160208160000104928301926001030262000213565b505b50905062000253919062000300565b5090565b8260078001600890048101928215620002ed5791602002820160005b83821115620002b957835183826101000a81548163ffffffff021916908363ffffffff160217905550926020019260040160208160030104928301926001030262000273565b8015620002eb5782816101000a81549063ffffffff0219169055600401602081600301049283019260010302620002b9565b505b509050620002fc919062000333565b5090565b6200033091905b808211156200032c57600081816101000a81549060ff02191690555060010162000307565b5090565b90565b6200036691905b808211156200036257600081816101000a81549063ffffffff0219169055506001016200033a565b5090565b90565b61166a80620003796000396000f30060606040526004361061016a576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806321cde8241461016f57806324e7a38a146101a65780633a9e9d0d146101df5780633ed2b77a146102225780633f4ba83a14610285578063454f34341461029a5780634e0896a1146102f15780635663896e1461032c5780635c975abb1461034f5780635fb6bca21461037c5780636af04a57146103d157806371587988146104265780637a7d49371461045f5780637bbd3f19146104885780637cdd053a1461049d5780638456cb59146104db5780638660cbf5146104f05780638da5cb5b1461054557806390393fc81461059a57806398981756146105c3578063a5e82807146105fe578063b2775b0214610635578063b39a7fbe14610672578063cc9f28ea146106ab578063cfa24ee314610715578063e8554e8b1461074e578063f2b47d5214610793578063f2fde38b146107e8575b600080fd5b341561017a57600080fd5b6101906004808035906020019091905050610821565b6040518082815260200191505060405180910390f35b34156101b157600080fd5b6101dd600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610839565b005b34156101ea57600080fd5b61020060048080359060200190919050506108a0565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b341561022d57600080fd5b61024360048080359060200190919050506108cf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561029057600080fd5b61029861091c565b005b34156102a557600080fd5b6102bb60048080359060200190919050506109da565b604051808460ff1660ff1681526020018360ff1660ff1681526020018260ff1660ff168152602001935050505060405180910390f35b34156102fc57600080fd5b6103126004808035906020019091905050610a37565b604051808215151515815260200191505060405180910390f35b341561033757600080fd5b61034d6004808035906020019091905050610a57565b005b341561035a57600080fd5b610362610afb565b604051808215151515815260200191505060405180910390f35b341561038757600080fd5b61038f610b0e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156103dc57600080fd5b6103e4610b34565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561043157600080fd5b61045d600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610b5a565b005b341561046a57600080fd5b610472610c77565b6040518082815260200191505060405180910390f35b341561049357600080fd5b61049b610c7d565b005b34156104a857600080fd5b6104d9600480803560ff1690602001909190803560ff1690602001909190803560ff16906020019091905050610d4f565b005b34156104e657600080fd5b6104ee610e60565b005b34156104fb57600080fd5b610503610f20565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561055057600080fd5b610558610f46565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156105a557600080fd5b6105ad610f6b565b6040518082815260200191505060405180910390f35b34156105ce57600080fd5b6105e46004808035906020019091905050610f71565b604051808215151515815260200191505060405180910390f35b341561060957600080fd5b61061f6004808035906020019091905050610fa2565b6040518082815260200191505060405180910390f35b341561064057600080fd5b6106566004808035906020019091905050610fc6565b604051808260ff1660ff16815260200191505060405180910390f35b341561067d57600080fd5b6106a9600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610ff9565b005b34156106b657600080fd5b6106be611060565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156107015780820151818401526020810190506106e6565b505050509050019250505060405180910390f35b341561072057600080fd5b61074c600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506110be565b005b341561075957600080fd5b61076f6004808035906020019091905050611125565b60405180848152602001838152602001828152602001935050505060405180910390f35b341561079e57600080fd5b6107a6611194565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156107f357600080fd5b61081f600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111ba565b005b60076020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561089457600080fd5b61089d8161130f565b50565b600e816007811015156108af57fe5b60089182820401919006600402915054906101000a900463ffffffff1681565b6001818154811015156108de57fe5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561097757600080fd5b600060149054906101000a900460ff16151561099257600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b6002818154811015156109e957fe5b90600052602060002090016000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16908060000160029054906101000a900460ff16905083565b60086020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ab257600080fd5b600e6000600781101515610ac257fe5b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1681101515610af157600080fd5b80600d8190555050565b600060149054906101000a900460ff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bb557600080fd5b600060149054906101000a900460ff161515610bd057600080fd5b80600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f450db8da6efbe9c22f2347f7c2021231df1fc58d3ae9a2fa75d39fa44619930581604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600d5481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610cd857600080fd5b6004600280549050111515610cec57600080fd5b6002600160028054905003815481101515610d0357fe5b9060005260206000209001600080820160006101000a81549060ff02191690556000820160016101000a81549060ff02191690556000820160026101000a81549060ff02191690555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610daa57600080fd5b60028054806001018281610dbe91906115a3565b916000526020600020900160006060604051908101604052808760ff1681526020018660ff1681526020018560ff16815250909190915060008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a81548160ff021916908360ff16021790555060408201518160000160026101000a81548160ff021916908360ff160217905550505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ebb57600080fd5b600060149054906101000a900460ff16151515610ed757600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b6000600115156008600084815260200190815260200160002060009054906101000a900460ff161515149050919050565b600981815481101515610fb157fe5b90600052602060002090016000915090505481565b600b81815481101515610fd557fe5b9060005260206000209060209182820401919006915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561105457600080fd5b61105d816113eb565b50565b6110686115cf565b60098054806020026020016040519081016040528092919081815260200182805480156110b457602002820191906000526020600020905b8154815260200190600101908083116110a0575b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561111957600080fd5b611122816114c7565b50565b60008060008060028581548110151561113a57fe5b906000526020600020900190508060000160009054906101000a900460ff1660ff1693508060000160019054906101000a900460ff1660ff1692508060000160029054906101000a900460ff1660ff169150509193909250565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561121557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561125157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008190508073ffffffffffffffffffffffffffffffffffffffff166354c15b826000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561138057600080fd5b6102c65a03f1151561139157600080fd5b5050506040518051905015156113a657600080fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008190508073ffffffffffffffffffffffffffffffffffffffff1663c03c72aa6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561145c57600080fd5b6102c65a03f1151561146d57600080fd5b50505060405180519050151561148257600080fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008190508073ffffffffffffffffffffffffffffffffffffffff16631051db346000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561153857600080fd5b6102c65a03f1151561154957600080fd5b50505060405180519050151561155e57600080fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b8154818355818115116115ca578183600052602060002091820191016115c991906115e3565b5b505050565b602060405190810160405280600081525090565b61163b91905b8082111561163757600080820160006101000a81549060ff02191690556000820160016101000a81549060ff02191690556000820160026101000a81549060ff0219169055506001016115e9565b5090565b905600a165627a7a723058207b29c7806439ea1540f91874ea53865298fcd1f3a54a0dd76984e8c0ae8e960d0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x454f3434", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x454f3434", "name": "raceBaseStats(uint256)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0x0"}]}]}, "locations": [{"sourceMap": "2536:1:12"}], "severity": "Medium", "swcID": "SWC-110", "swcTitle": "Assert Violation"}], "meta": {"logs": [{"hidden": true, "level": "error", "msg": "Traceback (most recent call last):\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 445, in execute_state\n    ).evaluate(global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/instructions.py\", line 265, in evaluate\n    result = instruction_mutator(global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/instructions.py\", line 196, in wrapper\n    new_global_states = self.call_on_state_copy(func, func_obj, global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/instructions.py\", line 131, in call_on_state_copy\n    return func(func_obj, global_state_copy)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/instructions.py\", line 1889, in return_\n    global_state.current_transaction.end(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/transaction/transaction_models.py\", line 203, in end\n    raise TransactionEndSignal(global_state, revert)\nmythril.laser.ethereum.transaction.transaction_models.TransactionEndSignal: (<mythril.laser.ethereum.state.global_state.GlobalState object at 0x7f493cd4eb00>, False)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/mythril/mythril_analyzer.py\", line 151, in fire_lasers\n    sym = SymExecWrapper(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/analysis/symbolic.py\", line 182, in __init__\n    self.laser.sym_exec(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 206, in sym_exec\n    self.execute_transactions(created_account.address)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 232, in execute_transactions\n    self._execute_transactions_incremental(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 302, in _execute_transactions_incremental\n    execute_message_call(self, address, func_hashes=func_hashes)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/transaction/symbolic.py\", line 151, in execute_message_call\n    laser_evm.exec()\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 344, in exec\n    new_states, op_code = self.execute_state(global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 496, in execute_state\n    self._add_world_state(end_signal.global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 374, in _add_world_state\n    hook(global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/plugin/plugins/mutation_pruner.py\", line 82, in world_state_filter_hook\n    solver.get_model(constraints)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/model.py\", line 101, in get_model\n    ret_model = model_cache.check_quick_sat(simplify(And(*constraints)).raw)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/support_utils.py\", line 63, in check_quick_sat\n    model_copy = deepcopy(model)\n  File \"/usr/lib/python3.10/copy.py\", line 172, in deepcopy\n    y = _reconstruct(x, memo, *rv)\n  File \"/usr/lib/python3.10/copy.py\", line 271, in _reconstruct\n    state = deepcopy(state, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 231, in _deepcopy_dict\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 206, in _deepcopy_list\n    append(deepcopy(a, memo))\n  File \"/usr/lib/python3.10/copy.py\", line 153, in deepcopy\n    y = copier(memo)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6257, in __deepcopy__\n    return self.translate(self.ctx)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6251, in translate\n    return Model(model, target)\nTypeError: Model() takes from 0 to 1 positional arguments but 2 were given\n"}, {"hidden": true, "level": "error", "msg": "Traceback (most recent call last):\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/mythril/mythril_analyzer.py\", line 151, in fire_lasers\n    sym = SymExecWrapper(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/analysis/symbolic.py\", line 182, in __init__\n    self.laser.sym_exec(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 206, in sym_exec\n    self.execute_transactions(created_account.address)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 232, in execute_transactions\n    self._execute_transactions_incremental(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 277, in _execute_transactions_incremental\n    self.open_states = [\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 280, in <listcomp>\n    if state.constraints.is_possible()\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/state/constraints.py\", line 34, in is_possible\n    get_model(self, solver_timeout=solver_timeout)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/model.py\", line 101, in get_model\n    ret_model = model_cache.check_quick_sat(simplify(And(*constraints)).raw)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/support_utils.py\", line 63, in check_quick_sat\n    model_copy = deepcopy(model)\n  File \"/usr/lib/python3.10/copy.py\", line 172, in deepcopy\n    y = _reconstruct(x, memo, *rv)\n  File \"/usr/lib/python3.10/copy.py\", line 271, in _reconstruct\n    state = deepcopy(state, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 231, in _deepcopy_dict\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 206, in _deepcopy_list\n    append(deepcopy(a, memo))\n  File \"/usr/lib/python3.10/copy.py\", line 153, in deepcopy\n    y = copier(memo)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6257, in __deepcopy__\n    return self.translate(self.ctx)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6251, in translate\n    return Model(model, target)\nTypeError: Model() takes from 0 to 1 positional arguments but 2 were given\n"}, {"hidden": true, "level": "error", "msg": "Traceback (most recent call last):\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/mythril/mythril_analyzer.py\", line 151, in fire_lasers\n    sym = SymExecWrapper(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/analysis/symbolic.py\", line 182, in __init__\n    self.laser.sym_exec(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 206, in sym_exec\n    self.execute_transactions(created_account.address)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 232, in execute_transactions\n    self._execute_transactions_incremental(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 277, in _execute_transactions_incremental\n    self.open_states = [\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 280, in <listcomp>\n    if state.constraints.is_possible()\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/state/constraints.py\", line 34, in is_possible\n    get_model(self, solver_timeout=solver_timeout)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/model.py\", line 101, in get_model\n    ret_model = model_cache.check_quick_sat(simplify(And(*constraints)).raw)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/support_utils.py\", line 63, in check_quick_sat\n    model_copy = deepcopy(model)\n  File \"/usr/lib/python3.10/copy.py\", line 172, in deepcopy\n    y = _reconstruct(x, memo, *rv)\n  File \"/usr/lib/python3.10/copy.py\", line 271, in _reconstruct\n    state = deepcopy(state, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 231, in _deepcopy_dict\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 206, in _deepcopy_list\n    append(deepcopy(a, memo))\n  File \"/usr/lib/python3.10/copy.py\", line 153, in deepcopy\n    y = copier(memo)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6257, in __deepcopy__\n    return self.translate(self.ctx)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6251, in translate\n    return Model(model, target)\nTypeError: Model() takes from 0 to 1 positional arguments but 2 were given\n"}, {"hidden": true, "level": "error", "msg": "Traceback (most recent call last):\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/mythril/mythril_analyzer.py\", line 151, in fire_lasers\n    sym = SymExecWrapper(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/analysis/symbolic.py\", line 182, in __init__\n    self.laser.sym_exec(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 206, in sym_exec\n    self.execute_transactions(created_account.address)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 232, in execute_transactions\n    self._execute_transactions_incremental(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 277, in _execute_transactions_incremental\n    self.open_states = [\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 280, in <listcomp>\n    if state.constraints.is_possible()\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/state/constraints.py\", line 34, in is_possible\n    get_model(self, solver_timeout=solver_timeout)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/model.py\", line 101, in get_model\n    ret_model = model_cache.check_quick_sat(simplify(And(*constraints)).raw)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/support_utils.py\", line 63, in check_quick_sat\n    model_copy = deepcopy(model)\n  File \"/usr/lib/python3.10/copy.py\", line 172, in deepcopy\n    y = _reconstruct(x, memo, *rv)\n  File \"/usr/lib/python3.10/copy.py\", line 271, in _reconstruct\n    state = deepcopy(state, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 231, in _deepcopy_dict\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 206, in _deepcopy_list\n    append(deepcopy(a, memo))\n  File \"/usr/lib/python3.10/copy.py\", line 153, in deepcopy\n    y = copier(memo)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6257, in __deepcopy__\n    return self.translate(self.ctx)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6251, in translate\n    return Model(model, target)\nTypeError: Model() takes from 0 to 1 positional arguments but 2 were given\n"}], "mythril_execution_info": {"analysis_duration": 28548720837}}, "sourceFormat": "text", "sourceList": ["Benchmarks/Study_SamplesSet/b7f902d5238ef8f6102acb93a14b35f6.sol", "Benchmarks/Study_SamplesSet/b7f902d5238ef8f6102acb93a14b35f6.sol", "Benchmarks/Study_SamplesSet/b7f902d5238ef8f6102acb93a14b35f6.sol", "Benchmarks/Study_SamplesSet/b7f902d5238ef8f6102acb93a14b35f6.sol", "Benchmarks/Study_SamplesSet/b7f902d5238ef8f6102acb93a14b35f6.sol", "Benchmarks/Study_SamplesSet/b7f902d5238ef8f6102acb93a14b35f6.sol"], "sourceType": "solidity-file"}]
