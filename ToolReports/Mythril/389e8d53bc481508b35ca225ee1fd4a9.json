[{"issues": [{"description": {"head": "A control flow decision is made based on The block.timestamp environment variable.", "tail": "The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners."}, "extra": {"discoveryTime": 741473674, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x60606040526359ddf9b0600255603c60025401600355670de0b6b3a764000060045567016345785d8a0000600555336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506106998061007c6000396000f30060606040523615610081576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063590e1ae31461008b5780638c47ddcc146100955780638da5cb5b146100aa5780639b0ac9b0146100ff5780639ca7c91214610128578063d0e30db014610151578063fc7e286d1461015b575b6100896101a8565b005b61009361030b565b005b34156100a057600080fd5b6100a86104d2565b005b34156100b557600080fd5b6100bd610591565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561010a57600080fd5b6101126105b6565b6040518082815260200191505060405180910390f35b341561013357600080fd5b61013b6105bc565b6040518082815260200191505060405180910390f35b6101596101a8565b005b341561016657600080fd5b610192600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506105c2565b6040518082815260200191505060405180910390f35b600080600254421015156101bb57600080fd5b60055434101515156101cc57600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915061022182346105da90919063ffffffff16565b90506004548111156102c2573373ffffffffffffffffffffffffffffffffffffffff166108fc61025c600454846105f890919063ffffffff16565b9081150290604051600060405180830381858888f1935050505050600454600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610307565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5050565b60008060006002544210158015610323575060035442105b151561032e57600080fd5b67016345785d8a0000341015151561034557600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205492506103b260023073ffffffffffffffffffffffffffffffffffffffff163161061190919063ffffffff16565b91506103c860038461062c90919063ffffffff16565b90506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003073ffffffffffffffffffffffffffffffffffffffff16311180156104365750600081115b156104cd573073ffffffffffffffffffffffffffffffffffffffff1631811115610495573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050506104cc565b3373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050505b5b505050565b60035442101515156104e357600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501561058f576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b60035481565b60016020528060005260406000206000915090505481565b60008082840190508381101515156105ee57fe5b8091505092915050565b600082821115151561060657fe5b818303905092915050565b600080828481151561061f57fe5b0490508091505092915050565b6000808284029050600084148061064d575082848281151561064a57fe5b04145b151561065557fe5b806000101561066357600090505b80915050929150505600a165627a7a72305820b23cfc3f2d928014ef73ab4491c9b111f6956784981e5d4c69af680712a4309e0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}]}, "locations": [{"sourceMap": "438:1:6"}], "severity": "Low", "swcID": "SWC-116", "swcTitle": "Timestamp Dependence"}, {"description": {"head": "A control flow decision is made based on The block.timestamp environment variable.", "tail": "The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners."}, "extra": {"discoveryTime": 832301378, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x21c0000000000001", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x60606040526359ddf9b0600255603c60025401600355670de0b6b3a764000060045567016345785d8a0000600555336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506106998061007c6000396000f30060606040523615610081576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063590e1ae31461008b5780638c47ddcc146100955780638da5cb5b146100aa5780639b0ac9b0146100ff5780639ca7c91214610128578063d0e30db014610151578063fc7e286d1461015b575b6100896101a8565b005b61009361030b565b005b34156100a057600080fd5b6100a86104d2565b005b34156100b557600080fd5b6100bd610591565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561010a57600080fd5b6101126105b6565b6040518082815260200191505060405180910390f35b341561013357600080fd5b61013b6105bc565b6040518082815260200191505060405180910390f35b6101596101a8565b005b341561016657600080fd5b610192600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506105c2565b6040518082815260200191505060405180910390f35b600080600254421015156101bb57600080fd5b60055434101515156101cc57600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915061022182346105da90919063ffffffff16565b90506004548111156102c2573373ffffffffffffffffffffffffffffffffffffffff166108fc61025c600454846105f890919063ffffffff16565b9081150290604051600060405180830381858888f1935050505050600454600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610307565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5050565b60008060006002544210158015610323575060035442105b151561032e57600080fd5b67016345785d8a0000341015151561034557600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205492506103b260023073ffffffffffffffffffffffffffffffffffffffff163161061190919063ffffffff16565b91506103c860038461062c90919063ffffffff16565b90506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003073ffffffffffffffffffffffffffffffffffffffff16311180156104365750600081115b156104cd573073ffffffffffffffffffffffffffffffffffffffff1631811115610495573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050506104cc565b3373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050505b5b505050565b60035442101515156104e357600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501561058f576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b60035481565b60016020528060005260406000206000915090505481565b60008082840190508381101515156105ee57fe5b8091505092915050565b600082821115151561060657fe5b818303905092915050565b600080828481151561061f57fe5b0490508091505092915050565b6000808284029050600084148061064d575082848281151561064a57fe5b04145b151561065557fe5b806000101561066357600090505b80915050929150505600a165627a7a72305820b23cfc3f2d928014ef73ab4491c9b111f6956784981e5d4c69af680712a4309e0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x590e1ae3", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x590e1ae3", "name": "refund()", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0x0"}]}]}, "locations": [{"sourceMap": "796:1:6"}], "severity": "Low", "swcID": "SWC-116", "swcTitle": "Timestamp Dependence"}, {"description": {"head": "A control flow decision is made based on The block.timestamp environment variable.", "tail": "The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners."}, "extra": {"discoveryTime": 898851633, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x1", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x60606040526359ddf9b0600255603c60025401600355670de0b6b3a764000060045567016345785d8a0000600555336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506106998061007c6000396000f30060606040523615610081576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063590e1ae31461008b5780638c47ddcc146100955780638da5cb5b146100aa5780639b0ac9b0146100ff5780639ca7c91214610128578063d0e30db014610151578063fc7e286d1461015b575b6100896101a8565b005b61009361030b565b005b34156100a057600080fd5b6100a86104d2565b005b34156100b557600080fd5b6100bd610591565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561010a57600080fd5b6101126105b6565b6040518082815260200191505060405180910390f35b341561013357600080fd5b61013b6105bc565b6040518082815260200191505060405180910390f35b6101596101a8565b005b341561016657600080fd5b610192600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506105c2565b6040518082815260200191505060405180910390f35b600080600254421015156101bb57600080fd5b60055434101515156101cc57600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915061022182346105da90919063ffffffff16565b90506004548111156102c2573373ffffffffffffffffffffffffffffffffffffffff166108fc61025c600454846105f890919063ffffffff16565b9081150290604051600060405180830381858888f1935050505050600454600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610307565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5050565b60008060006002544210158015610323575060035442105b151561032e57600080fd5b67016345785d8a0000341015151561034557600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205492506103b260023073ffffffffffffffffffffffffffffffffffffffff163161061190919063ffffffff16565b91506103c860038461062c90919063ffffffff16565b90506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003073ffffffffffffffffffffffffffffffffffffffff16311180156104365750600081115b156104cd573073ffffffffffffffffffffffffffffffffffffffff1631811115610495573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050506104cc565b3373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050505b5b505050565b60035442101515156104e357600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501561058f576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b60035481565b60016020528060005260406000206000915090505481565b60008082840190508381101515156105ee57fe5b8091505092915050565b600082821115151561060657fe5b818303905092915050565b600080828481151561061f57fe5b0490508091505092915050565b6000808284029050600084148061064d575082848281151561064a57fe5b04145b151561065557fe5b806000101561066357600090505b80915050929150505600a165627a7a72305820b23cfc3f2d928014ef73ab4491c9b111f6956784981e5d4c69af680712a4309e0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x590e1ae3", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x590e1ae3", "name": "refund()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x0"}]}]}, "locations": [{"sourceMap": "809:1:6"}], "severity": "Low", "swcID": "SWC-116", "swcTitle": "Timestamp Dependence"}, {"description": {"head": "A control flow decision is made based on The block.timestamp environment variable.", "tail": "The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners."}, "extra": {"discoveryTime": 953065633, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x60606040526359ddf9b0600255603c60025401600355670de0b6b3a764000060045567016345785d8a0000600555336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506106998061007c6000396000f30060606040523615610081576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063590e1ae31461008b5780638c47ddcc146100955780638da5cb5b146100aa5780639b0ac9b0146100ff5780639ca7c91214610128578063d0e30db014610151578063fc7e286d1461015b575b6100896101a8565b005b61009361030b565b005b34156100a057600080fd5b6100a86104d2565b005b34156100b557600080fd5b6100bd610591565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561010a57600080fd5b6101126105b6565b6040518082815260200191505060405180910390f35b341561013357600080fd5b61013b6105bc565b6040518082815260200191505060405180910390f35b6101596101a8565b005b341561016657600080fd5b610192600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506105c2565b6040518082815260200191505060405180910390f35b600080600254421015156101bb57600080fd5b60055434101515156101cc57600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915061022182346105da90919063ffffffff16565b90506004548111156102c2573373ffffffffffffffffffffffffffffffffffffffff166108fc61025c600454846105f890919063ffffffff16565b9081150290604051600060405180830381858888f1935050505050600454600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610307565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5050565b60008060006002544210158015610323575060035442105b151561032e57600080fd5b67016345785d8a0000341015151561034557600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205492506103b260023073ffffffffffffffffffffffffffffffffffffffff163161061190919063ffffffff16565b91506103c860038461062c90919063ffffffff16565b90506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003073ffffffffffffffffffffffffffffffffffffffff16311180156104365750600081115b156104cd573073ffffffffffffffffffffffffffffffffffffffff1631811115610495573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050506104cc565b3373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050505b5b505050565b60035442101515156104e357600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501561058f576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b60035481565b60016020528060005260406000206000915090505481565b60008082840190508381101515156105ee57fe5b8091505092915050565b600082821115151561060657fe5b818303905092915050565b600080828481151561061f57fe5b0490508091505092915050565b6000808284029050600084148061064d575082848281151561064a57fe5b04145b151561065557fe5b806000101561066357600090505b80915050929150505600a165627a7a72305820b23cfc3f2d928014ef73ab4491c9b111f6956784981e5d4c69af680712a4309e0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x8c47ddcc", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x8c47ddcc", "name": "refundOwner()", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "resolved_input": null, "value": "0x0"}]}]}, "locations": [{"sourceMap": "1246:1:6"}], "severity": "Low", "swcID": "SWC-116", "swcTitle": "Timestamp Dependence"}], "meta": {"logs": [{"hidden": true, "level": "error", "msg": "Traceback (most recent call last):\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 445, in execute_state\n    ).evaluate(global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/instructions.py\", line 265, in evaluate\n    result = instruction_mutator(global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/instructions.py\", line 196, in wrapper\n    new_global_states = self.call_on_state_copy(func, func_obj, global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/instructions.py\", line 131, in call_on_state_copy\n    return func(func_obj, global_state_copy)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/instructions.py\", line 1889, in return_\n    global_state.current_transaction.end(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/transaction/transaction_models.py\", line 203, in end\n    raise TransactionEndSignal(global_state, revert)\nmythril.laser.ethereum.transaction.transaction_models.TransactionEndSignal: (<mythril.laser.ethereum.state.global_state.GlobalState object at 0x7f87faad5fc0>, False)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/mythril/mythril_analyzer.py\", line 151, in fire_lasers\n    sym = SymExecWrapper(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/analysis/symbolic.py\", line 182, in __init__\n    self.laser.sym_exec(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 206, in sym_exec\n    self.execute_transactions(created_account.address)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 232, in execute_transactions\n    self._execute_transactions_incremental(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 302, in _execute_transactions_incremental\n    execute_message_call(self, address, func_hashes=func_hashes)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/transaction/symbolic.py\", line 151, in execute_message_call\n    laser_evm.exec()\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 344, in exec\n    new_states, op_code = self.execute_state(global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 496, in execute_state\n    self._add_world_state(end_signal.global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 374, in _add_world_state\n    hook(global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/plugin/plugins/mutation_pruner.py\", line 82, in world_state_filter_hook\n    solver.get_model(constraints)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/model.py\", line 101, in get_model\n    ret_model = model_cache.check_quick_sat(simplify(And(*constraints)).raw)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/support_utils.py\", line 63, in check_quick_sat\n    model_copy = deepcopy(model)\n  File \"/usr/lib/python3.10/copy.py\", line 172, in deepcopy\n    y = _reconstruct(x, memo, *rv)\n  File \"/usr/lib/python3.10/copy.py\", line 271, in _reconstruct\n    state = deepcopy(state, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 231, in _deepcopy_dict\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 206, in _deepcopy_list\n    append(deepcopy(a, memo))\n  File \"/usr/lib/python3.10/copy.py\", line 153, in deepcopy\n    y = copier(memo)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6257, in __deepcopy__\n    return self.translate(self.ctx)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6251, in translate\n    return Model(model, target)\nTypeError: Model() takes from 0 to 1 positional arguments but 2 were given\n"}, {"hidden": true, "level": "error", "msg": "Traceback (most recent call last):\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/mythril/mythril_analyzer.py\", line 151, in fire_lasers\n    sym = SymExecWrapper(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/analysis/symbolic.py\", line 182, in __init__\n    self.laser.sym_exec(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 206, in sym_exec\n    self.execute_transactions(created_account.address)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 232, in execute_transactions\n    self._execute_transactions_incremental(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 277, in _execute_transactions_incremental\n    self.open_states = [\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 280, in <listcomp>\n    if state.constraints.is_possible()\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/state/constraints.py\", line 34, in is_possible\n    get_model(self, solver_timeout=solver_timeout)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/model.py\", line 101, in get_model\n    ret_model = model_cache.check_quick_sat(simplify(And(*constraints)).raw)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/support_utils.py\", line 63, in check_quick_sat\n    model_copy = deepcopy(model)\n  File \"/usr/lib/python3.10/copy.py\", line 172, in deepcopy\n    y = _reconstruct(x, memo, *rv)\n  File \"/usr/lib/python3.10/copy.py\", line 271, in _reconstruct\n    state = deepcopy(state, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 231, in _deepcopy_dict\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 206, in _deepcopy_list\n    append(deepcopy(a, memo))\n  File \"/usr/lib/python3.10/copy.py\", line 153, in deepcopy\n    y = copier(memo)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6257, in __deepcopy__\n    return self.translate(self.ctx)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6251, in translate\n    return Model(model, target)\nTypeError: Model() takes from 0 to 1 positional arguments but 2 were given\n"}, {"hidden": true, "level": "error", "msg": "Traceback (most recent call last):\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/mythril/mythril_analyzer.py\", line 151, in fire_lasers\n    sym = SymExecWrapper(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/analysis/symbolic.py\", line 182, in __init__\n    self.laser.sym_exec(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 206, in sym_exec\n    self.execute_transactions(created_account.address)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 232, in execute_transactions\n    self._execute_transactions_incremental(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 277, in _execute_transactions_incremental\n    self.open_states = [\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 280, in <listcomp>\n    if state.constraints.is_possible()\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/state/constraints.py\", line 34, in is_possible\n    get_model(self, solver_timeout=solver_timeout)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/model.py\", line 101, in get_model\n    ret_model = model_cache.check_quick_sat(simplify(And(*constraints)).raw)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/support_utils.py\", line 63, in check_quick_sat\n    model_copy = deepcopy(model)\n  File \"/usr/lib/python3.10/copy.py\", line 172, in deepcopy\n    y = _reconstruct(x, memo, *rv)\n  File \"/usr/lib/python3.10/copy.py\", line 271, in _reconstruct\n    state = deepcopy(state, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 231, in _deepcopy_dict\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 206, in _deepcopy_list\n    append(deepcopy(a, memo))\n  File \"/usr/lib/python3.10/copy.py\", line 153, in deepcopy\n    y = copier(memo)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6257, in __deepcopy__\n    return self.translate(self.ctx)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6251, in translate\n    return Model(model, target)\nTypeError: Model() takes from 0 to 1 positional arguments but 2 were given\n"}], "mythril_execution_info": {"analysis_duration": 1443147898}}, "sourceFormat": "text", "sourceList": ["Benchmarks/Study_SamplesSet/389e8d53bc481508b35ca225ee1fd4a9.sol", "Benchmarks/Study_SamplesSet/389e8d53bc481508b35ca225ee1fd4a9.sol", "Benchmarks/Study_SamplesSet/389e8d53bc481508b35ca225ee1fd4a9.sol"], "sourceType": "solidity-file"}]
