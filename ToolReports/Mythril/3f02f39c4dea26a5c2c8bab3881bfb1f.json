[{"issues": [{"description": {"head": "A control flow decision is made based on The block.number environment variable.", "tail": "The block.number environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners."}, "extra": {"discoveryTime": 191610813, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x8", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "01010101010101010101010101", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x60606040526000600460146101000a81548160ff021916908315150217905550341561002757fe5b604051606080610d9e833981016040528080519060200190919080519060200190919080519060200190919050505b60008373ffffffffffffffffffffffffffffffffffffffff16141561007b5760006000fd5b5b438211151561008b5760006000fd5b5b818111151561009b5760006000fd5b5b82600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600081905550806001819055505b5050505b610c9f806100ff6000396000f300606060405236156100ef576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461010157806318160ddd1461019a57806324dcd0ef146101c0578063313ce56714610217578063411b007e146102435780634258d771146102955780634bb278f3146102bf57806370a08231146102d157806391b43d131461031b57806395d89b4114610341578063a14e88fe146103da578063a9059cbb14610400578063b7bb018d14610457578063cf8d652c1461047d578063d648a647146104a3578063eb614fc7146104c9578063f91c022b146104ef575b6100ff5b6100fc33610515565b5b565b005b341561010957fe5b610111610680565b6040518080602001828103825283818151815260200191508051906020019080838360008314610160575b8051825260208311156101605760208201915060208101905060208303925061013c565b505050905090810190601f16801561018c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101a257fe5b6101aa6106ba565b6040518082815260200191505060405180910390f35b34156101c857fe5b6101fd600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506106c5565b604051808215151515815260200191505060405180910390f35b341561021f57fe5b6102276108be565b604051808260ff1660ff16815260200191505060405180910390f35b341561024b57fe5b6102536108c3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561029d57fe5b6102a56108e9565b604051808215151515815260200191505060405180910390f35b34156102c757fe5b6102cf6108fc565b005b34156102d957fe5b610305600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506109ca565b6040518082815260200191505060405180910390f35b341561032357fe5b61032b610a14565b6040518082815260200191505060405180910390f35b341561034957fe5b610351610a1a565b60405180806020018281038252838181518152602001915080519060200190808383600083146103a0575b8051825260208311156103a05760208201915060208101905060208303925061037c565b505050905090810190601f1680156103cc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156103e257fe5b6103ea610a54565b6040518082815260200191505060405180910390f35b341561040857fe5b61043d600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610a64565b604051808215151515815260200191505060405180910390f35b341561045f57fe5b610467610c4a565b6040518082815260200191505060405180910390f35b341561048557fe5b61048d610c50565b6040518082815260200191505060405180910390f35b34156104ab57fe5b6104b3610c56565b6040518082815260200191505060405180910390f35b34156104d157fe5b6104d9610c5c565b6040518082815260200191505060405180910390f35b34156104f757fe5b6104ff610c62565b6040518082815260200191505060405180910390f35b6000600460149054906101000a900460ff16156105325760006000fd5b5b6000544310156105435760006000fd5b5b6001544311156105545760006000fd5b5b60003414156105645760006000fd5b5b611388340290508060056000828254019250508190555080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f19350505050151561062b57fe5b8173ffffffffffffffffffffffffffffffffffffffff1660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35b5050565b604060405190810160405280601381526020017f5361696e742041726e6f756c6420546f6b656e0000000000000000000000000081525081565b600060055490505b90565b60006000600460149054906101000a900460ff1615156106e55760006000fd5b5b600354431115156106f75760006000fd5b5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107555760006000fd5b5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101580156107a85750600083115b156108b157828103905080600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3600191506108b7565b5b600091505b5092915050565b601281565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460149054906101000a900460ff1681565b6001544311151561090d5760006000fd5b5b6064600a6005540281151561091f57fe5b0460028190555060025460066000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600254600560008282540192505081905550620d2f0043016003819055506001600460146101000a81548160ff0219169083151502179055505b565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b919050565b60015481565b604060405190810160405280600381526020017f534154000000000000000000000000000000000000000000000000000000000081525081565b611388678ac7230489e800000281565b60006000600460149054906101000a900460ff161515610a845760006000fd5b5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610ae15760006000fd5b5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110158015610b345750600083115b15610c3d57828103905080600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150610c43565b5b600091505b5092915050565b60035481565b61138881565b60005481565b60025481565b6113886831df9095a18f60000002815600a165627a7a723058202c576fa37323c23d0003776b594fce502ab6933e847118596cf1bff7995880ae002901010101010101010101010101", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}]}, "locations": [{"sourceMap": "133:1:1"}], "severity": "Low", "swcID": "SWC-120", "swcTitle": "Weak Sources of Randomness from Chain Attributes"}, {"description": {"head": "An assertion violation was triggered.", "tail": "It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values)."}, "extra": {"discoveryTime": 82855939, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x300004b", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x60606040526000600460146101000a81548160ff021916908315150217905550341561002757fe5b604051606080610d9e833981016040528080519060200190919080519060200190919080519060200190919050505b60008373ffffffffffffffffffffffffffffffffffffffff16141561007b5760006000fd5b5b438211151561008b5760006000fd5b5b818111151561009b5760006000fd5b5b82600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600081905550806001819055505b5050505b610c9f806100ff6000396000f300606060405236156100ef576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461010157806318160ddd1461019a57806324dcd0ef146101c0578063313ce56714610217578063411b007e146102435780634258d771146102955780634bb278f3146102bf57806370a08231146102d157806391b43d131461031b57806395d89b4114610341578063a14e88fe146103da578063a9059cbb14610400578063b7bb018d14610457578063cf8d652c1461047d578063d648a647146104a3578063eb614fc7146104c9578063f91c022b146104ef575b6100ff5b6100fc33610515565b5b565b005b341561010957fe5b610111610680565b6040518080602001828103825283818151815260200191508051906020019080838360008314610160575b8051825260208311156101605760208201915060208101905060208303925061013c565b505050905090810190601f16801561018c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101a257fe5b6101aa6106ba565b6040518082815260200191505060405180910390f35b34156101c857fe5b6101fd600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506106c5565b604051808215151515815260200191505060405180910390f35b341561021f57fe5b6102276108be565b604051808260ff1660ff16815260200191505060405180910390f35b341561024b57fe5b6102536108c3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561029d57fe5b6102a56108e9565b604051808215151515815260200191505060405180910390f35b34156102c757fe5b6102cf6108fc565b005b34156102d957fe5b610305600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506109ca565b6040518082815260200191505060405180910390f35b341561032357fe5b61032b610a14565b6040518082815260200191505060405180910390f35b341561034957fe5b610351610a1a565b60405180806020018281038252838181518152602001915080519060200190808383600083146103a0575b8051825260208311156103a05760208201915060208101905060208303925061037c565b505050905090810190601f1680156103cc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156103e257fe5b6103ea610a54565b6040518082815260200191505060405180910390f35b341561040857fe5b61043d600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610a64565b604051808215151515815260200191505060405180910390f35b341561045f57fe5b610467610c4a565b6040518082815260200191505060405180910390f35b341561048557fe5b61048d610c50565b6040518082815260200191505060405180910390f35b34156104ab57fe5b6104b3610c56565b6040518082815260200191505060405180910390f35b34156104d157fe5b6104d9610c5c565b6040518082815260200191505060405180910390f35b34156104f757fe5b6104ff610c62565b6040518082815260200191505060405180910390f35b6000600460149054906101000a900460ff16156105325760006000fd5b5b6000544310156105435760006000fd5b5b6001544311156105545760006000fd5b5b60003414156105645760006000fd5b5b611388340290508060056000828254019250508190555080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f19350505050151561062b57fe5b8173ffffffffffffffffffffffffffffffffffffffff1660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35b5050565b604060405190810160405280601381526020017f5361696e742041726e6f756c6420546f6b656e0000000000000000000000000081525081565b600060055490505b90565b60006000600460149054906101000a900460ff1615156106e55760006000fd5b5b600354431115156106f75760006000fd5b5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107555760006000fd5b5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101580156107a85750600083115b156108b157828103905080600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a3600191506108b7565b5b600091505b5092915050565b601281565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460149054906101000a900460ff1681565b6001544311151561090d5760006000fd5b5b6064600a6005540281151561091f57fe5b0460028190555060025460066000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600254600560008282540192505081905550620d2f0043016003819055506001600460146101000a81548160ff0219169083151502179055505b565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b919050565b60015481565b604060405190810160405280600381526020017f534154000000000000000000000000000000000000000000000000000000000081525081565b611388678ac7230489e800000281565b60006000600460149054906101000a900460ff161515610a845760006000fd5b5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610ae15760006000fd5b5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110158015610b345750600083115b15610c3d57828103905080600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a360019150610c43565b5b600091505b5092915050565b60035481565b61138881565b60005481565b60025481565b6113886831df9095a18f60000002815600a165627a7a723058202c576fa37323c23d0003776b594fce502ab6933e847118596cf1bff7995880ae0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x1"}]}]}, "locations": [{"sourceMap": "38:1:1"}], "severity": "Medium", "swcID": "SWC-110", "swcTitle": "Assert Violation"}], "meta": {"logs": [{"hidden": true, "level": "error", "msg": "Traceback (most recent call last):\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/mythril/mythril_analyzer.py\", line 151, in fire_lasers\n    sym = SymExecWrapper(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/analysis/symbolic.py\", line 182, in __init__\n    self.laser.sym_exec(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 206, in sym_exec\n    self.execute_transactions(created_account.address)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 232, in execute_transactions\n    self._execute_transactions_incremental(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 277, in _execute_transactions_incremental\n    self.open_states = [\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 280, in <listcomp>\n    if state.constraints.is_possible()\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/state/constraints.py\", line 34, in is_possible\n    get_model(self, solver_timeout=solver_timeout)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/model.py\", line 101, in get_model\n    ret_model = model_cache.check_quick_sat(simplify(And(*constraints)).raw)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/support_utils.py\", line 63, in check_quick_sat\n    model_copy = deepcopy(model)\n  File \"/usr/lib/python3.10/copy.py\", line 172, in deepcopy\n    y = _reconstruct(x, memo, *rv)\n  File \"/usr/lib/python3.10/copy.py\", line 271, in _reconstruct\n    state = deepcopy(state, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 231, in _deepcopy_dict\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 206, in _deepcopy_list\n    append(deepcopy(a, memo))\n  File \"/usr/lib/python3.10/copy.py\", line 153, in deepcopy\n    y = copier(memo)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6257, in __deepcopy__\n    return self.translate(self.ctx)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6251, in translate\n    return Model(model, target)\nTypeError: Model() takes from 0 to 1 positional arguments but 2 were given\n"}], "mythril_execution_info": {"analysis_duration": 1192790508}}, "sourceFormat": "text", "sourceList": ["Benchmarks/Study_SamplesSet/3f02f39c4dea26a5c2c8bab3881bfb1f.sol"], "sourceType": "solidity-file"}]
