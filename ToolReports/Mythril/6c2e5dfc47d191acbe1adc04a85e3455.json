[{"issues": [{"description": {"head": "An assertion violation was triggered.", "tail": "It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values)."}, "extra": {"discoveryTime": 1791041851, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x60606040527323b385c822381be63c9f45a3e45266dd32d52c436000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550733bdc0d871731d08d1c1c793735372ab16397cd61600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034156100b857600080fd5b610baa806100c76000396000f300606060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306b2e6071461009e57806312c89869146100cb578063499831f21461010257806356b4d76014610117578063730bdc961461017a578063a4623cc414610250578063b4d657cc146102d5578063b7ded7cc14610301578063f42b1ae014610319575b600080fd5b34156100a957600080fd5b6100b161032e565b604051808215151515815260200191505060405180910390f35b34156100d657600080fd5b6100ec6004808035906020019091905050610345565b6040518082815260200191505060405180910390f35b341561010d57600080fd5b61011561036f565b005b341561012257600080fd5b61013860048080359060200190919050506103e7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561018557600080fd5b61019b6004808035906020019091905050610431565b60405180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828103825285818151815260200191508051906020019080838360005b838110156102135780820151818401526020810190506101f8565b50505050905090810190601f1680156102405780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b341561025b57600080fd5b6102d3600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610532565b005b34156102e057600080fd5b6102ff600480803590602001909190803590602001909190505061065e565b005b610317600480803590602001909190505061073e565b005b341561032457600080fd5b61032c61093a565b005b6000600360009054906101000a900460ff16905090565b600060028281548110151561035657fe5b9060005260206000209060030201600201549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103ca57600080fd5b6001600360006101000a81548160ff021916908315150217905550565b60006002828154811015156103f857fe5b906000526020600020906003020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6104396109ed565b600080600060028581548110151561044d57fe5b90600052602060002090600302019050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104f55780601f106104ca576101008083540402835291602001916104f5565b820191906000526020600020905b8154815290600101906020018083116104d857829003601f168201915b505050505093508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16925080600201549150509193909250565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561058d57600080fd5b600280548060010182816105a19190610a01565b916000526020600020906003020160006060604051908101604052808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018581525090919091506000820151816000019080519060200190610604929190610a33565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155505050505050565b60008111151561066d57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff1660028381548110151561069357fe5b906000526020600020906003020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156106e757600080fd5b6002828154811015156106f657fe5b9060005260206000209060030201600201548110151561071557600080fd5b8060028381548110151561072557fe5b9060005260206000209060030201600201819055505050565b60008060028381548110151561075057fe5b9060005260206000209060030201600201543414151561076f57600080fd5b60001515600360009054906101000a900460ff16151514151561079157600080fd5b600a3481151561079d57fe5b04915081340390506002838154811015156107b457fe5b906000526020600020906003020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561082557600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050151561088757600080fd5b3360028481548110151561089757fe5b906000526020600020906003020160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109116002848154811015156108f857fe5b90600052602060002090600302016002015460026109b2565b60028481548110151561092057fe5b906000526020600020906003020160020181905550505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561099557600080fd5b6000600360006101000a81548160ff021916908315150217905550565b60008060008414156109c757600091506109e6565b82840290508284828115156109d857fe5b041415156109e257fe5b8091505b5092915050565b602060405190810160405280600081525090565b815481835581811511610a2e57600302816003028360005260206000209182019101610a2d9190610ab3565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610a7457805160ff1916838001178555610aa2565b82800160010185558215610aa2579182015b82811115610aa1578251825591602001919060010190610a86565b5b509050610aaf9190610b11565b5090565b610b0e91905b80821115610b0a5760008082016000610ad29190610b36565b6001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600282016000905550600301610ab9565b5090565b90565b610b3391905b80821115610b2f576000816000905550600101610b17565b5090565b90565b50805460018160011615610100020316600290046000825580601f10610b5c5750610b7b565b601f016020900490600052602060002090810190610b7a9190610b11565b5b505600a165627a7a723058201f501d50c86f1429be5d0fa0f33dd6ab414c939262c5841d209a0973dbc988dc0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x12c89869", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x12c89869", "name": "getHeroCurrentPrice(uint256)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "resolved_input": null, "value": "0x0"}]}]}, "locations": [{"sourceMap": "853:1:2"}], "severity": "Medium", "swcID": "SWC-110", "swcTitle": "Assert Violation"}, {"description": {"head": "An assertion violation was triggered.", "tail": "It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values)."}, "extra": {"discoveryTime": 2439018487, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x60606040527323b385c822381be63c9f45a3e45266dd32d52c436000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550733bdc0d871731d08d1c1c793735372ab16397cd61600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034156100b857600080fd5b610baa806100c76000396000f300606060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306b2e6071461009e57806312c89869146100cb578063499831f21461010257806356b4d76014610117578063730bdc961461017a578063a4623cc414610250578063b4d657cc146102d5578063b7ded7cc14610301578063f42b1ae014610319575b600080fd5b34156100a957600080fd5b6100b161032e565b604051808215151515815260200191505060405180910390f35b34156100d657600080fd5b6100ec6004808035906020019091905050610345565b6040518082815260200191505060405180910390f35b341561010d57600080fd5b61011561036f565b005b341561012257600080fd5b61013860048080359060200190919050506103e7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561018557600080fd5b61019b6004808035906020019091905050610431565b60405180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828103825285818151815260200191508051906020019080838360005b838110156102135780820151818401526020810190506101f8565b50505050905090810190601f1680156102405780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b341561025b57600080fd5b6102d3600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610532565b005b34156102e057600080fd5b6102ff600480803590602001909190803590602001909190505061065e565b005b610317600480803590602001909190505061073e565b005b341561032457600080fd5b61032c61093a565b005b6000600360009054906101000a900460ff16905090565b600060028281548110151561035657fe5b9060005260206000209060030201600201549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103ca57600080fd5b6001600360006101000a81548160ff021916908315150217905550565b60006002828154811015156103f857fe5b906000526020600020906003020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6104396109ed565b600080600060028581548110151561044d57fe5b90600052602060002090600302019050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104f55780601f106104ca576101008083540402835291602001916104f5565b820191906000526020600020905b8154815290600101906020018083116104d857829003601f168201915b505050505093508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16925080600201549150509193909250565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561058d57600080fd5b600280548060010182816105a19190610a01565b916000526020600020906003020160006060604051908101604052808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018581525090919091506000820151816000019080519060200190610604929190610a33565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155505050505050565b60008111151561066d57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff1660028381548110151561069357fe5b906000526020600020906003020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156106e757600080fd5b6002828154811015156106f657fe5b9060005260206000209060030201600201548110151561071557600080fd5b8060028381548110151561072557fe5b9060005260206000209060030201600201819055505050565b60008060028381548110151561075057fe5b9060005260206000209060030201600201543414151561076f57600080fd5b60001515600360009054906101000a900460ff16151514151561079157600080fd5b600a3481151561079d57fe5b04915081340390506002838154811015156107b457fe5b906000526020600020906003020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561082557600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050151561088757600080fd5b3360028481548110151561089757fe5b906000526020600020906003020160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109116002848154811015156108f857fe5b90600052602060002090600302016002015460026109b2565b60028481548110151561092057fe5b906000526020600020906003020160020181905550505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561099557600080fd5b6000600360006101000a81548160ff021916908315150217905550565b60008060008414156109c757600091506109e6565b82840290508284828115156109d857fe5b041415156109e257fe5b8091505b5092915050565b602060405190810160405280600081525090565b815481835581811511610a2e57600302816003028360005260206000209182019101610a2d9190610ab3565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610a7457805160ff1916838001178555610aa2565b82800160010185558215610aa2579182015b82811115610aa1578251825591602001919060010190610a86565b5b509050610aaf9190610b11565b5090565b610b0e91905b80821115610b0a5760008082016000610ad29190610b36565b6001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600282016000905550600301610ab9565b5090565b90565b610b3391905b80821115610b2f576000816000905550600101610b17565b5090565b90565b50805460018160011615610100020316600290046000825580601f10610b5c5750610b7b565b601f016020900490600052602060002090810190610b7a9190610b11565b5b505600a165627a7a723058201f501d50c86f1429be5d0fa0f33dd6ab414c939262c5841d209a0973dbc988dc0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "0x56b4d760", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x56b4d760", "name": "getHeroOwner(uint256)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "resolved_input": null, "value": "0x0"}]}]}, "locations": [{"sourceMap": "1015:1:2"}], "severity": "Medium", "swcID": "SWC-110", "swcTitle": "Assert Violation"}], "meta": {"logs": [{"hidden": true, "level": "error", "msg": "Traceback (most recent call last):\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 445, in execute_state\n    ).evaluate(global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/instructions.py\", line 265, in evaluate\n    result = instruction_mutator(global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/instructions.py\", line 196, in wrapper\n    new_global_states = self.call_on_state_copy(func, func_obj, global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/instructions.py\", line 131, in call_on_state_copy\n    return func(func_obj, global_state_copy)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/instructions.py\", line 1889, in return_\n    global_state.current_transaction.end(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/transaction/transaction_models.py\", line 203, in end\n    raise TransactionEndSignal(global_state, revert)\nmythril.laser.ethereum.transaction.transaction_models.TransactionEndSignal: (<mythril.laser.ethereum.state.global_state.GlobalState object at 0x7fb56c2426b0>, False)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/mythril/mythril_analyzer.py\", line 151, in fire_lasers\n    sym = SymExecWrapper(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/analysis/symbolic.py\", line 182, in __init__\n    self.laser.sym_exec(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 206, in sym_exec\n    self.execute_transactions(created_account.address)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 232, in execute_transactions\n    self._execute_transactions_incremental(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 302, in _execute_transactions_incremental\n    execute_message_call(self, address, func_hashes=func_hashes)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/transaction/symbolic.py\", line 151, in execute_message_call\n    laser_evm.exec()\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 344, in exec\n    new_states, op_code = self.execute_state(global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 496, in execute_state\n    self._add_world_state(end_signal.global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 374, in _add_world_state\n    hook(global_state)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/plugin/plugins/mutation_pruner.py\", line 82, in world_state_filter_hook\n    solver.get_model(constraints)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/model.py\", line 101, in get_model\n    ret_model = model_cache.check_quick_sat(simplify(And(*constraints)).raw)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/support_utils.py\", line 63, in check_quick_sat\n    model_copy = deepcopy(model)\n  File \"/usr/lib/python3.10/copy.py\", line 172, in deepcopy\n    y = _reconstruct(x, memo, *rv)\n  File \"/usr/lib/python3.10/copy.py\", line 271, in _reconstruct\n    state = deepcopy(state, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 231, in _deepcopy_dict\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 206, in _deepcopy_list\n    append(deepcopy(a, memo))\n  File \"/usr/lib/python3.10/copy.py\", line 153, in deepcopy\n    y = copier(memo)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6257, in __deepcopy__\n    return self.translate(self.ctx)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6251, in translate\n    return Model(model, target)\nTypeError: Model() takes from 0 to 1 positional arguments but 2 were given\n"}], "mythril_execution_info": {"analysis_duration": 2448344946}}, "sourceFormat": "text", "sourceList": ["Benchmarks/Study_SamplesSet/6c2e5dfc47d191acbe1adc04a85e3455.sol"], "sourceType": "solidity-file"}]
