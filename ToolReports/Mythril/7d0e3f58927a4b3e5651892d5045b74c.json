[{"issues": [{"description": {"head": "An assertion violation was triggered.", "tail": "It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values)."}, "extra": {"discoveryTime": 91926574, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2000025", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x60606040526802b5e3af16b1880000600755690a968163f0a57b4000006008556103e8600955610535600a556104e2600b55610457600c55635a03393c600d55635a05dc3c600e55635a0b223c600f55635a10683c6010556000601155600060125560006013556000601455600060155560006016556001601760006101000a81548160ff021916908315150217905550341561009857fe5b5b737aa43ef8aa1829fce420fd1f9e6ebbe2212b3e067376ca9140540988d36f7be7a8b1172e09e6d8a26c5b5b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b81600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50505b5b61225f806102416000396000f300606060405236156102a7576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806303cba01e146102d0578063046f7da2146102f657806309276ea41461030857806312cc9dd31461035a5780631c31f7101461038657806322d60d17146103bc57806324d3eaf3146103e25780632911c9e7146104085780633020a18e14610434578063308e1b2f14610456578063317c0ae9146104825780633197cbb6146104f05780633777f5d01461051657806338af3eed1461053c5780633b574beb1461058e5780633cf43e2c146105b45780634bb278f3146105e05780634e71e0c8146105f257806353aaef7d1461060457806357ea563a14610638578063590d431a146106a657806359e08fe1146106d25780635c975abb146106fc57806361053cd31461072657806363b20117146107945780636605ff66146107ba5780636d98e9fc146107e057806371b9b64614610806578063724bdbaf1461083057806372841e0c14610874578063760672df1461089e578063779e170d146108db578063784fdf261461090557806378e979251461092b5780638456cb5914610951578063890a018d146109635780638d24f5bc14610aba5780638d4e408314610b285780638da5cb5b14610b525780639b234a9e14610ba4578063a000aeb714610c12578063a6d4e9da14610c38578063abbb469514610cb2578063b85dfb8014610ce8578063b928024d14610d39578063bbe4fd5014610d5f578063d1bb7b5914610d85578063d935c8b414610dab578063deb2432b14610dd1578063dec74ae914610dfd578063e30c397814610e29578063ecb70a9814610e7b578063f1c4ecb414610ee9578063f2fde38b14610f0f578063fc0c546a14610f45578063fe1da52814610f97578063fe67a18914611005575b6102ce5b601760009054906101000a900460ff16156102cb576102ca333461102b565b5b5b565b005b34156102d857fe5b6102e061128b565b6040518082815260200191505060405180910390f35b34156102fe57fe5b610306611291565b005b341561031057fe5b61031861132a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561036257fe5b61036a611350565b604051808260ff1660ff16815260200191505060405180910390f35b341561038e57fe5b6103ba600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611365565b005b34156103c457fe5b6103cc611487565b6040518082815260200191505060405180910390f35b34156103ea57fe5b6103f261148d565b6040518082815260200191505060405180910390f35b341561041057fe5b610418611493565b604051808260ff1660ff16815260200191505060405180910390f35b341561043c57fe5b610454600480803515159060200190919050506114a8565b005b341561045e57fe5b610466611524565b604051808260ff1660ff16815260200191505060405180910390f35b341561048a57fe5b6104da600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611539565b6040518082815260200191505060405180910390f35b34156104f857fe5b61050061154e565b6040518082815260200191505060405180910390f35b341561051e57fe5b610526611554565b6040518082815260200191505060405180910390f35b341561054457fe5b61054c61155a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561059657fe5b61059e611580565b6040518082815260200191505060405180910390f35b34156105bc57fe5b6105c4611586565b604051808260ff1660ff16815260200191505060405180910390f35b34156105e857fe5b6105f061159b565b005b34156105fa57fe5b6106026116a6565b005b341561060c57fe5b61062260048080359060200190919050506117a5565b6040518082815260200191505060405180910390f35b341561064057fe5b610690600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506117c0565b6040518082815260200191505060405180910390f35b34156106ae57fe5b6106b66117d5565b604051808260ff1660ff16815260200191505060405180910390f35b34156106da57fe5b6106e26117ea565b604051808215151515815260200191505060405180910390f35b341561070457fe5b61070c6117fe565b604051808215151515815260200191505060405180910390f35b341561072e57fe5b61077e600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611811565b6040518082815260200191505060405180910390f35b341561079c57fe5b6107a4611826565b6040518082815260200191505060405180910390f35b34156107c257fe5b6107ca61182c565b6040518082815260200191505060405180910390f35b34156107e857fe5b6107f0611842565b6040518082815260200191505060405180910390f35b341561080e57fe5b610816611848565b604051808215151515815260200191505060405180910390f35b341561083857fe5b61085e600480803560ff169060200190919080356000191690602001909190505061185b565b6040518082815260200191505060405180910390f35b341561087c57fe5b610884611880565b604051808215151515815260200191505060405180910390f35b34156108a657fe5b6108c56004808035906020019091908035906020019091905050611890565b6040518082815260200191505060405180910390f35b34156108e357fe5b6108eb611911565b604051808215151515815260200191505060405180910390f35b341561090d57fe5b61091561193a565b6040518082815260200191505060405180910390f35b341561093357fe5b61093b611940565b6040518082815260200191505060405180910390f35b341561095957fe5b610961611946565b005b341561096b57fe5b610abc2565b005b3415610ac257fe5b610b12600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611ba0565b6040518082815260200191505060405180910390f35b3415610b3057fe5b610b38611bb5565b604051808215151515815260200191505060405180910390f35b3415610b5a57fe5b610b62611bc3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610bac57fe5b610bfc600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611be9565b6040518082815260200191505060405180910390f35b3415610c1a57fe5b610c22611bfe565b6040518082815260200191505060405180910390f35b3415610c4057fe5b610c9c600480803560ff1690602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611c04565b6040518082815260200191505060405180910390f35b3415610cba57fe5b610ce6600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611ca2565b005b3415610cf057fe5b610d1c600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611dc4565b604051808381526020018281526020019250505060405180910390f35b3415610d4157fe5b610d49611de8565b6040518082815260200191505060405180910390f35b3415610d6757fe5b610d6f611dee565b6040518082815260200191505060405180910390f35b3415610d8d57fe5b610d95611df7565b6040518082815260200191505060405180910390f35b3415610db357fe5b610dbb611dfd565b6040518082815260200191505060405180910390f35b3415610dd957fe5b610de1611e03565b604051808260ff1660ff16815260200191505060405180910390f35b3415610e0557fe5b610e0d611e18565b604051808260ff1660ff16815260200191505060405180910390f35b3415610e3157fe5b610e39611e2d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610e8357fe5b610ed3600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611e53565b6040518082815260200191505060405180910390f35b3415610ef157fe5b610ef9611e68565b6040518082815260200191505060405180910390f35b3415610f1757fe5b610f43600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611e6e565b005b3415610f4d57fe5b610f55611f11565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610f9f57fe5b610fef600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611f37565b6040518082815260200191505060405180910390f35b341561100d57fe5b611015611f4c565b6040518082815260200191505060405180910390f35b60006000600160149054906101000a900460ff1615151561104c5760006000fd5b611054611911565b15156110605760006000fd5b61106c60115484611f52565b60118190555061107e60155484611f52565b601581905550600854601154111515156110985760006000fd5b6110a1836117a5565b915060075482101515156110b55760006000fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636c197ff585846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561117f57fe5b6102c65a03f1151561118d57fe5b5050506040518051905015156111a35760006000fd5b6111af60125483611f52565b601281905550601360008154809291906001019190505550600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611216816001015483611f52565b816001018190555061122c816000015484611f52565b81600001819055508373ffffffffffffffffffffffffffffffffffffffff167f85177f287940f2f05425a4029951af0e047a7f9c4eaa9a6e6917bcd869f86695846040518082815260200191505060405180910390a25b5b5b50505050565b600f5481565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112ee5760006000fd5b600160149054906101000a900460ff16151561130a5760006000fd5b6000600160146101000a81548160ff0219169083151502179055505b5b5b565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006005600681111561135f57fe5b90505b90565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113c25760006000fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f768099735d1c322a05a5b9d7b76d99682a1833d3f7055e5ede25e0f2eeaa8c6d60405180905060405180910390a380600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b50565b60095481565b600e5481565b6000600360068111156114a257fe5b90505b90565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156115055760006000fd5b80601760006101000a81548160ff0219169083151502179055505b5b50565b60006001600681111561153357fe5b90505b90565b6000611546600283611f72565b90505b919050565b60105481565b600a5481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b60006000600681111561159557fe5b90505b90565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156115f85760006000fd5b611600611880565b8061160f575061160e6117ea565b5b151561161b5760006000fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f19350505050151561169457fe5b61169c611dee565b6016819055505b5b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156117a257600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b565b60006117b8826117b3611dee565b611890565b90505b919050565b60006117cd600183611f72565b90505b919050565b6000600460068111156117e457fe5b90505b90565b60006010546117f7611dee565b1190505b90565b600160149054906101000a900460ff1681565b600061181e600583611f72565b90505b919050565b60125481565b600061183c601354601454611f52565b90505b90565b60115481565b601760009054906101000a900460ff1681565b6003602052816000526040600020602052806000526040600020600091509150505481565b6000600854601154101590505b90565b60006000600954905082600d54111580156118ac5750600e5483105b156118bb57600a5490506118fd565b82600e54111580156118ce5750600f5483105b156118dd57600b5490506118fc565b82600f54111580156118f0575060105483105b156118fb57600c5490505b5b5b6119078482611f92565b91505b5092915050565b6000600061191d611dee565b905080600d541115801561193357506010548111155b91505b5090565b60145481565b600d5481565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156119a35760006000fd5b6001600160146101000a81548160ff0219169083151502179055505b5b565b6000600160149054906101000a900460ff161515156119e15760006000fd5b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611a8a5750600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515611a965760006000fd5b60008651111515611aa75760006000fd5b84518651141515611ab85760006000fd5b83518651141515611ac95760006000fd5b82518651141515611ada5760006000fd5b81518651141515611aeb5760006000fd5b600090505b8451811015611b9557611b878682815181101515611b0a57fe5b9060200190602002015160ff166006811115611b2257fe5b8683815181101515611b3057fe5b906020019060200201518684815181101515611b4857fe5b906020019060200201518685815181101515611b6057fe5b906020019060200201518686815181101515611b7857fe5b90602001906020020151611fc7565b5b8080600101915050611af0565b5b5b5b505050505050565b6000611bad600083611f72565b90505b919050565b600060006016541190505b90565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000611bf6600483611f72565b90505b919050565b60155481565b6000600360008460ff1660ff1681526020019081526020016000206000836040518082805190602001908083835b60208310611c555780518252602082019150602081019050602083039250611c32565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600019166000191681526020019081526020016000205490505b92915050565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611cff5760006000fd5b8073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f98fe2b49bc6313cc9f62e93c052f707176f4200685b0e28bdd1f63408e9819cc60405180905060405180910390a380600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b50565b60026020528060005260406000206000915090508060000154908060010154905082565b600b5481565b60004290505b90565b600c5481565b60135481565b600060026006811115611e1257fe5b90505b90565b600060066006811115611e2757fe5b90505b90565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000611e60600383611f72565b90505b919050565b60085481565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ecb5760006000fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b50565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000611f44600683611f72565b90505b919050565b60165481565b600060008284019050838110151515611f6757fe5b8091505b5092915050565b6000611f89836006811115611f8357fe5b83611c04565b90505b92915050565b6000600082840290506000841480611fb45750828482811515611fb157fe5b04145b1515611fbc57fe5b8091505b5092915050565b600060008473ffffffffffffffffffffffffffffffffffffffff16118015611fef5750600083115b8015611ffb5750600082115b15156120075760006000fd5b6003600087600681111561201757fe5b60ff1660ff168152602001908152602001600020905060008160008760001916600019168152602001908152602001600020541415156120575760006000fd5b61206360115484611f52565b6011819055506008546011541115151561207d5760006000fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636c197ff585846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561214757fe5b6102c65a03f1151561215557fe5b50505060405180519050151561216b5760006000fd5b61217760125483611f52565b601281905550601460008154809291906001019190505550818160008760001916600019168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff167fffca29687f1e04b1f4ea4590b19e5a69b6b7dfea2d47dc23733a77270122a40287878686604051808560068111156121fa57fe5b60ff168152602001846000191660001916815260200183815260200182815260200194505050505060405180910390a25b5050505050505600a165627a7a72305820b9535c072e7fcaf27a82574b4c88998f1b9d2a57b90a31136655e95d739686320029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x1"}]}]}, "locations": [{"sourceMap": "151:1:1"}], "severity": "Medium", "swcID": "SWC-110", "swcTitle": "Assert Violation"}, {"description": {"head": "An assertion violation was triggered.", "tail": "It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values)."}, "extra": {"discoveryTime": 4004322528, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2004007", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x60606040526802b5e3af16b1880000600755690a968163f0a57b4000006008556103e8600955610535600a556104e2600b55610457600c55635a03393c600d55635a05dc3c600e55635a0b223c600f55635a10683c6010556000601155600060125560006013556000601455600060155560006016556001601760006101000a81548160ff021916908315150217905550341561009857fe5b604051604080612499833981016040528080519060200190919080519060200190919050505b5b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b81600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50505b61225f8061023a6000396000f300606060405236156102a7576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806303cba01e146102d0578063046f7da2146102f657806309276ea41461030857806312cc9dd31461035a5780631c31f7101461038657806322d60d17146103bc57806324d3eaf3146103e25780632911c9e7146104085780633020a18e14610434578063308e1b2f14610456578063317c0ae9146104825780633197cbb6146104f05780633777f5d01461051657806338af3eed1461053c5780633b574beb1461058e5780633cf43e2c146105b45780634bb278f3146105e05780634e71e0c8146105f257806353aaef7d1461060457806357ea563a14610638578063590d431a146106a657806359e08fe1146106d25780635c975abb146106fc57806361053cd31461072657806363b20117146107945780636605ff66146107ba5780636d98e9fc146107e057806371b9b64614610806578063724bdbaf1461083057806372841e0c14610874578063760672df1461089e578063779e170d146108db578063784fdf261461090557806378e979251461092b5780638456cb5914610951578063890a018d146109635780638d24f5bc14610aba5780638d4e408314610b285780638da5cb5b14610b525780639b234a9e14610ba4578063a000aeb714610c12578063a6d4e9da14610c38578063abbb469514610cb2578063b85dfb8014610ce8578063b928024d14610d39578063bbe4fd5014610d5f578063d1bb7b5914610d85578063d935c8b414610dab578063deb2432b14610dd1578063dec74ae914610dfd578063e30c397814610e29578063ecb70a9814610e7b578063f1c4ecb414610ee9578063f2fde38b14610f0f578063fc0c546a14610f45578063fe1da52814610f97578063fe67a18914611005575b6102ce5b601760009054906101000a900460ff16156102cb576102ca333461102b565b5b5b565b005b34156102d857fe5b6102e061128b565b6040518082815260200191505060405180910390f35b34156102fe57fe5b610306611291565b005b341561031057fe5b61031861132a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561036257fe5b61036a611350565b604051808260ff1660ff16815260200191505060405180910390f35b341561038e57fe5b6103ba600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611365565b005b34156103c457fe5b6103cc611487565b6040518082815260200191505060405180910390f35b34156103ea57fe5b6103f261148d565b6040518082815260200191505060405180910390f35b341561041057fe5b610418611493565b604051808260ff1660ff16815260200191505060405180910390f35b341561043c57fe5b610454600480803515159060200190919050506114a8565b005b341561045e57fe5b610466611524565b604051808260ff1660ff16815260200191505060405180910390f35b341561048a57fe5b6104da600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611539565b6040518082815260200191505060405180910390f35b34156104f857fe5b61050061154e565b6040518082815260200191505060405180910390f35b341561051e57fe5b610526611554565b6040518082815260200191505060405180910390f35b341561054457fe5b61054c61155a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561059657fe5b61059e611580565b6040518082815260200191505060405180910390f35b34156105bc57fe5b6105c4611586565b604051808260ff1660ff16815260200191505060405180910390f35b34156105e857fe5b6105f061159b565b005b34156105fa57fe5b6106026116a6565b005b341561060c57fe5b61062260048080359060200190919050506117a5565b6040518082815260200191505060405180910390f35b341561064057fe5b610690600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506117c0565b6040518082815260200191505060405180910390f35b34156106ae57fe5b6106b66117d5565b604051808260ff1660ff16815260200191505060405180910390f35b34156106da57fe5b6106e26117ea565b604051808215151515815260200191505060405180910390f35b341561070457fe5b61070c6117fe565b604051808215151515815260200191505060405180910390f35b341561072e57fe5b61077e600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611811565b6040518082815260200191505060405180910390f35b341561079c57fe5b6107a4611826565b6040518082815260200191505060405180910390f35b34156107c257fe5b6107ca61182c565b6040518082815260200191505060405180910390f35b34156107e857fe5b6107f0611842565b6040518082815260200191505060405180910390f35b341561080e57fe5b610816611848565b604051808215151515815260200191505060405180910390f35b341561083857fe5b61085e600480803560ff169060200190919080356000191690602001909190505061185b565b6040518082815260200191505060405180910390f35b341561087c57fe5b610884611880565b604051808215151515815260200191505060405180910390f35b34156108a657fe5b6108c56004808035906020019091908035906020019091905050611890565b6040518082815260200191505060405180910390f35b34156108e357fe5b6108eb611911565b604051808215151515815260200191505060405180910390f35b341561090d57fe5b61091561193a565b6040518082815260200191505060405180910390f35b341561093357fe5b61093b611940565b6040518082815260200191505060405180910390f35b341561095957fe5b610961611946565b005b341561096b57fe5b610abc2565b005b3415610ac257fe5b610b12600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611ba0565b6040518082815260200191505060405180910390f35b3415610b3057fe5b610b38611bb5565b604051808215151515815260200191505060405180910390f35b3415610b5a57fe5b610b62611bc3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610bac57fe5b610bfc600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611be9565b6040518082815260200191505060405180910390f35b3415610c1a57fe5b610c22611bfe565b6040518082815260200191505060405180910390f35b3415610c4057fe5b610c9c600480803560ff1690602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611c04565b6040518082815260200191505060405180910390f35b3415610cba57fe5b610ce6600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611ca2565b005b3415610cf057fe5b610d1c600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611dc4565b604051808381526020018281526020019250505060405180910390f35b3415610d4157fe5b610d49611de8565b6040518082815260200191505060405180910390f35b3415610d6757fe5b610d6f611dee565b6040518082815260200191505060405180910390f35b3415610d8d57fe5b610d95611df7565b6040518082815260200191505060405180910390f35b3415610db357fe5b610dbb611dfd565b6040518082815260200191505060405180910390f35b3415610dd957fe5b610de1611e03565b604051808260ff1660ff16815260200191505060405180910390f35b3415610e0557fe5b610e0d611e18565b604051808260ff1660ff16815260200191505060405180910390f35b3415610e3157fe5b610e39611e2d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610e8357fe5b610ed3600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611e53565b6040518082815260200191505060405180910390f35b3415610ef157fe5b610ef9611e68565b6040518082815260200191505060405180910390f35b3415610f1757fe5b610f43600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611e6e565b005b3415610f4d57fe5b610f55611f11565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415610f9f57fe5b610fef600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050611f37565b6040518082815260200191505060405180910390f35b341561100d57fe5b611015611f4c565b6040518082815260200191505060405180910390f35b60006000600160149054906101000a900460ff1615151561104c5760006000fd5b611054611911565b15156110605760006000fd5b61106c60115484611f52565b60118190555061107e60155484611f52565b601581905550600854601154111515156110985760006000fd5b6110a1836117a5565b915060075482101515156110b55760006000fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636c197ff585846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561117f57fe5b6102c65a03f1151561118d57fe5b5050506040518051905015156111a35760006000fd5b6111af60125483611f52565b601281905550601360008154809291906001019190505550600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611216816001015483611f52565b816001018190555061122c816000015484611f52565b81600001819055508373ffffffffffffffffffffffffffffffffffffffff167f85177f287940f2f05425a4029951af0e047a7f9c4eaa9a6e6917bcd869f86695846040518082815260200191505060405180910390a25b5b5b50505050565b600f5481565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112ee5760006000fd5b600160149054906101000a900460ff16151561130a5760006000fd5b6000600160146101000a81548160ff0219169083151502179055505b5b5b565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006005600681111561135f57fe5b90505b90565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113c25760006000fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f768099735d1c322a05a5b9d7b76d99682a1833d3f7055e5ede25e0f2eeaa8c6d60405180905060405180910390a380600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b50565b60095481565b600e5481565b6000600360068111156114a257fe5b90505b90565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156115055760006000fd5b80601760006101000a81548160ff0219169083151502179055505b5b50565b60006001600681111561153357fe5b90505b90565b6000611546600283611f72565b90505b919050565b60105481565b600a5481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b60006000600681111561159557fe5b90505b90565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156115f85760006000fd5b611600611880565b8061160f575061160e6117ea565b5b151561161b5760006000fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f19350505050151561169457fe5b61169c611dee565b6016819055505b5b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156117a257600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b565b60006117b8826117b3611dee565b611890565b90505b919050565b60006117cd600183611f72565b90505b919050565b6000600460068111156117e457fe5b90505b90565b60006010546117f7611dee565b1190505b90565b600160149054906101000a900460ff1681565b600061181e600583611f72565b90505b919050565b60125481565b600061183c601354601454611f52565b90505b90565b60115481565b601760009054906101000a900460ff1681565b6003602052816000526040600020602052806000526040600020600091509150505481565b6000600854601154101590505b90565b60006000600954905082600d54111580156118ac5750600e5483105b156118bb57600a5490506118fd565b82600e54111580156118ce5750600f5483105b156118dd57600b5490506118fc565b82600f54111580156118f0575060105483105b156118fb57600c5490505b5b5b6119078482611f92565b91505b5092915050565b6000600061191d611dee565b905080600d541115801561193357506010548111155b91505b5090565b60145481565b600d5481565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156119a35760006000fd5b6001600160146101000a81548160ff0219169083151502179055505b5b565b6000600160149054906101000a900460ff161515156119e15760006000fd5b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611a8a5750600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515611a965760006000fd5b60008651111515611aa75760006000fd5b84518651141515611ab85760006000fd5b83518651141515611ac95760006000fd5b82518651141515611ada5760006000fd5b81518651141515611aeb5760006000fd5b600090505b8451811015611b9557611b878682815181101515611b0a57fe5b9060200190602002015160ff166006811115611b2257fe5b8683815181101515611b3057fe5b906020019060200201518684815181101515611b4857fe5b906020019060200201518685815181101515611b6057fe5b906020019060200201518686815181101515611b7857fe5b90602001906020020151611fc7565b5b8080600101915050611af0565b5b5b5b505050505050565b6000611bad600083611f72565b90505b919050565b600060006016541190505b90565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000611bf6600483611f72565b90505b919050565b60155481565b6000600360008460ff1660ff1681526020019081526020016000206000836040518082805190602001908083835b60208310611c555780518252602082019150602081019050602083039250611c32565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600019166000191681526020019081526020016000205490505b92915050565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611cff5760006000fd5b8073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f98fe2b49bc6313cc9f62e93c052f707176f4200685b0e28bdd1f63408e9819cc60405180905060405180910390a380600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b50565b60026020528060005260406000206000915090508060000154908060010154905082565b600b5481565b60004290505b90565b600c5481565b60135481565b600060026006811115611e1257fe5b90505b90565b600060066006811115611e2757fe5b90505b90565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000611e60600383611f72565b90505b919050565b60085481565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ecb5760006000fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b50565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000611f44600683611f72565b90505b919050565b60165481565b600060008284019050838110151515611f6757fe5b8091505b5092915050565b6000611f89836006811115611f8357fe5b83611c04565b90505b92915050565b6000600082840290506000841480611fb45750828482811515611fb157fe5b04145b1515611fbc57fe5b8091505b5092915050565b600060008473ffffffffffffffffffffffffffffffffffffffff16118015611fef5750600083115b8015611ffb5750600082115b15156120075760006000fd5b6003600087600681111561201757fe5b60ff1660ff168152602001908152602001600020905060008160008760001916600019168152602001908152602001600020541415156120575760006000fd5b61206360115484611f52565b6011819055506008546011541115151561207d5760006000fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636c197ff585846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561214757fe5b6102c65a03f1151561215557fe5b50505060405180519050151561216b5760006000fd5b61217760125483611f52565b601281905550601460008154809291906001019190505550818160008760001916600019168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff167fffca29687f1e04b1f4ea4590b19e5a69b6b7dfea2d47dc23733a77270122a40287878686604051808560068111156121fa57fe5b60ff168152602001846000191660001916815260200183815260200182815260200194505050505060405180910390a25b5050505050505600a165627a7a7230582057f495998693a95a9aa38ab9ce2a9bd2666bf131ecf368993b526844d64031800029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x1"}]}]}, "locations": [{"sourceMap": "151:1:3"}], "severity": "Medium", "swcID": "SWC-110", "swcTitle": "Assert Violation"}, {"description": {"head": "An assertion violation was triggered.", "tail": "It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values)."}, "extra": {"discoveryTime": 8006084442, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x60606040526012600960006101000a81548160ff021916908360ff160217905550604060405190810160405280600481526020017f76302e3100000000000000000000000000000000000000000000000000000000815250600a90805190602001906200006e92919062000342565b5034156200007857fe5b6040516200259638038062002596833981016040528080518201919060200180518201919060200180519060200190919080519060200190919050505b5b60003390506001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060048054806001018281620001299190620003c9565b916000526020600020900160005b83909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b506001600560006101000a81548160ff02191690831515021790555033600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600690805190602001906200023092919062000342565b5082600790805190602001906200024992919062000342565b50670de0b6b3a7640000820260088190555060085460016000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6008546040518082815260200191505060405180910390a35b5050505062000420565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200038557805160ff1916838001178555620003b6565b82800160010185558215620003b6579182015b82811115620003b557825182559160200191906001019062000398565b5b509050620003c59190620003f8565b5090565b815481835581811511620003f357818360005260206000209182019101620003f29190620003f8565b5b505050565b6200041d91905b8082111562000419576000816000905550600101620003ff565b5090565b90565b61216680620004306000396000f3006060604052361561015d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063025e7c271461015f57806302d05d3f146101bf57806306fdde031461021157806308551a53146102aa578063095ea7b3146102fc5780630db0262214610353578063173825d91461037957806318160ddd146103c757806323b872dd146103ed5780632f54bf6e14610463578063313ce567146104b15780633177029f146104dd57806342966c681461051c578063518ab2a81461055457806354fd4d501461057a5780636605ff66146106135780636c197ff5146106395780637065cb481461069057806370a08231146106de5780637c9473f61461072857806395d89b411461077f578063a69df4b514610818578063a9059cbb1461082a578063cd3a376a14610881578063cf309012146108cf578063dd62ed3e146108f9578063f83d08ba14610962575bfe5b341561016757fe5b61017d6004808035906020019091905050610974565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156101c757fe5b6101cf6109b4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561021957fe5b6102216109da565b6040518080602001828103825283818151815260200191508051906020019080838360008314610270575b8051825260208311156102705760208201915060208101905060208303925061024c565b505050905090810190601f16801561029c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156102b257fe5b6102ba610a78565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561030457fe5b610339600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610a9e565b604051808215151515815260200191505060405180910390f35b341561035b57fe5b610363610b91565b6040518082815260200191505060405180910390f35b341561038157fe5b6103ad600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610b9f565b604051808215151515815260200191505060405180910390f35b34156103cf57fe5b6103d7610dcb565b6040518082815260200191505060405180910390f35b34156103f557fe5b610449600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610dd1565b604051808215151515815260200191505060405180910390f35b341561046b57fe5b610497600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610e16565b604051808215151515815260200191505060405180910390f35b34156104b957fe5b6104c1610e6d565b604051808260ff1660ff16815260200191505060405180910390f35b34156104e557fe5b61051a600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610e80565b005b341561052457fe5b61053a6004808035906020019091905050610f4b565b604051808215151515815260200191505060405180910390f35b341561055c57fe5b6105646110a7565b6040518082815260200191505060405180910390f35b341561058257fe5b61058a6110ad565b60405180806020018281038252838181518152602001915080519060200190808383600083146105d9575b8051825260208311156105d9576020820191506020810190506020830392506105b5565b505050905090810190601f1680156106055780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561061b57fe5b61062361114b565b6040518082815260200191505060405180910390f35b341561064157fe5b610676600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611151565b604051808215151515815260200191505060405180910390f35b341561069857fe5b6106c4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611487565b604051808215151515815260200191505060405180910390f35b34156106e657fe5b610712600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506115eb565b6040518082815260200191505060405180910390f35b341561073057fe5b610765600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611635565b604051808215151515815260200191505060405180910390f35b341561078757fe5b61078f611654565b60405180806020018281038252838181518152602001915080519060200190808383600083146107de575b8051825260208311156107de576020820191506020810190506020830392506107ba565b505050905090810190601f16801561080a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561082057fe5b6108286116f2565b005b341561083257fe5b610867600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611726565b604051808215151515815260200191505060405180910390f35b341561088957fe5b6108b5600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611769565b604051808215151515815260200191505060405180910390f35b34156108d757fe5b6108df611a4d565b604051808215151515815260200191505060405180910390f35b341561090157fe5b61094c600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611a60565b6040518082815260200191505060405180910390f35b341561096a57fe5b610972611ae8565b005b60048181548110151561098357fe5b906000526020600020900160005b915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a705780601f10610a4557610100808354040283529160200191610a70565b820191906000526020600020905b815481529060010190602001808311610a5357829003601f168201915b505050505081565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a3600190505b92915050565b600060048054905090505b90565b60006000610bac33610e16565b1515610bb85760006000fd5b610bc183610e16565b15610dba576000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600090505b600160048054905003811015610d52578273ffffffffffffffffffffffffffffffffffffffff16600482815481101515610c5957fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610d44576004600160048054905003815481101515610cb957fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600482815481101515610cf557fe5b906000526020600020900160005b6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610d52565b5b8080600101915050610c23565b6001600481818054905003915081610d6a91906120bd565b508273ffffffffffffffffffffffffffffffffffffffff167f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da60405180905060405180910390a260019150610dc4565b60009150610dc4565b5b5b50919050565b60085481565b6000610ddc33610e16565b158015610df55750600560009054906101000a900460ff165b15610e005760006000fd5b610e0b848484611b1c565b90505b5b9392505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690505b919050565b600960009054906101000a900460ff1681565b6000829050610e8f8383610a9e565b15610f45578073ffffffffffffffffffffffffffffffffffffffff16634bdf1b0e33846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1515610f3357fe5b6102c65a03f11515610f4157fe5b5050505b5b505050565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015610f9c5750600082115b1561109857610fea600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611e97565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061103960085483611e97565b60088190555060003373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190506110a2565b600090506110a2565b5b919050565b600d5481565b600a8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111435780601f1061111857610100808354040283529160200191611143565b820191906000526020600020905b81548152906001019060200180831161112657829003601f168201915b505050505081565b600e5481565b600061115c33610e16565b15156111685760006000fd5b8160016000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156111d95750600082115b156114765761124960016000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611e97565b60016000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506112f7600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611eb1565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36113cd600d5483611eb1565b600d819055506113e0600e546001611eb1565b600e819055508273ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fae98fdb7f4bc601d31354dd8c8ba584bf892418c4df67aba01011867bd88ea27846040518082815260200191505060405180910390a360019050611480565b60009050611480565b5b5b92915050565b600061149233610e16565b151561149e5760006000fd5b6114a782610e16565b1580156114cb575060008273ffffffffffffffffffffffffffffffffffffffff1614155b156115db576001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506004805480600101828161153c91906120e9565b916000526020600020900160005b84909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550508173ffffffffffffffffffffffffffffffffffffffff167f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c360405180905060405180910390a2600190506115e5565b600090506115e5565b5b5b919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b919050565b600061164b83670de0b6b3a76400008402611151565b90505b92915050565b60078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116ea5780601f106116bf576101008083540402835291602001916116ea565b820191906000526020600020905b8154815290600101906020018083116116cd57829003601f168201915b505050505081565b6116fb33610e16565b15156117075760006000fd5b6000600560006101000a81548160ff0219169083151502179055505b5b565b600061173133610e16565b15801561174a5750600560009054906101000a900460ff165b156117555760006000fd5b61175f8383611ed1565b90505b5b92915050565b60006000600061177833610e16565b15156117845760006000fd5b60008473ffffffffffffffffffffffffffffffffffffffff16141580156117f957508373ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b15156118055760006000fd5b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506118fa600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482611eb1565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a383600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fd35d031ef8fbe90a984844820a53576f06a5ac0eb490063bb1e8301c67a6b12760405180905060405180910390a3600192505b5b5050919050565b600560009054906101000a900460ff1681565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b92915050565b611af133610e16565b1515611afd5760006000fd5b6001600560006101000a81548160ff0219169083151502179055505b5b565b600081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015611be9575081600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b8015611bf55750600082115b15611e8657611c43600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611eb1565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611ccf600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611e97565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611d98600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611e97565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360019050611e90565b60009050611e90565b5b9392505050565b6000828211151515611ea557fe5b81830390505b92915050565b600060008284019050838110151515611ec657fe5b8091505b5092915050565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015611f225750600082115b156120ad57611f70600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611e97565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611ffc600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611eb1565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190506120b7565b600090506120b7565b5b92915050565b8154818355818115116120e4578183600052602060002091820191016120e39190612115565b5b505050565b8154818355818115116121105781836000526020600020918201910161210f9190612115565b5b505050565b61213791905b8082111561213357600081600090555060010161211b565b5090565b905600a165627a7a72305820dc3a83b9d25ab2d5c44095b70987240bff5c580b9e6f2b904e3c0618260430580029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x1"}]}]}, "locations": [{"sourceMap": "119:1:5"}], "severity": "Medium", "swcID": "SWC-110", "swcTitle": "Assert Violation"}, {"description": {"head": "An assertion violation was triggered.", "tail": "It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values)."}, "extra": {"discoveryTime": 12562710285, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x6060604052341561000c57fe5b5b60003390506001600060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001805480600101828161007e91906100d5565b916000526020600020900160005b83909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b50610126565b8154818355818115116100fc578183600052602060002091820191016100fb9190610101565b5b505050565b61012391905b8082111561011f576000816000905550600101610107565b5090565b90565b6106b5806101356000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063025e7c27146100675780630db02622146100c7578063173825d9146100ed5780632f54bf6e1461013b5780637065cb4814610189575bfe5b341561006f57fe5b61008560048080359060200190919050506101d7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100cf57fe5b6100d7610217565b6040518082815260200191505060405180910390f35b34156100f557fe5b610121600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610225565b604051808215151515815260200191505060405180910390f35b341561014357fe5b61016f600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610451565b604051808215151515815260200191505060405180910390f35b341561019157fe5b6101bd600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506104a8565b604051808215151515815260200191505060405180910390f35b6001818154811015156101e657fe5b906000526020600020900160005b915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060018054905090505b90565b6000600061023233610451565b151561023e5760006000fd5b61024783610451565b15610440576000600060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600090505b6001600180549050038110156103d8578273ffffffffffffffffffffffffffffffffffffffff166001828154811015156102df57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156103ca57600160016001805490500381548110151561033f57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660018281548110151561037b57fe5b906000526020600020900160005b6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103d8565b5b80806001019150506102a9565b60016001818180549050039150816103f0919061060c565b508273ffffffffffffffffffffffffffffffffffffffff167f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da60405180905060405180910390a26001915061044a565b6000915061044a565b5b5b50919050565b6000600060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690505b919050565b60006104b333610451565b15156104bf5760006000fd5b6104c882610451565b1580156104ec575060008273ffffffffffffffffffffffffffffffffffffffff1614155b156105fc576001600060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001805480600101828161055d9190610638565b916000526020600020900160005b84909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550508173ffffffffffffffffffffffffffffffffffffffff167f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c360405180905060405180910390a260019050610606565b60009050610606565b5b5b919050565b815481835581811511610633578183600052602060002091820191016106329190610664565b5b505050565b81548183558181151161065f5781836000526020600020918201910161065e9190610664565b5b505050565b61068691905b8082111561068257600081600090555060010161066a565b5090565b905600a165627a7a72305820cec274b920e3cd63491c270d46d40e12e9f80a6db53b7ef52ecb19f8d4465d450029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x1"}]}]}, "locations": [{"sourceMap": "11:1:7"}], "severity": "Medium", "swcID": "SWC-110", "swcTitle": "Assert Violation"}, {"description": {"head": "An assertion violation was triggered.", "tail": "It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values)."}, "extra": {"discoveryTime": 13256466150, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x6060604052341561000c57fe5b5b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b6103628061005f6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634e71e0c81461005c5780638da5cb5b1461006e578063e30c3978146100c0578063f2fde38b14610112575bfe5b341561006457fe5b61006c610148565b005b341561007657fe5b61007e610247565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100c857fe5b6100d061026d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561011a57fe5b610146600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610293565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561024457600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156102f05760006000fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b505600a165627a7a723058206734bb3957ca6c85fd0c9876b411532245c16d8a184a538b67546787e99b7ecd0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x1"}]}]}, "locations": [{"sourceMap": "11:1:9"}], "severity": "Medium", "swcID": "SWC-110", "swcTitle": "Assert Violation"}, {"description": {"head": "An assertion violation was triggered.", "tail": "It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values)."}, "extra": {"discoveryTime": 13883882045, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x60606040523415600b57fe5b5b60338060196000396000f30060606040525bfe00a165627a7a7230582044af09d6899df6d1f0f9683b32909cb00e2e08805608690db201780b8c7286590029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x1"}]}]}, "locations": [{"sourceMap": "10:1:13"}], "severity": "Medium", "swcID": "SWC-110", "swcTitle": "Assert Violation"}, {"description": {"head": "An assertion violation was triggered.", "tail": "It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values)."}, "extra": {"discoveryTime": 13944535732, "testCases": [{"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "blockCoinbase": "0xcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb", "blockDifficulty": "0xa7d7343662e26", "blockGasLimit": "0x7d0000", "blockNumber": "0x66e393", "blockTime": "0x5bfa4639", "calldata": "", "gasLimit": "0x7d000", "gasPrice": "0x773594000", "input": "0x6060604052341561000c57fe5b5b610a0d8061001c6000396000f30060606040523615610076576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b31461007857806318160ddd146100cf57806323b872dd146100f557806370a082311461016b578063a9059cbb146101b5578063dd62ed3e1461020c575bfe5b341561008057fe5b6100b5600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610275565b604051808215151515815260200191505060405180910390f35b34156100d757fe5b6100df610368565b6040518082815260200191505060405180910390f35b34156100fd57fe5b610151600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061036e565b604051808215151515815260200191505060405180910390f35b341561017357fe5b61019f600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506106e9565b6040518082815260200191505060405180910390f35b34156101bd57fe5b6101f2600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610733565b604051808215151515815260200191505060405180910390f35b341561021457fe5b61025f600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061091f565b6040518082815260200191505060405180910390f35b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a3600190505b92915050565b60005481565b600081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015801561043b575081600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b80156104475750600082115b156106d857610495600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836109a7565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610521600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836109c7565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506105ea600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836109c7565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190506106e2565b600090506106e2565b5b9392505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b919050565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156107845750600082115b1561090f576107d2600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836109c7565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061085e600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836109a7565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360019050610919565b60009050610919565b5b92915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b92915050565b6000600082840190508381101515156109bc57fe5b8091505b5092915050565b60008282111515156109d557fe5b81830390505b929150505600a165627a7a72305820e70bf8ab60a8778be6595c1a4ec9a4b6bf8c8490c7c3f96108aa9fe6ca9e54410029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x1"}]}]}, "locations": [{"sourceMap": "11:1:15"}], "severity": "Medium", "swcID": "SWC-110", "swcTitle": "Assert Violation"}], "meta": {"logs": [{"hidden": true, "level": "error", "msg": "Traceback (most recent call last):\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/mythril/mythril_analyzer.py\", line 151, in fire_lasers\n    sym = SymExecWrapper(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/analysis/symbolic.py\", line 182, in __init__\n    self.laser.sym_exec(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 206, in sym_exec\n    self.execute_transactions(created_account.address)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 232, in execute_transactions\n    self._execute_transactions_incremental(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 277, in _execute_transactions_incremental\n    self.open_states = [\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 280, in <listcomp>\n    if state.constraints.is_possible()\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/state/constraints.py\", line 34, in is_possible\n    get_model(self, solver_timeout=solver_timeout)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/model.py\", line 101, in get_model\n    ret_model = model_cache.check_quick_sat(simplify(And(*constraints)).raw)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/support_utils.py\", line 63, in check_quick_sat\n    model_copy = deepcopy(model)\n  File \"/usr/lib/python3.10/copy.py\", line 172, in deepcopy\n    y = _reconstruct(x, memo, *rv)\n  File \"/usr/lib/python3.10/copy.py\", line 271, in _reconstruct\n    state = deepcopy(state, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 231, in _deepcopy_dict\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 206, in _deepcopy_list\n    append(deepcopy(a, memo))\n  File \"/usr/lib/python3.10/copy.py\", line 153, in deepcopy\n    y = copier(memo)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6257, in __deepcopy__\n    return self.translate(self.ctx)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6251, in translate\n    return Model(model, target)\nTypeError: Model() takes from 0 to 1 positional arguments but 2 were given\n"}, {"hidden": true, "level": "error", "msg": "Traceback (most recent call last):\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/mythril/mythril_analyzer.py\", line 151, in fire_lasers\n    sym = SymExecWrapper(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/analysis/symbolic.py\", line 182, in __init__\n    self.laser.sym_exec(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 206, in sym_exec\n    self.execute_transactions(created_account.address)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 232, in execute_transactions\n    self._execute_transactions_incremental(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 277, in _execute_transactions_incremental\n    self.open_states = [\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 280, in <listcomp>\n    if state.constraints.is_possible()\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/state/constraints.py\", line 34, in is_possible\n    get_model(self, solver_timeout=solver_timeout)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/model.py\", line 101, in get_model\n    ret_model = model_cache.check_quick_sat(simplify(And(*constraints)).raw)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/support_utils.py\", line 63, in check_quick_sat\n    model_copy = deepcopy(model)\n  File \"/usr/lib/python3.10/copy.py\", line 172, in deepcopy\n    y = _reconstruct(x, memo, *rv)\n  File \"/usr/lib/python3.10/copy.py\", line 271, in _reconstruct\n    state = deepcopy(state, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 231, in _deepcopy_dict\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 206, in _deepcopy_list\n    append(deepcopy(a, memo))\n  File \"/usr/lib/python3.10/copy.py\", line 153, in deepcopy\n    y = copier(memo)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6257, in __deepcopy__\n    return self.translate(self.ctx)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6251, in translate\n    return Model(model, target)\nTypeError: Model() takes from 0 to 1 positional arguments but 2 were given\n"}, {"hidden": true, "level": "error", "msg": "Traceback (most recent call last):\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/mythril/mythril_analyzer.py\", line 151, in fire_lasers\n    sym = SymExecWrapper(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/analysis/symbolic.py\", line 182, in __init__\n    self.laser.sym_exec(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 206, in sym_exec\n    self.execute_transactions(created_account.address)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 232, in execute_transactions\n    self._execute_transactions_incremental(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 277, in _execute_transactions_incremental\n    self.open_states = [\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 280, in <listcomp>\n    if state.constraints.is_possible()\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/state/constraints.py\", line 34, in is_possible\n    get_model(self, solver_timeout=solver_timeout)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/model.py\", line 101, in get_model\n    ret_model = model_cache.check_quick_sat(simplify(And(*constraints)).raw)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/support_utils.py\", line 63, in check_quick_sat\n    model_copy = deepcopy(model)\n  File \"/usr/lib/python3.10/copy.py\", line 172, in deepcopy\n    y = _reconstruct(x, memo, *rv)\n  File \"/usr/lib/python3.10/copy.py\", line 271, in _reconstruct\n    state = deepcopy(state, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 231, in _deepcopy_dict\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 206, in _deepcopy_list\n    append(deepcopy(a, memo))\n  File \"/usr/lib/python3.10/copy.py\", line 153, in deepcopy\n    y = copier(memo)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6257, in __deepcopy__\n    return self.translate(self.ctx)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6251, in translate\n    return Model(model, target)\nTypeError: Model() takes from 0 to 1 positional arguments but 2 were given\n"}, {"hidden": true, "level": "error", "msg": "Traceback (most recent call last):\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/mythril/mythril_analyzer.py\", line 151, in fire_lasers\n    sym = SymExecWrapper(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/analysis/symbolic.py\", line 182, in __init__\n    self.laser.sym_exec(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 206, in sym_exec\n    self.execute_transactions(created_account.address)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 232, in execute_transactions\n    self._execute_transactions_incremental(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 277, in _execute_transactions_incremental\n    self.open_states = [\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 280, in <listcomp>\n    if state.constraints.is_possible()\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/state/constraints.py\", line 34, in is_possible\n    get_model(self, solver_timeout=solver_timeout)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/model.py\", line 101, in get_model\n    ret_model = model_cache.check_quick_sat(simplify(And(*constraints)).raw)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/support_utils.py\", line 63, in check_quick_sat\n    model_copy = deepcopy(model)\n  File \"/usr/lib/python3.10/copy.py\", line 172, in deepcopy\n    y = _reconstruct(x, memo, *rv)\n  File \"/usr/lib/python3.10/copy.py\", line 271, in _reconstruct\n    state = deepcopy(state, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 231, in _deepcopy_dict\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 206, in _deepcopy_list\n    append(deepcopy(a, memo))\n  File \"/usr/lib/python3.10/copy.py\", line 153, in deepcopy\n    y = copier(memo)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6257, in __deepcopy__\n    return self.translate(self.ctx)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6251, in translate\n    return Model(model, target)\nTypeError: Model() takes from 0 to 1 positional arguments but 2 were given\n"}, {"hidden": true, "level": "error", "msg": "Traceback (most recent call last):\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/mythril/mythril_analyzer.py\", line 151, in fire_lasers\n    sym = SymExecWrapper(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/analysis/symbolic.py\", line 182, in __init__\n    self.laser.sym_exec(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 206, in sym_exec\n    self.execute_transactions(created_account.address)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 232, in execute_transactions\n    self._execute_transactions_incremental(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 277, in _execute_transactions_incremental\n    self.open_states = [\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 280, in <listcomp>\n    if state.constraints.is_possible()\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/state/constraints.py\", line 34, in is_possible\n    get_model(self, solver_timeout=solver_timeout)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/model.py\", line 101, in get_model\n    ret_model = model_cache.check_quick_sat(simplify(And(*constraints)).raw)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/support_utils.py\", line 63, in check_quick_sat\n    model_copy = deepcopy(model)\n  File \"/usr/lib/python3.10/copy.py\", line 172, in deepcopy\n    y = _reconstruct(x, memo, *rv)\n  File \"/usr/lib/python3.10/copy.py\", line 271, in _reconstruct\n    state = deepcopy(state, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 231, in _deepcopy_dict\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 206, in _deepcopy_list\n    append(deepcopy(a, memo))\n  File \"/usr/lib/python3.10/copy.py\", line 153, in deepcopy\n    y = copier(memo)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6257, in __deepcopy__\n    return self.translate(self.ctx)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6251, in translate\n    return Model(model, target)\nTypeError: Model() takes from 0 to 1 positional arguments but 2 were given\n"}, {"hidden": true, "level": "error", "msg": "Traceback (most recent call last):\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/mythril/mythril_analyzer.py\", line 151, in fire_lasers\n    sym = SymExecWrapper(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/analysis/symbolic.py\", line 182, in __init__\n    self.laser.sym_exec(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 206, in sym_exec\n    self.execute_transactions(created_account.address)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 232, in execute_transactions\n    self._execute_transactions_incremental(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 277, in _execute_transactions_incremental\n    self.open_states = [\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 280, in <listcomp>\n    if state.constraints.is_possible()\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/state/constraints.py\", line 34, in is_possible\n    get_model(self, solver_timeout=solver_timeout)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/model.py\", line 101, in get_model\n    ret_model = model_cache.check_quick_sat(simplify(And(*constraints)).raw)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/support_utils.py\", line 63, in check_quick_sat\n    model_copy = deepcopy(model)\n  File \"/usr/lib/python3.10/copy.py\", line 172, in deepcopy\n    y = _reconstruct(x, memo, *rv)\n  File \"/usr/lib/python3.10/copy.py\", line 271, in _reconstruct\n    state = deepcopy(state, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 231, in _deepcopy_dict\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 206, in _deepcopy_list\n    append(deepcopy(a, memo))\n  File \"/usr/lib/python3.10/copy.py\", line 153, in deepcopy\n    y = copier(memo)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6257, in __deepcopy__\n    return self.translate(self.ctx)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6251, in translate\n    return Model(model, target)\nTypeError: Model() takes from 0 to 1 positional arguments but 2 were given\n"}, {"hidden": true, "level": "error", "msg": "Traceback (most recent call last):\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/mythril/mythril_analyzer.py\", line 151, in fire_lasers\n    sym = SymExecWrapper(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/analysis/symbolic.py\", line 182, in __init__\n    self.laser.sym_exec(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 206, in sym_exec\n    self.execute_transactions(created_account.address)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 232, in execute_transactions\n    self._execute_transactions_incremental(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 277, in _execute_transactions_incremental\n    self.open_states = [\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 280, in <listcomp>\n    if state.constraints.is_possible()\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/state/constraints.py\", line 34, in is_possible\n    get_model(self, solver_timeout=solver_timeout)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/model.py\", line 101, in get_model\n    ret_model = model_cache.check_quick_sat(simplify(And(*constraints)).raw)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/support_utils.py\", line 63, in check_quick_sat\n    model_copy = deepcopy(model)\n  File \"/usr/lib/python3.10/copy.py\", line 172, in deepcopy\n    y = _reconstruct(x, memo, *rv)\n  File \"/usr/lib/python3.10/copy.py\", line 271, in _reconstruct\n    state = deepcopy(state, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 231, in _deepcopy_dict\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 206, in _deepcopy_list\n    append(deepcopy(a, memo))\n  File \"/usr/lib/python3.10/copy.py\", line 153, in deepcopy\n    y = copier(memo)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6257, in __deepcopy__\n    return self.translate(self.ctx)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6251, in translate\n    return Model(model, target)\nTypeError: Model() takes from 0 to 1 positional arguments but 2 were given\n"}, {"hidden": true, "level": "error", "msg": "Traceback (most recent call last):\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/mythril/mythril_analyzer.py\", line 151, in fire_lasers\n    sym = SymExecWrapper(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/analysis/symbolic.py\", line 182, in __init__\n    self.laser.sym_exec(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 206, in sym_exec\n    self.execute_transactions(created_account.address)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 232, in execute_transactions\n    self._execute_transactions_incremental(\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 277, in _execute_transactions_incremental\n    self.open_states = [\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/svm.py\", line 280, in <listcomp>\n    if state.constraints.is_possible()\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/laser/ethereum/state/constraints.py\", line 34, in is_possible\n    get_model(self, solver_timeout=solver_timeout)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/model.py\", line 101, in get_model\n    ret_model = model_cache.check_quick_sat(simplify(And(*constraints)).raw)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/mythril/support/support_utils.py\", line 63, in check_quick_sat\n    model_copy = deepcopy(model)\n  File \"/usr/lib/python3.10/copy.py\", line 172, in deepcopy\n    y = _reconstruct(x, memo, *rv)\n  File \"/usr/lib/python3.10/copy.py\", line 271, in _reconstruct\n    state = deepcopy(state, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 231, in _deepcopy_dict\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 146, in deepcopy\n    y = copier(x, memo)\n  File \"/usr/lib/python3.10/copy.py\", line 206, in _deepcopy_list\n    append(deepcopy(a, memo))\n  File \"/usr/lib/python3.10/copy.py\", line 153, in deepcopy\n    y = copier(memo)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6257, in __deepcopy__\n    return self.translate(self.ctx)\n  File \"/home/shikah/.local/lib/python3.10/site-packages/z3/z3.py\", line 6251, in translate\n    return Model(model, target)\nTypeError: Model() takes from 0 to 1 positional arguments but 2 were given\n"}], "mythril_execution_info": {"analysis_duration": 14693043709}}, "sourceFormat": "text", "sourceList": ["Benchmarks/Study_SamplesSet/7d0e3f58927a4b3e5651892d5045b74c.sol", "Benchmarks/Study_SamplesSet/7d0e3f58927a4b3e5651892d5045b74c.sol", "Benchmarks/Study_SamplesSet/7d0e3f58927a4b3e5651892d5045b74c.sol", "Benchmarks/Study_SamplesSet/7d0e3f58927a4b3e5651892d5045b74c.sol", "Benchmarks/Study_SamplesSet/7d0e3f58927a4b3e5651892d5045b74c.sol", "Benchmarks/Study_SamplesSet/7d0e3f58927a4b3e5651892d5045b74c.sol", "Benchmarks/Study_SamplesSet/7d0e3f58927a4b3e5651892d5045b74c.sol", "Benchmarks/Study_SamplesSet/7d0e3f58927a4b3e5651892d5045b74c.sol"], "sourceType": "solidity-file"}]
