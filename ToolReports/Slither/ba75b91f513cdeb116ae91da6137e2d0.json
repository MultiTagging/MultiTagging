{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "function",
            "name": "calculateSubmissionIndex",
            "source_mapping": {
              "start": 48092,
              "length": 1164,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "WeightedSubmission",
                "source_mapping": {
                  "start": 41287,
                  "length": 10389,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "calculateSubmissionIndex(address,uint256)"
            }
          },
          {
            "type": "node",
            "name": "shareIndex = seed2 % uint256(submissionData.numShares)",
            "source_mapping": {
              "start": 49139,
              "length": 56,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "calculateSubmissionIndex",
                "source_mapping": {
                  "start": 48092,
                  "length": 1164,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "WeightedSubmission",
                    "source_mapping": {
                      "start": 41287,
                      "length": 10389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "calculateSubmissionIndex(address,uint256)"
                }
              }
            }
          }
        ],
        "description": "WeightedSubmission.calculateSubmissionIndex(address,uint256) () uses a weak PRNG: \"shareIndex = seed2 % uint256(submissionData.numShares) ()\" \n",
        "markdown": "[WeightedSubmission.calculateSubmissionIndex(address,uint256)]() uses a weak PRNG: \"[shareIndex = seed2 % uint256(submissionData.numShares)]()\" \n",
        "first_markdown_element": "",
        "id": "58fd8760af34ce3d088bedfd594aeb3724a6efa48c97e5ef745ab74e0ef18086",
        "check": "weak-prng",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifySubmissionIndex",
            "source_mapping": {
              "start": 46976,
              "length": 1106,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "WeightedSubmission",
                "source_mapping": {
                  "start": 41287,
                  "length": 10389,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifySubmissionIndex(address,uint256,uint256,uint256)"
            }
          },
          {
            "type": "node",
            "name": "expectedShareshareIndex = (seed2 % uint256(submissionData.numShares))",
            "source_mapping": {
              "start": 47908,
              "length": 71,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifySubmissionIndex",
                "source_mapping": {
                  "start": 46976,
                  "length": 1106,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "WeightedSubmission",
                    "source_mapping": {
                      "start": 41287,
                      "length": 10389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifySubmissionIndex(address,uint256,uint256,uint256)"
                }
              }
            }
          }
        ],
        "description": "WeightedSubmission.verifySubmissionIndex(address,uint256,uint256,uint256) () uses a weak PRNG: \"expectedShareshareIndex = (seed2 % uint256(submissionData.numShares)) ()\" \n",
        "markdown": "[WeightedSubmission.verifySubmissionIndex(address,uint256,uint256,uint256)]() uses a weak PRNG: \"[expectedShareshareIndex = (seed2 % uint256(submissionData.numShares))]()\" \n",
        "first_markdown_element": "",
        "id": "8c6e3586374da0b12eaceb91bd68056be1fe52ca788c528d3372fd5ea1f3adb9",
        "check": "weak-prng",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "calculateSubmissionIndex",
            "source_mapping": {
              "start": 48092,
              "length": 1164,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "WeightedSubmission",
                "source_mapping": {
                  "start": 41287,
                  "length": 10389,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "calculateSubmissionIndex(address,uint256)"
            }
          },
          {
            "type": "node",
            "name": "selectedValue = seed1 % totalValue",
            "source_mapping": {
              "start": 48553,
              "length": 39,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "calculateSubmissionIndex",
                "source_mapping": {
                  "start": 48092,
                  "length": 1164,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "WeightedSubmission",
                    "source_mapping": {
                      "start": 41287,
                      "length": 10389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "calculateSubmissionIndex(address,uint256)"
                }
              }
            }
          }
        ],
        "description": "WeightedSubmission.calculateSubmissionIndex(address,uint256) () uses a weak PRNG: \"selectedValue = seed1 % totalValue ()\" \n",
        "markdown": "[WeightedSubmission.calculateSubmissionIndex(address,uint256)]() uses a weak PRNG: \"[selectedValue = seed1 % totalValue]()\" \n",
        "first_markdown_element": "",
        "id": "d70887a03b1ae710fd23188a0a87b4b76129efe120ed74029b8f66d2ae6a284e",
        "check": "weak-prng",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifySubmissionIndex",
            "source_mapping": {
              "start": 46976,
              "length": 1106,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "WeightedSubmission",
                "source_mapping": {
                  "start": 41287,
                  "length": 10389,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifySubmissionIndex(address,uint256,uint256,uint256)"
            }
          },
          {
            "type": "node",
            "name": "selectedValue = seed1 % totalValue",
            "source_mapping": {
              "start": 47634,
              "length": 39,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifySubmissionIndex",
                "source_mapping": {
                  "start": 46976,
                  "length": 1106,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "WeightedSubmission",
                    "source_mapping": {
                      "start": 41287,
                      "length": 10389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifySubmissionIndex(address,uint256,uint256,uint256)"
                }
              }
            }
          }
        ],
        "description": "WeightedSubmission.verifySubmissionIndex(address,uint256,uint256,uint256) () uses a weak PRNG: \"selectedValue = seed1 % totalValue ()\" \n",
        "markdown": "[WeightedSubmission.verifySubmissionIndex(address,uint256,uint256,uint256)]() uses a weak PRNG: \"[selectedValue = seed1 % totalValue]()\" \n",
        "first_markdown_element": "",
        "id": "e11f03fb2d7b5a3c0ef44c954ad7856bdd5cf907793e2d99c75d68d8238f8749",
        "check": "weak-prng",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifyClaim",
            "source_mapping": {
              "start": 60405,
              "length": 5340,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
            }
          },
          {
            "type": "node",
            "name": "ethash = ethashContract.hashimoto(bytes32(leafHash),bytes8(nonce),dataSetLookup,witnessForLookup,header.blockNumber / 30000)",
            "source_mapping": {
              "start": 63825,
              "length": 327,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "! doPayment(submissionData.totalSubmissionValue,minersData[msg.sender].paymentAddress)",
            "source_mapping": {
              "start": 65314,
              "length": 113,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "! paymentAddress.send(payment)",
            "source_mapping": {
              "start": 67302,
              "length": 32,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "doPayment",
                "source_mapping": {
                  "start": 66574,
                  "length": 873,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "doPayment(uint256,address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "closeSubmission(msg.sender)",
            "source_mapping": {
              "start": 65535,
              "length": 29,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "submissionsMetaData"
            }
          },
          {
            "type": "node",
            "name": "submissionsMetaData[sender] = metaData",
            "source_mapping": {
              "start": 49808,
              "length": 38,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "closeSubmission",
                "source_mapping": {
                  "start": 49313,
                  "length": 540,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "WeightedSubmission",
                    "source_mapping": {
                      "start": 41287,
                      "length": 10389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "closeSubmission(address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "submissionsMetaData"
            }
          }
        ],
        "description": "Reentrancy in SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[]) ():\n\tExternal calls:\n\t- ethash = ethashContract.hashimoto(bytes32(leafHash),bytes8(nonce),dataSetLookup,witnessForLookup,header.blockNumber / 30000) ()\n\tExternal calls sending eth:\n\t- ! doPayment(submissionData.totalSubmissionValue,minersData[msg.sender].paymentAddress) ()\n\t\t- ! paymentAddress.send(payment) ()\n\tState variables written after the call(s):\n\t- closeSubmission(msg.sender) ()\n\t\t- submissionsMetaData[sender] = metaData ()\n\tWeightedSubmission.submissionsMetaData () can be used in cross function reentrancies:\n\t- WeightedSubmission.calculateSubmissionIndex(address,uint256) ()\n\t- WeightedSubmission.closeSubmission(address) ()\n\t- WeightedSubmission.debugGetNumPendingSubmissions(address) ()\n\t- WeightedSubmission.getClaimData(address,uint256,uint256,uint256) ()\n\t- WeightedSubmission.getClaimSeed(address) ()\n\t- WeightedSubmission.storeClaimSeed(address) ()\n\t- WeightedSubmission.submitClaim(uint256,uint256,uint256,uint256,uint256,bool) ()\n\t- WeightedSubmission.verifySubmissionIndex(address,uint256,uint256,uint256) ()\n",
        "markdown": "Reentrancy in [SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])]():\n\tExternal calls:\n\t- [ethash = ethashContract.hashimoto(bytes32(leafHash),bytes8(nonce),dataSetLookup,witnessForLookup,header.blockNumber / 30000)]()\n\tExternal calls sending eth:\n\t- [! doPayment(submissionData.totalSubmissionValue,minersData[msg.sender].paymentAddress)]()\n\t\t- [! paymentAddress.send(payment)]()\n\tState variables written after the call(s):\n\t- [closeSubmission(msg.sender)]()\n\t\t- [submissionsMetaData[sender] = metaData]()\n\t[WeightedSubmission.submissionsMetaData]() can be used in cross function reentrancies:\n\t- [WeightedSubmission.calculateSubmissionIndex(address,uint256)]()\n\t- [WeightedSubmission.closeSubmission(address)]()\n\t- [WeightedSubmission.debugGetNumPendingSubmissions(address)]()\n\t- [WeightedSubmission.getClaimData(address,uint256,uint256,uint256)]()\n\t- [WeightedSubmission.getClaimSeed(address)]()\n\t- [WeightedSubmission.storeClaimSeed(address)]()\n\t- [WeightedSubmission.submitClaim(uint256,uint256,uint256,uint256,uint256,bool)]()\n\t- [WeightedSubmission.verifySubmissionIndex(address,uint256,uint256,uint256)]()\n",
        "first_markdown_element": "",
        "id": "b555e3c7420ca8b4402523970e2cd8b140052a7e60d8d31f261463afc4c8dc4a",
        "check": "reentrancy-eth",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "items",
            "source_mapping": {
              "start": 26926,
              "length": 447,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "items(RLP.RLPItem)"
            }
          }
        ],
        "description": "RLP.items(RLP.RLPItem) () is declared view but contains assembly code\n",
        "markdown": "[RLP.items(RLP.RLPItem)]() is declared view but contains assembly code\n",
        "first_markdown_element": "",
        "id": "079f1ea986950309466aa40987f514ff8259f197373fadb992aaca6900508830",
        "additional_fields": {
          "contains_assembly": true
        },
        "check": "constant-function-asm",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "isList",
            "source_mapping": {
              "start": 25743,
              "length": 256,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "isList(RLP.RLPItem)"
            }
          }
        ],
        "description": "RLP.isList(RLP.RLPItem) () is declared view but contains assembly code\n",
        "markdown": "[RLP.isList(RLP.RLPItem)]() is declared view but contains assembly code\n",
        "first_markdown_element": "",
        "id": "0c84fb96b075f5a558a3a47a5c7e32d841913cdcfe49f6f9c3832f2ff8554905",
        "additional_fields": {
          "contains_assembly": true
        },
        "check": "constant-function-asm",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "_payloadOffset",
            "source_mapping": {
              "start": 31862,
              "length": 513,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "_payloadOffset(RLP.RLPItem)"
            }
          }
        ],
        "description": "RLP._payloadOffset(RLP.RLPItem) () is declared view but contains assembly code\n",
        "markdown": "[RLP._payloadOffset(RLP.RLPItem)]() is declared view but contains assembly code\n",
        "first_markdown_element": "",
        "id": "1c59769385135354faf0864d76069fa9cb1a4b51d91a0fe2fe623f4ad56a4951",
        "additional_fields": {
          "contains_assembly": true
        },
        "check": "constant-function-asm",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "_copyToBytes",
            "source_mapping": {
              "start": 34144,
              "length": 841,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "_copyToBytes(uint256,bytes,uint256)"
            }
          }
        ],
        "description": "RLP._copyToBytes(uint256,bytes,uint256) () is declared view but contains assembly code\n",
        "markdown": "[RLP._copyToBytes(uint256,bytes,uint256)]() is declared view but contains assembly code\n",
        "first_markdown_element": "",
        "id": "1ddc475ff2ac45ca97c7cfa0bed3c19fe4e3177545a8ad06ec5fc3de4b0edca8",
        "additional_fields": {
          "contains_assembly": true
        },
        "check": "constant-function-asm",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "toBool",
            "source_mapping": {
              "start": 30036,
              "length": 351,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "toBool(RLP.RLPItem)"
            }
          }
        ],
        "description": "RLP.toBool(RLP.RLPItem) () is declared view but contains assembly code\n",
        "markdown": "[RLP.toBool(RLP.RLPItem)]() is declared view but contains assembly code\n",
        "first_markdown_element": "",
        "id": "1e8017da429de397e319d9c7d00cd383536556d63a24c9f519bcd12ecff8da36",
        "additional_fields": {
          "contains_assembly": true
        },
        "check": "constant-function-asm",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "isEmpty",
            "source_mapping": {
              "start": 26497,
              "length": 303,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "isEmpty(RLP.RLPItem)"
            }
          }
        ],
        "description": "RLP.isEmpty(RLP.RLPItem) () is declared view but contains assembly code\n",
        "markdown": "[RLP.isEmpty(RLP.RLPItem)]() is declared view but contains assembly code\n",
        "first_markdown_element": "",
        "id": "267d73c2f214fb015946fa311594689c2b43043ae167a4916675b462eb0b5117",
        "additional_fields": {
          "contains_assembly": true
        },
        "check": "constant-function-asm",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "isData",
            "source_mapping": {
              "start": 26115,
              "length": 248,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "isData(RLP.RLPItem)"
            }
          }
        ],
        "description": "RLP.isData(RLP.RLPItem) () is declared view but contains assembly code\n",
        "markdown": "[RLP.isData(RLP.RLPItem)]() is declared view but contains assembly code\n",
        "first_markdown_element": "",
        "id": "3d040dce98a8a5fb6f14846c854927f462e593a1fd8aacf4fad087fe53954c4b",
        "additional_fields": {
          "contains_assembly": true
        },
        "check": "constant-function-asm",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "_validate",
            "source_mapping": {
              "start": 35033,
              "length": 436,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "_validate(RLP.RLPItem)"
            }
          }
        ],
        "description": "RLP._validate(RLP.RLPItem) () is declared view but contains assembly code\n",
        "markdown": "[RLP._validate(RLP.RLPItem)]() is declared view but contains assembly code\n",
        "first_markdown_element": "",
        "id": "41e1a7b72bad93ea211303c5bb953d085253ae99d893b478928e71515459298d",
        "additional_fields": {
          "contains_assembly": true
        },
        "check": "constant-function-asm",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "toAddress",
            "source_mapping": {
              "start": 31552,
              "length": 279,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "toAddress(RLP.RLPItem)"
            }
          }
        ],
        "description": "RLP.toAddress(RLP.RLPItem) () is declared view but contains assembly code\n",
        "markdown": "[RLP.toAddress(RLP.RLPItem)]() is declared view but contains assembly code\n",
        "first_markdown_element": "",
        "id": "4cc35e21971f4e4a175b322e732c0447ae32b7c8a4b7c3094240a112f27ad1af",
        "additional_fields": {
          "contains_assembly": true
        },
        "check": "constant-function-asm",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "toByte",
            "source_mapping": {
              "start": 30544,
              "length": 302,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "toByte(RLP.RLPItem)"
            }
          }
        ],
        "description": "RLP.toByte(RLP.RLPItem) () is declared view but contains assembly code\n",
        "markdown": "[RLP.toByte(RLP.RLPItem)]() is declared view but contains assembly code\n",
        "first_markdown_element": "",
        "id": "6410f692da8c1819fba8b86734ee3c55ec9ff5bae985d5339cefdea795fb7eff",
        "additional_fields": {
          "contains_assembly": true
        },
        "check": "constant-function-asm",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "hashimoto",
            "source_mapping": {
              "start": 16712,
              "length": 6141,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Ethash",
                "source_mapping": {
                  "start": 8147,
                  "length": 14708,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "hashimoto(bytes32,bytes8,uint256[],uint256[],uint256)"
            }
          }
        ],
        "description": "Ethash.hashimoto(bytes32,bytes8,uint256[],uint256[],uint256) () is declared view but contains assembly code\n",
        "markdown": "[Ethash.hashimoto(bytes32,bytes8,uint256[],uint256[],uint256)]() is declared view but contains assembly code\n",
        "first_markdown_element": "",
        "id": "644ffb5cf5d091f49f0e0c01efdc5f4e1fe12e283d7498afdd1d80b1256cddcb",
        "additional_fields": {
          "contains_assembly": true
        },
        "check": "constant-function-asm",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "computeCacheRoot",
            "source_mapping": {
              "start": 8540,
              "length": 3601,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Ethash",
                "source_mapping": {
                  "start": 8147,
                  "length": 14708,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "computeCacheRoot(uint256,uint256,uint256[],uint256[],uint256)"
            }
          }
        ],
        "description": "Ethash.computeCacheRoot(uint256,uint256,uint256[],uint256[],uint256) () is declared view but contains assembly code\n",
        "markdown": "[Ethash.computeCacheRoot(uint256,uint256,uint256[],uint256[],uint256)]() is declared view but contains assembly code\n",
        "first_markdown_element": "",
        "id": "9cc797d08ddd84f0b7da4bfe2b760ae29a46a81142f8ea6d24f87a59a500f159",
        "additional_fields": {
          "contains_assembly": true
        },
        "check": "constant-function-asm",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "_itemLength",
            "source_mapping": {
              "start": 32418,
              "length": 934,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "_itemLength(uint256)"
            }
          }
        ],
        "description": "RLP._itemLength(uint256) () is declared view but contains assembly code\n",
        "markdown": "[RLP._itemLength(uint256)]() is declared view but contains assembly code\n",
        "first_markdown_element": "",
        "id": "b03934884d888bb015e9e3b7d857c4da2cadb769c0055f5eb1fc16a4fb8934b7",
        "additional_fields": {
          "contains_assembly": true
        },
        "check": "constant-function-asm",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "toRLPItem",
            "source_mapping": {
              "start": 24524,
              "length": 283,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "toRLPItem(bytes)"
            }
          }
        ],
        "description": "RLP.toRLPItem(bytes) () is declared view but contains assembly code\n",
        "markdown": "[RLP.toRLPItem(bytes)]() is declared view but contains assembly code\n",
        "first_markdown_element": "",
        "id": "b557f441a83244688e8c13719a64bf121d1fc0fc7e74a8b3036e4c326f71113f",
        "additional_fields": {
          "contains_assembly": true
        },
        "check": "constant-function-asm",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "toUint",
            "source_mapping": {
              "start": 29582,
              "length": 294,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "toUint(RLP.RLPItem)"
            }
          }
        ],
        "description": "RLP.toUint(RLP.RLPItem) () is declared view but contains assembly code\n",
        "markdown": "[RLP.toUint(RLP.RLPItem)]() is declared view but contains assembly code\n",
        "first_markdown_element": "",
        "id": "db55a67f8dc352aa9e4f4731e43c6be1d6cee2ee4f5abb1154a89ce3dec94a74",
        "additional_fields": {
          "contains_assembly": true
        },
        "check": "constant-function-asm",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "_decode",
            "source_mapping": {
              "start": 33402,
              "length": 669,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "_decode(RLP.RLPItem)"
            }
          }
        ],
        "description": "RLP._decode(RLP.RLPItem) () is declared view but contains assembly code\n",
        "markdown": "[RLP._decode(RLP.RLPItem)]() is declared view but contains assembly code\n",
        "first_markdown_element": "",
        "id": "e3da56a0e0ad24fba53c2f0e9a96f3ea3e7e18b7e35ee74ce074186a973d2962",
        "additional_fields": {
          "contains_assembly": true
        },
        "check": "constant-function-asm",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "doPayment",
            "source_mapping": {
              "start": 66574,
              "length": 873,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "doPayment(uint256,address)"
            }
          },
          {
            "type": "node",
            "name": "payment = (payment * (4 * 10000 - uncleRate)) / (4 * 10000)",
            "source_mapping": {
              "start": 66872,
              "length": 55,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "doPayment",
                "source_mapping": {
                  "start": 66574,
                  "length": 873,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "doPayment(uint256,address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "payment = (payment * (10000 - poolFees)) / 10000",
            "source_mapping": {
              "start": 66962,
              "length": 48,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "doPayment",
                "source_mapping": {
                  "start": 66574,
                  "length": 873,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "doPayment(uint256,address)"
                }
              }
            }
          }
        ],
        "description": "SmartPool.doPayment(uint256,address) () performs a multiplication on the result of a division:\n\t- payment = (payment * (4 * 10000 - uncleRate)) / (4 * 10000) ()\n\t- payment = (payment * (10000 - poolFees)) / 10000 ()\n",
        "markdown": "[SmartPool.doPayment(uint256,address)]() performs a multiplication on the result of a division:\n\t- [payment = (payment * (4 * 10000 - uncleRate)) / (4 * 10000)]()\n\t- [payment = (payment * (10000 - poolFees)) / 10000]()\n",
        "first_markdown_element": "",
        "id": "a62bb4fa475f5b8ef4728bbf0ee794362938c64c7277581a9f95f34f83871af9",
        "check": "divide-before-multiply",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifyClaim",
            "source_mapping": {
              "start": 60405,
              "length": 5340,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
            }
          },
          {
            "type": "node",
            "name": "getClaimSeed(msg.sender) == 0",
            "source_mapping": {
              "start": 64771,
              "length": 29,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            }
          }
        ],
        "description": "SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[]) () uses a dangerous strict equality:\n\t- getClaimSeed(msg.sender) == 0 ()\n",
        "markdown": "[SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])]() uses a dangerous strict equality:\n\t- [getClaimSeed(msg.sender) == 0]()\n",
        "first_markdown_element": "",
        "id": "06a0e6a962d811126aafd9626d804d0f1df09e7b8f7604e191a545b1d7ddc23a",
        "check": "incorrect-equality",
        "impact": "Medium",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "calculateSubmissionIndex",
            "source_mapping": {
              "start": 48092,
              "length": 1164,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "WeightedSubmission",
                "source_mapping": {
                  "start": 41287,
                  "length": 10389,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "calculateSubmissionIndex(address,uint256)"
            }
          },
          {
            "type": "node",
            "name": "submissionInd == numPendingSubmissions",
            "source_mapping": {
              "start": 49035,
              "length": 38,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "calculateSubmissionIndex",
                "source_mapping": {
                  "start": 48092,
                  "length": 1164,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "WeightedSubmission",
                    "source_mapping": {
                      "start": 41287,
                      "length": 10389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "calculateSubmissionIndex(address,uint256)"
                }
              }
            }
          }
        ],
        "description": "WeightedSubmission.calculateSubmissionIndex(address,uint256) () uses a dangerous strict equality:\n\t- submissionInd == numPendingSubmissions ()\n",
        "markdown": "[WeightedSubmission.calculateSubmissionIndex(address,uint256)]() uses a dangerous strict equality:\n\t- [submissionInd == numPendingSubmissions]()\n",
        "first_markdown_element": "",
        "id": "448feb7a7450bf9c752de9425272abd315eb5dbd3d60e8a1c565d788a9654819",
        "check": "incorrect-equality",
        "impact": "Medium",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "getClaimSeed",
            "source_mapping": {
              "start": 45098,
              "length": 575,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "WeightedSubmission",
                "source_mapping": {
                  "start": 41287,
                  "length": 10389,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "getClaimSeed(address)"
            }
          },
          {
            "type": "node",
            "name": "metaData.readyForVerification == 0",
            "source_mapping": {
              "start": 45246,
              "length": 34,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "getClaimSeed",
                "source_mapping": {
                  "start": 45098,
                  "length": 575,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "WeightedSubmission",
                    "source_mapping": {
                      "start": 41287,
                      "length": 10389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "getClaimSeed(address)"
                }
              }
            }
          }
        ],
        "description": "WeightedSubmission.getClaimSeed(address) () uses a dangerous strict equality:\n\t- metaData.readyForVerification == 0 ()\n",
        "markdown": "[WeightedSubmission.getClaimSeed(address)]() uses a dangerous strict equality:\n\t- [metaData.readyForVerification == 0]()\n",
        "first_markdown_element": "",
        "id": "ba61c269945c434a1be5dd703464b25cad0ca01a50c891f4922945ab0b24af87",
        "check": "incorrect-equality",
        "impact": "Medium",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "storeClaimSeed",
            "source_mapping": {
              "start": 45763,
              "length": 1207,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "WeightedSubmission",
                "source_mapping": {
                  "start": 41287,
                  "length": 10389,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "storeClaimSeed(address)"
            }
          },
          {
            "type": "node",
            "name": "metaData.readyForVerification == 0",
            "source_mapping": {
              "start": 46297,
              "length": 34,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "storeClaimSeed",
                "source_mapping": {
                  "start": 45763,
                  "length": 1207,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "WeightedSubmission",
                    "source_mapping": {
                      "start": 41287,
                      "length": 10389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "storeClaimSeed(address)"
                }
              }
            }
          }
        ],
        "description": "WeightedSubmission.storeClaimSeed(address) () uses a dangerous strict equality:\n\t- metaData.readyForVerification == 0 ()\n",
        "markdown": "[WeightedSubmission.storeClaimSeed(address)]() uses a dangerous strict equality:\n\t- [metaData.readyForVerification == 0]()\n",
        "first_markdown_element": "",
        "id": "ed7611e4fa07607f67b97096d047d4ea7cb4e717f55024617d7fb50a4836f895",
        "check": "incorrect-equality",
        "impact": "Medium",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifySubmissionIndex",
            "source_mapping": {
              "start": 46976,
              "length": 1106,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "WeightedSubmission",
                "source_mapping": {
                  "start": 41287,
                  "length": 10389,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifySubmissionIndex(address,uint256,uint256,uint256)"
            }
          },
          {
            "type": "node",
            "name": "seed == 0",
            "source_mapping": {
              "start": 47113,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifySubmissionIndex",
                "source_mapping": {
                  "start": 46976,
                  "length": 1106,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "WeightedSubmission",
                    "source_mapping": {
                      "start": 41287,
                      "length": 10389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifySubmissionIndex(address,uint256,uint256,uint256)"
                }
              }
            }
          }
        ],
        "description": "WeightedSubmission.verifySubmissionIndex(address,uint256,uint256,uint256) () uses a dangerous strict equality:\n\t- seed == 0 ()\n",
        "markdown": "[WeightedSubmission.verifySubmissionIndex(address,uint256,uint256,uint256)]() uses a dangerous strict equality:\n\t- [seed == 0]()\n",
        "first_markdown_element": "",
        "id": "fdb074520178bb8f5c4d22b6f7c0e8be0397854cd093ccbcf79770d1714dfda7",
        "check": "incorrect-equality",
        "impact": "Medium",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "output",
            "source_mapping": {
              "start": 50363,
              "length": 49,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "getClaimData",
                "source_mapping": {
                  "start": 50147,
                  "length": 1026,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "WeightedSubmission",
                    "source_mapping": {
                      "start": 41287,
                      "length": 10389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "getClaimData(address,uint256,uint256,uint256)"
                }
              }
            }
          }
        ],
        "description": "WeightedSubmission.getClaimData(address,uint256,uint256,uint256).output () is a local variable never initialized\n",
        "markdown": "[WeightedSubmission.getClaimData(address,uint256,uint256,uint256).output]() is a local variable never initialized\n",
        "first_markdown_element": "",
        "id": "056866184863ee7058c87b139bc7cf81e3c69eb042f2caf16dc8cd5abe11a7b1",
        "check": "uninitialized-local",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "submissionData",
            "source_mapping": {
              "start": 43134,
              "length": 43,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "submitClaim",
                "source_mapping": {
                  "start": 42173,
                  "length": 2919,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "WeightedSubmission",
                    "source_mapping": {
                      "start": 41287,
                      "length": 10389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "submitClaim(uint256,uint256,uint256,uint256,uint256,bool)"
                }
              }
            }
          }
        ],
        "description": "WeightedSubmission.submitClaim(uint256,uint256,uint256,uint256,uint256,bool).submissionData () is a local variable never initialized\n",
        "markdown": "[WeightedSubmission.submitClaim(uint256,uint256,uint256,uint256,uint256,bool).submissionData]() is a local variable never initialized\n",
        "first_markdown_element": "",
        "id": "18ef3d0399a765453bb966fb8ab5b734d7aee4c009b7e0523823c5eb87379c4c",
        "check": "uninitialized-local",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "result",
            "source_mapping": {
              "start": 7599,
              "length": 8,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "sponge",
                "source_mapping": {
                  "start": 6890,
                  "length": 1170,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SHA3_512",
                    "source_mapping": {
                      "start": 98,
                      "length": 7965,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "sponge(uint256[9])"
                }
              }
            }
          }
        ],
        "description": "SHA3_512.sponge(uint256[9]).result () is a local variable never initialized\n",
        "markdown": "[SHA3_512.sponge(uint256[9]).result]() is a local variable never initialized\n",
        "first_markdown_element": "",
        "id": "7e894293c9c23d6f8303607f4743a6133e9e82b29130befc20a3b2b3e08c4201",
        "check": "uninitialized-local",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "agtData",
            "source_mapping": {
              "start": 62818,
              "length": 29,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            }
          }
        ],
        "description": "SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[]).agtData () is a local variable never initialized\n",
        "markdown": "[SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[]).agtData]() is a local variable never initialized\n",
        "first_markdown_element": "",
        "id": "864b9f1783496ce37601684e448b2367785c2a6249abc72a094753eaa47c8acd",
        "check": "uninitialized-local",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "submissionData",
            "source_mapping": {
              "start": 48611,
              "length": 43,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "calculateSubmissionIndex",
                "source_mapping": {
                  "start": 48092,
                  "length": 1164,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "WeightedSubmission",
                    "source_mapping": {
                      "start": 41287,
                      "length": 10389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "calculateSubmissionIndex(address,uint256)"
                }
              }
            }
          }
        ],
        "description": "WeightedSubmission.calculateSubmissionIndex(address,uint256).submissionData () is a local variable never initialized\n",
        "markdown": "[WeightedSubmission.calculateSubmissionIndex(address,uint256).submissionData]() is a local variable never initialized\n",
        "first_markdown_element": "",
        "id": "a7c63d9ad2823eeb68dc8602aae8167611e947548af18f642e587c1fe1d8007b",
        "check": "uninitialized-local",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "data",
            "source_mapping": {
              "start": 40984,
              "length": 26,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyAgtDebugForTesting",
                "source_mapping": {
                  "start": 40473,
                  "length": 801,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Agt",
                    "source_mapping": {
                      "start": 35476,
                      "length": 5809,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyAgtDebugForTesting(uint256,uint256,uint256,uint256,uint256,uint256,uint256[],uint256[])"
                }
              }
            }
          }
        ],
        "description": "Agt.verifyAgtDebugForTesting(uint256,uint256,uint256,uint256,uint256,uint256,uint256[],uint256[]).data () is a local variable never initialized\n",
        "markdown": "[Agt.verifyAgtDebugForTesting(uint256,uint256,uint256,uint256,uint256,uint256,uint256[],uint256[]).data]() is a local variable never initialized\n",
        "first_markdown_element": "",
        "id": "cac1c5ea2acc5918d46e3313aadc8fb7309cd41d7e8e4ceee4432ba2228ff9d1",
        "check": "uninitialized-local",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "header",
            "source_mapping": {
              "start": 35979,
              "length": 26,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "parseBlockHeader",
                "source_mapping": {
                  "start": 35885,
                  "length": 715,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Agt",
                    "source_mapping": {
                      "start": 35476,
                      "length": 5809,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "parseBlockHeader(bytes)"
                }
              }
            }
          }
        ],
        "description": "Agt.parseBlockHeader(bytes).header () is a local variable never initialized\n",
        "markdown": "[Agt.parseBlockHeader(bytes).header]() is a local variable never initialized\n",
        "first_markdown_element": "",
        "id": "fc9223e3a201272fe206e149b2b8c30d238f498d27025ffeffb94366424331fb",
        "check": "uninitialized-local",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "parseBlockHeader",
            "source_mapping": {
              "start": 35885,
              "length": 715,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Agt",
                "source_mapping": {
                  "start": 35476,
                  "length": 5809,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "parseBlockHeader(bytes)"
            }
          },
          {
            "type": "node",
            "name": "it.next()",
            "source_mapping": {
              "start": 36509,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "parseBlockHeader",
                "source_mapping": {
                  "start": 35885,
                  "length": 715,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Agt",
                    "source_mapping": {
                      "start": 35476,
                      "length": 5809,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "parseBlockHeader(bytes)"
                }
              }
            }
          }
        ],
        "description": "Agt.parseBlockHeader(bytes) () ignores return value by it.next() ()\n",
        "markdown": "[Agt.parseBlockHeader(bytes)]() ignores return value by [it.next()]()\n",
        "first_markdown_element": "",
        "id": "531114984a44763ff07513f7d00c86abb56e0160815dfdc6a843ce652cbf725f",
        "check": "unused-return",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_withdrawalAddress",
            "source_mapping": {
              "start": 52427,
              "length": 26,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 52316,
                  "length": 676,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "SmartPool(address[],Ethash,address,bool,bool)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "withdrawalAddress = _withdrawalAddress",
            "source_mapping": {
              "start": 52830,
              "length": 38,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 52316,
                  "length": 676,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "SmartPool(address[],Ethash,address,bool,bool)"
                }
              }
            }
          }
        ],
        "description": "SmartPool.SmartPool(address[],Ethash,address,bool,bool)._withdrawalAddress () lacks a zero-check on :\n\t\t- withdrawalAddress = _withdrawalAddress ()\n",
        "markdown": "[SmartPool.SmartPool(address[],Ethash,address,bool,bool)._withdrawalAddress]() lacks a zero-check on :\n\t\t- [withdrawalAddress = _withdrawalAddress]()\n",
        "first_markdown_element": "",
        "id": "a7da1a34bb90be9fdbe2fb191a6d9d79ec651918f4b6cc0a539263fd5c8315e5",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifyClaim",
            "source_mapping": {
              "start": 60405,
              "length": 5340,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
            }
          },
          {
            "type": "node",
            "name": "ethash = ethashContract.hashimoto(bytes32(leafHash),bytes8(nonce),dataSetLookup,witnessForLookup,header.blockNumber / 30000)",
            "source_mapping": {
              "start": 63825,
              "length": 327,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "VerifyClaim(msg.sender,0x8400000a,header.blockNumber / 30000)",
            "source_mapping": {
              "start": 64418,
              "length": 65,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          },
          {
            "type": "node",
            "name": "VerifyClaim(msg.sender,0x8400000b,ethash)",
            "source_mapping": {
              "start": 64639,
              "length": 45,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          },
          {
            "type": "node",
            "name": "VerifyClaim(msg.sender,0x84000001,0)",
            "source_mapping": {
              "start": 64865,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          },
          {
            "type": "node",
            "name": "VerifyClaim(msg.sender,0x84000002,0)",
            "source_mapping": {
              "start": 65119,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          }
        ],
        "description": "Reentrancy in SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[]) ():\n\tExternal calls:\n\t- ethash = ethashContract.hashimoto(bytes32(leafHash),bytes8(nonce),dataSetLookup,witnessForLookup,header.blockNumber / 30000) ()\n\tEvent emitted after the call(s):\n\t- VerifyClaim(msg.sender,0x8400000a,header.blockNumber / 30000) ()\n\t- VerifyClaim(msg.sender,0x8400000b,ethash) ()\n\t- VerifyClaim(msg.sender,0x84000001,0) ()\n\t- VerifyClaim(msg.sender,0x84000002,0) ()\n",
        "markdown": "Reentrancy in [SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])]():\n\tExternal calls:\n\t- [ethash = ethashContract.hashimoto(bytes32(leafHash),bytes8(nonce),dataSetLookup,witnessForLookup,header.blockNumber / 30000)]()\n\tEvent emitted after the call(s):\n\t- [VerifyClaim(msg.sender,0x8400000a,header.blockNumber / 30000)]()\n\t- [VerifyClaim(msg.sender,0x8400000b,ethash)]()\n\t- [VerifyClaim(msg.sender,0x84000001,0)]()\n\t- [VerifyClaim(msg.sender,0x84000002,0)]()\n",
        "first_markdown_element": "",
        "id": "3de378c70985d2f6bda0758c2992898cef435788f9c964376a0a5a5b70dc658c",
        "check": "reentrancy-events",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifyClaim",
            "source_mapping": {
              "start": 60405,
              "length": 5340,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
            }
          },
          {
            "type": "node",
            "name": "ethash = ethashContract.hashimoto(bytes32(leafHash),bytes8(nonce),dataSetLookup,witnessForLookup,header.blockNumber / 30000)",
            "source_mapping": {
              "start": 63825,
              "length": 327,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "! doPayment(submissionData.totalSubmissionValue,minersData[msg.sender].paymentAddress)",
            "source_mapping": {
              "start": 65314,
              "length": 113,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "! paymentAddress.send(payment)",
            "source_mapping": {
              "start": 67302,
              "length": 32,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "doPayment",
                "source_mapping": {
                  "start": 66574,
                  "length": 873,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "doPayment(uint256,address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "DoPayment(msg.sender,paymentAddress,payment)",
            "source_mapping": {
              "start": 67361,
              "length": 48,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "doPayment",
                "source_mapping": {
                  "start": 66574,
                  "length": 873,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "doPayment(uint256,address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          },
          {
            "type": "node",
            "name": "! doPayment(submissionData.totalSubmissionValue,minersData[msg.sender].paymentAddress)",
            "source_mapping": {
              "start": 65314,
              "length": 113,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          },
          {
            "type": "node",
            "name": "VerifyClaim(msg.sender,0x84000000,payment)",
            "source_mapping": {
              "start": 67181,
              "length": 46,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "doPayment",
                "source_mapping": {
                  "start": 66574,
                  "length": 873,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "doPayment(uint256,address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          },
          {
            "type": "node",
            "name": "! doPayment(submissionData.totalSubmissionValue,minersData[msg.sender].paymentAddress)",
            "source_mapping": {
              "start": 65314,
              "length": 113,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          },
          {
            "type": "node",
            "name": "VerifyClaim(msg.sender,0,0)",
            "source_mapping": {
              "start": 65649,
              "length": 31,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          }
        ],
        "description": "Reentrancy in SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[]) ():\n\tExternal calls:\n\t- ethash = ethashContract.hashimoto(bytes32(leafHash),bytes8(nonce),dataSetLookup,witnessForLookup,header.blockNumber / 30000) ()\n\tExternal calls sending eth:\n\t- ! doPayment(submissionData.totalSubmissionValue,minersData[msg.sender].paymentAddress) ()\n\t\t- ! paymentAddress.send(payment) ()\n\tEvent emitted after the call(s):\n\t- DoPayment(msg.sender,paymentAddress,payment) ()\n\t\t- ! doPayment(submissionData.totalSubmissionValue,minersData[msg.sender].paymentAddress) ()\n\t- VerifyClaim(msg.sender,0x84000000,payment) ()\n\t\t- ! doPayment(submissionData.totalSubmissionValue,minersData[msg.sender].paymentAddress) ()\n\t- VerifyClaim(msg.sender,0,0) ()\n",
        "markdown": "Reentrancy in [SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])]():\n\tExternal calls:\n\t- [ethash = ethashContract.hashimoto(bytes32(leafHash),bytes8(nonce),dataSetLookup,witnessForLookup,header.blockNumber / 30000)]()\n\tExternal calls sending eth:\n\t- [! doPayment(submissionData.totalSubmissionValue,minersData[msg.sender].paymentAddress)]()\n\t\t- [! paymentAddress.send(payment)]()\n\tEvent emitted after the call(s):\n\t- [DoPayment(msg.sender,paymentAddress,payment)]()\n\t\t- [! doPayment(submissionData.totalSubmissionValue,minersData[msg.sender].paymentAddress)]()\n\t- [VerifyClaim(msg.sender,0x84000000,payment)]()\n\t\t- [! doPayment(submissionData.totalSubmissionValue,minersData[msg.sender].paymentAddress)]()\n\t- [VerifyClaim(msg.sender,0,0)]()\n",
        "first_markdown_element": "",
        "id": "4e6d63e4473169d49115497053af43f849001604b4d9a89f460dca88ad400fe8",
        "check": "reentrancy-events",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "_copyToBytes",
            "source_mapping": {
              "start": 34144,
              "length": 841,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "_copyToBytes(uint256,bytes,uint256)"
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 34375,
              "length": 610,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "_copyToBytes",
                "source_mapping": {
                  "start": 34144,
                  "length": 841,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "RLP",
                    "source_mapping": {
                      "start": 23004,
                      "length": 12467,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "_copyToBytes(uint256,bytes,uint256)"
                }
              }
            }
          }
        ],
        "description": "RLP._copyToBytes(uint256,bytes,uint256) () uses assembly\n\t- INLINE ASM ()\n",
        "markdown": "[RLP._copyToBytes(uint256,bytes,uint256)]() uses assembly\n\t- [INLINE ASM]()\n",
        "first_markdown_element": "",
        "id": "1c31cda78c41c0af64aa8c2be088b45de9d6da8686849e40e394d8084f7ee731",
        "check": "assembly",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "isList",
            "source_mapping": {
              "start": 25743,
              "length": 256,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "isList(RLP.RLPItem)"
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 25922,
              "length": 77,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "isList",
                "source_mapping": {
                  "start": 25743,
                  "length": 256,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "RLP",
                    "source_mapping": {
                      "start": 23004,
                      "length": 12467,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "isList(RLP.RLPItem)"
                }
              }
            }
          }
        ],
        "description": "RLP.isList(RLP.RLPItem) () uses assembly\n\t- INLINE ASM ()\n",
        "markdown": "[RLP.isList(RLP.RLPItem)]() uses assembly\n\t- [INLINE ASM]()\n",
        "first_markdown_element": "",
        "id": "2e3e1729e68306b5cb0d9bd61e1b979ca123370dccb861963ff12074406bf40a",
        "check": "assembly",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "toUint",
            "source_mapping": {
              "start": 29582,
              "length": 294,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "toUint(RLP.RLPItem)"
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 29793,
              "length": 83,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "toUint",
                "source_mapping": {
                  "start": 29582,
                  "length": 294,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "RLP",
                    "source_mapping": {
                      "start": 23004,
                      "length": 12467,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "toUint(RLP.RLPItem)"
                }
              }
            }
          }
        ],
        "description": "RLP.toUint(RLP.RLPItem) () uses assembly\n\t- INLINE ASM ()\n",
        "markdown": "[RLP.toUint(RLP.RLPItem)]() uses assembly\n\t- [INLINE ASM]()\n",
        "first_markdown_element": "",
        "id": "4b5ca1a1665555a7e2169460c98562f752aab265b498ede1780d122e24e5f450",
        "check": "assembly",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "isEmpty",
            "source_mapping": {
              "start": 26497,
              "length": 303,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "isEmpty(RLP.RLPItem)"
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 26678,
              "length": 67,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "isEmpty",
                "source_mapping": {
                  "start": 26497,
                  "length": 303,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "RLP",
                    "source_mapping": {
                      "start": 23004,
                      "length": 12467,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "isEmpty(RLP.RLPItem)"
                }
              }
            }
          }
        ],
        "description": "RLP.isEmpty(RLP.RLPItem) () uses assembly\n\t- INLINE ASM ()\n",
        "markdown": "[RLP.isEmpty(RLP.RLPItem)]() uses assembly\n\t- [INLINE ASM]()\n",
        "first_markdown_element": "",
        "id": "651c6fbd6565121c95f28ae43934a1e278bd1fe8274de6b61f03f746105a7522",
        "check": "assembly",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "_payloadOffset",
            "source_mapping": {
              "start": 31862,
              "length": 513,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "_payloadOffset(RLP.RLPItem)"
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 32053,
              "length": 63,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "_payloadOffset",
                "source_mapping": {
                  "start": 31862,
                  "length": 513,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "RLP",
                    "source_mapping": {
                      "start": 23004,
                      "length": 12467,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "_payloadOffset(RLP.RLPItem)"
                }
              }
            }
          }
        ],
        "description": "RLP._payloadOffset(RLP.RLPItem) () uses assembly\n\t- INLINE ASM ()\n",
        "markdown": "[RLP._payloadOffset(RLP.RLPItem)]() uses assembly\n\t- [INLINE ASM]()\n",
        "first_markdown_element": "",
        "id": "6aea579ccf3a460092f5421ca153e6341fa2ca8010fb2b072062794b4afa2862",
        "check": "assembly",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "toBool",
            "source_mapping": {
              "start": 30036,
              "length": 351,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "toBool(RLP.RLPItem)"
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 30251,
              "length": 68,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "toBool",
                "source_mapping": {
                  "start": 30036,
                  "length": 351,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "RLP",
                    "source_mapping": {
                      "start": 23004,
                      "length": 12467,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "toBool(RLP.RLPItem)"
                }
              }
            }
          }
        ],
        "description": "RLP.toBool(RLP.RLPItem) () uses assembly\n\t- INLINE ASM ()\n",
        "markdown": "[RLP.toBool(RLP.RLPItem)]() uses assembly\n\t- [INLINE ASM]()\n",
        "first_markdown_element": "",
        "id": "7bb293488748f4731b9dd8174ad79ada0c6c15932e0659fd708960073d630721",
        "check": "assembly",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "_validate",
            "source_mapping": {
              "start": 35033,
              "length": 436,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "_validate(RLP.RLPItem)"
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 35243,
              "length": 117,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "_validate",
                "source_mapping": {
                  "start": 35033,
                  "length": 436,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "RLP",
                    "source_mapping": {
                      "start": 23004,
                      "length": 12467,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "_validate(RLP.RLPItem)"
                }
              }
            }
          }
        ],
        "description": "RLP._validate(RLP.RLPItem) () uses assembly\n\t- INLINE ASM ()\n",
        "markdown": "[RLP._validate(RLP.RLPItem)]() uses assembly\n\t- [INLINE ASM]()\n",
        "first_markdown_element": "",
        "id": "7c8849ae06b75fe2f85fdc3aac65e2014a03e3feb6bf4916b8640e6eb05ae951",
        "check": "assembly",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "hashimoto",
            "source_mapping": {
              "start": 16712,
              "length": 6141,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Ethash",
                "source_mapping": {
                  "start": 8147,
                  "length": 14708,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "hashimoto(bytes32,bytes8,uint256[],uint256[],uint256)"
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 17705,
              "length": 317,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "hashimoto",
                "source_mapping": {
                  "start": 16712,
                  "length": 6141,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Ethash",
                    "source_mapping": {
                      "start": 8147,
                      "length": 14708,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "hashimoto(bytes32,bytes8,uint256[],uint256[],uint256)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 18510,
              "length": 3234,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "hashimoto",
                "source_mapping": {
                  "start": 16712,
                  "length": 6141,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Ethash",
                    "source_mapping": {
                      "start": 8147,
                      "length": 14708,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "hashimoto(bytes32,bytes8,uint256[],uint256[],uint256)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 21736,
              "length": 867,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "hashimoto",
                "source_mapping": {
                  "start": 16712,
                  "length": 6141,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Ethash",
                    "source_mapping": {
                      "start": 8147,
                      "length": 14708,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "hashimoto(bytes32,bytes8,uint256[],uint256[],uint256)"
                }
              }
            }
          }
        ],
        "description": "Ethash.hashimoto(bytes32,bytes8,uint256[],uint256[],uint256) () uses assembly\n\t- INLINE ASM ()\n\t- INLINE ASM ()\n\t- INLINE ASM ()\n",
        "markdown": "[Ethash.hashimoto(bytes32,bytes8,uint256[],uint256[],uint256)]() uses assembly\n\t- [INLINE ASM]()\n\t- [INLINE ASM]()\n\t- [INLINE ASM]()\n",
        "first_markdown_element": "",
        "id": "8c1e560fe01349f1da4624ac10bfe9076b86bd011af57324a24e6276a42c61cf",
        "check": "assembly",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "computeCacheRoot",
            "source_mapping": {
              "start": 8540,
              "length": 3601,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Ethash",
                "source_mapping": {
                  "start": 8147,
                  "length": 14708,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "computeCacheRoot(uint256,uint256,uint256[],uint256[],uint256)"
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 9070,
              "length": 108,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "computeCacheRoot",
                "source_mapping": {
                  "start": 8540,
                  "length": 3601,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Ethash",
                    "source_mapping": {
                      "start": 8147,
                      "length": 14708,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "computeCacheRoot(uint256,uint256,uint256[],uint256[],uint256)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 9373,
              "length": 217,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "computeCacheRoot",
                "source_mapping": {
                  "start": 8540,
                  "length": 3601,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Ethash",
                    "source_mapping": {
                      "start": 8147,
                      "length": 14708,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "computeCacheRoot(uint256,uint256,uint256[],uint256[],uint256)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 9658,
              "length": 221,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "computeCacheRoot",
                "source_mapping": {
                  "start": 8540,
                  "length": 3601,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Ethash",
                    "source_mapping": {
                      "start": 8147,
                      "length": 14708,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "computeCacheRoot(uint256,uint256,uint256[],uint256[],uint256)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 9915,
              "length": 194,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "computeCacheRoot",
                "source_mapping": {
                  "start": 8540,
                  "length": 3601,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Ethash",
                    "source_mapping": {
                      "start": 8147,
                      "length": 14708,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "computeCacheRoot(uint256,uint256,uint256[],uint256[],uint256)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 10237,
              "length": 176,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "computeCacheRoot",
                "source_mapping": {
                  "start": 8540,
                  "length": 3601,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Ethash",
                    "source_mapping": {
                      "start": 8147,
                      "length": 14708,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "computeCacheRoot(uint256,uint256,uint256[],uint256[],uint256)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 10481,
              "length": 190,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "computeCacheRoot",
                "source_mapping": {
                  "start": 8540,
                  "length": 3601,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Ethash",
                    "source_mapping": {
                      "start": 8147,
                      "length": 14708,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "computeCacheRoot(uint256,uint256,uint256[],uint256[],uint256)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 10707,
              "length": 197,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "computeCacheRoot",
                "source_mapping": {
                  "start": 8540,
                  "length": 3601,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Ethash",
                    "source_mapping": {
                      "start": 8147,
                      "length": 14708,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "computeCacheRoot(uint256,uint256,uint256[],uint256[],uint256)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 11032,
              "length": 106,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "computeCacheRoot",
                "source_mapping": {
                  "start": 8540,
                  "length": 3601,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Ethash",
                    "source_mapping": {
                      "start": 8147,
                      "length": 14708,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "computeCacheRoot(uint256,uint256,uint256[],uint256[],uint256)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 11190,
              "length": 226,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "computeCacheRoot",
                "source_mapping": {
                  "start": 8540,
                  "length": 3601,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Ethash",
                    "source_mapping": {
                      "start": 8147,
                      "length": 14708,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "computeCacheRoot(uint256,uint256,uint256[],uint256[],uint256)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 11484,
              "length": 220,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "computeCacheRoot",
                "source_mapping": {
                  "start": 8540,
                  "length": 3601,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Ethash",
                    "source_mapping": {
                      "start": 8147,
                      "length": 14708,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "computeCacheRoot(uint256,uint256,uint256[],uint256[],uint256)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 11740,
              "length": 223,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "computeCacheRoot",
                "source_mapping": {
                  "start": 8540,
                  "length": 3601,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Ethash",
                    "source_mapping": {
                      "start": 8147,
                      "length": 14708,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "computeCacheRoot(uint256,uint256,uint256[],uint256[],uint256)"
                }
              }
            }
          }
        ],
        "description": "Ethash.computeCacheRoot(uint256,uint256,uint256[],uint256[],uint256) () uses assembly\n\t- INLINE ASM ()\n\t- INLINE ASM ()\n\t- INLINE ASM ()\n\t- INLINE ASM ()\n\t- INLINE ASM ()\n\t- INLINE ASM ()\n\t- INLINE ASM ()\n\t- INLINE ASM ()\n\t- INLINE ASM ()\n\t- INLINE ASM ()\n\t- INLINE ASM ()\n",
        "markdown": "[Ethash.computeCacheRoot(uint256,uint256,uint256[],uint256[],uint256)]() uses assembly\n\t- [INLINE ASM]()\n\t- [INLINE ASM]()\n\t- [INLINE ASM]()\n\t- [INLINE ASM]()\n\t- [INLINE ASM]()\n\t- [INLINE ASM]()\n\t- [INLINE ASM]()\n\t- [INLINE ASM]()\n\t- [INLINE ASM]()\n\t- [INLINE ASM]()\n\t- [INLINE ASM]()\n",
        "first_markdown_element": "",
        "id": "9ae16c900c20f377039289907647c0d243ef589669a2a0b48a20cc6260fa52c2",
        "check": "assembly",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "toAddress",
            "source_mapping": {
              "start": 31552,
              "length": 279,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "toAddress(RLP.RLPItem)"
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 31758,
              "length": 73,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "toAddress",
                "source_mapping": {
                  "start": 31552,
                  "length": 279,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "RLP",
                    "source_mapping": {
                      "start": 23004,
                      "length": 12467,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "toAddress(RLP.RLPItem)"
                }
              }
            }
          }
        ],
        "description": "RLP.toAddress(RLP.RLPItem) () uses assembly\n\t- INLINE ASM ()\n",
        "markdown": "[RLP.toAddress(RLP.RLPItem)]() uses assembly\n\t- [INLINE ASM]()\n",
        "first_markdown_element": "",
        "id": "aec723a6047364d425b9825c7f61a7cd6190302be11a16cbd128fcf87c29b896",
        "check": "assembly",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "_decode",
            "source_mapping": {
              "start": 33402,
              "length": 669,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "_decode(RLP.RLPItem)"
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 33588,
              "length": 62,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "_decode",
                "source_mapping": {
                  "start": 33402,
                  "length": 669,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "RLP",
                    "source_mapping": {
                      "start": 23004,
                      "length": 12467,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "_decode(RLP.RLPItem)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 33889,
              "length": 89,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "_decode",
                "source_mapping": {
                  "start": 33402,
                  "length": 669,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "RLP",
                    "source_mapping": {
                      "start": 23004,
                      "length": 12467,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "_decode(RLP.RLPItem)"
                }
              }
            }
          }
        ],
        "description": "RLP._decode(RLP.RLPItem) () uses assembly\n\t- INLINE ASM ()\n\t- INLINE ASM ()\n",
        "markdown": "[RLP._decode(RLP.RLPItem)]() uses assembly\n\t- [INLINE ASM]()\n\t- [INLINE ASM]()\n",
        "first_markdown_element": "",
        "id": "b43260aea2e64e4457a8d31260b64551d0ece2542a90a82f7c4e6303654d02bc",
        "check": "assembly",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "toByte",
            "source_mapping": {
              "start": 30544,
              "length": 302,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "toByte(RLP.RLPItem)"
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 30759,
              "length": 72,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "toByte",
                "source_mapping": {
                  "start": 30544,
                  "length": 302,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "RLP",
                    "source_mapping": {
                      "start": 23004,
                      "length": 12467,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "toByte(RLP.RLPItem)"
                }
              }
            }
          }
        ],
        "description": "RLP.toByte(RLP.RLPItem) () uses assembly\n\t- INLINE ASM ()\n",
        "markdown": "[RLP.toByte(RLP.RLPItem)]() uses assembly\n\t- [INLINE ASM]()\n",
        "first_markdown_element": "",
        "id": "b5b28d1e3da05b62e24389060766b4f8dae53a41d8899b7403002d08daa0cbb1",
        "check": "assembly",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "isData",
            "source_mapping": {
              "start": 26115,
              "length": 248,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "isData(RLP.RLPItem)"
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 26294,
              "length": 69,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "isData",
                "source_mapping": {
                  "start": 26115,
                  "length": 248,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "RLP",
                    "source_mapping": {
                      "start": 23004,
                      "length": 12467,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "isData(RLP.RLPItem)"
                }
              }
            }
          }
        ],
        "description": "RLP.isData(RLP.RLPItem) () uses assembly\n\t- INLINE ASM ()\n",
        "markdown": "[RLP.isData(RLP.RLPItem)]() uses assembly\n\t- [INLINE ASM]()\n",
        "first_markdown_element": "",
        "id": "c115258b2749e41c2eab994324d9a823f86c61ce0795f93c45fb1ab646a784c4",
        "check": "assembly",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "toRLPItem",
            "source_mapping": {
              "start": 24524,
              "length": 283,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "toRLPItem(bytes)"
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 24718,
              "length": 64,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "toRLPItem",
                "source_mapping": {
                  "start": 24524,
                  "length": 283,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "RLP",
                    "source_mapping": {
                      "start": 23004,
                      "length": 12467,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "toRLPItem(bytes)"
                }
              }
            }
          }
        ],
        "description": "RLP.toRLPItem(bytes) () uses assembly\n\t- INLINE ASM ()\n",
        "markdown": "[RLP.toRLPItem(bytes)]() uses assembly\n\t- [INLINE ASM]()\n",
        "first_markdown_element": "",
        "id": "cc9b125bbb8edd5a4dd624a2e18dc59b5922c0776addee3f502e834a2755f4e8",
        "check": "assembly",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "_itemLength",
            "source_mapping": {
              "start": 32418,
              "length": 934,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "_itemLength(uint256)"
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 32509,
              "length": 63,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "_itemLength",
                "source_mapping": {
                  "start": 32418,
                  "length": 934,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "RLP",
                    "source_mapping": {
                      "start": 23004,
                      "length": 12467,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "_itemLength(uint256)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 32741,
              "length": 254,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "_itemLength",
                "source_mapping": {
                  "start": 32418,
                  "length": 934,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "RLP",
                    "source_mapping": {
                      "start": 23004,
                      "length": 12467,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "_itemLength(uint256)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 33095,
              "length": 254,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "_itemLength",
                "source_mapping": {
                  "start": 32418,
                  "length": 934,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "RLP",
                    "source_mapping": {
                      "start": 23004,
                      "length": 12467,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "_itemLength(uint256)"
                }
              }
            }
          }
        ],
        "description": "RLP._itemLength(uint256) () uses assembly\n\t- INLINE ASM ()\n\t- INLINE ASM ()\n\t- INLINE ASM ()\n",
        "markdown": "[RLP._itemLength(uint256)]() uses assembly\n\t- [INLINE ASM]()\n\t- [INLINE ASM]()\n\t- [INLINE ASM]()\n",
        "first_markdown_element": "",
        "id": "e1ce63a3d3b191dcafffe58d9be911c33d519bbaabee4697cfb0b8a3a732c735",
        "check": "assembly",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "items",
            "source_mapping": {
              "start": 26926,
              "length": 447,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "items(RLP.RLPItem)"
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 27099,
              "length": 65,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "items",
                "source_mapping": {
                  "start": 26926,
                  "length": 447,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "RLP",
                    "source_mapping": {
                      "start": 23004,
                      "length": 12467,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "items(RLP.RLPItem)"
                }
              }
            }
          }
        ],
        "description": "RLP.items(RLP.RLPItem) () uses assembly\n\t- INLINE ASM ()\n",
        "markdown": "[RLP.items(RLP.RLPItem)]() uses assembly\n\t- [INLINE ASM]()\n",
        "first_markdown_element": "",
        "id": "edf4e8295506be0c4242bfebdb17d9aa2c1fcb65c6f3569e27aba684e2d4b8a0",
        "check": "assembly",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "toInt",
            "source_mapping": {
              "start": 31003,
              "length": 108,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "toInt(RLP.RLPItem)"
            }
          }
        ],
        "description": "RLP.toInt(RLP.RLPItem) () is never used and should be removed\n",
        "markdown": "[RLP.toInt(RLP.RLPItem)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "1513f8e1cffb75505cf3098b278d95dee3f09df921c1d9480141696fd3c7383f",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "next",
            "source_mapping": {
              "start": 23985,
              "length": 199,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "next(RLP.Iterator,bool)"
            }
          }
        ],
        "description": "RLP.next(RLP.Iterator,bool) () is never used and should be removed\n",
        "markdown": "[RLP.next(RLP.Iterator,bool)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "1e8e85736d158f93816c5c68e270660c673a6a79307c710df9aaea13c5b03dfc",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "_validate",
            "source_mapping": {
              "start": 35033,
              "length": 436,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "_validate(RLP.RLPItem)"
            }
          }
        ],
        "description": "RLP._validate(RLP.RLPItem) () is never used and should be removed\n",
        "markdown": "[RLP._validate(RLP.RLPItem)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "2aad0a80799259ca05070f7cd655fe275a0cd2cd0c75ca27c5a01ff308b4241e",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "toList",
            "source_mapping": {
              "start": 28660,
              "length": 325,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "toList(RLP.RLPItem)"
            }
          }
        ],
        "description": "RLP.toList(RLP.RLPItem) () is never used and should be removed\n",
        "markdown": "[RLP.toList(RLP.RLPItem)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "306229a04284c72586cb07a994ab084c1a87cd3f1470717d4286f917bdaa3a08",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "isNull",
            "source_mapping": {
              "start": 25507,
              "length": 116,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "isNull(RLP.RLPItem)"
            }
          }
        ],
        "description": "RLP.isNull(RLP.RLPItem) () is never used and should be removed\n",
        "markdown": "[RLP.isNull(RLP.RLPItem)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "463509d6078051e774f8aee758772fbe380011bd17d8ebb8d1fde5587723ce14",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "toByte",
            "source_mapping": {
              "start": 30544,
              "length": 302,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "toByte(RLP.RLPItem)"
            }
          }
        ],
        "description": "RLP.toByte(RLP.RLPItem) () is never used and should be removed\n",
        "markdown": "[RLP.toByte(RLP.RLPItem)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "4a1fc605cff6c7730a2359e27b26650a5c91f4a8e964ae080d33ce6795434694",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "toAscii",
            "source_mapping": {
              "start": 29151,
              "length": 274,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "toAscii(RLP.RLPItem)"
            }
          }
        ],
        "description": "RLP.toAscii(RLP.RLPItem) () is never used and should be removed\n",
        "markdown": "[RLP.toAscii(RLP.RLPItem)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "905c5276a32abd233363c2d1d3726b6208743da0cc506968bfe9759bed252abc",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "toBytes32",
            "source_mapping": {
              "start": 31271,
              "length": 120,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "toBytes32(RLP.RLPItem)"
            }
          }
        ],
        "description": "RLP.toBytes32(RLP.RLPItem) () is never used and should be removed\n",
        "markdown": "[RLP.toBytes32(RLP.RLPItem)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "96f3b5a13befbd988724aaf7b69b2207005f72a702867d348ab3e69c736493f3",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "toAddress",
            "source_mapping": {
              "start": 31552,
              "length": 279,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "toAddress(RLP.RLPItem)"
            }
          }
        ],
        "description": "RLP.toAddress(RLP.RLPItem) () is never used and should be removed\n",
        "markdown": "[RLP.toAddress(RLP.RLPItem)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "9d341f7b2fe876838c4ae116d2072776745fc52b8e577d165fa94d2d6b71eacb",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "isEmpty",
            "source_mapping": {
              "start": 26497,
              "length": 303,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "isEmpty(RLP.RLPItem)"
            }
          }
        ],
        "description": "RLP.isEmpty(RLP.RLPItem) () is never used and should be removed\n",
        "markdown": "[RLP.isEmpty(RLP.RLPItem)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "b2da4b0204a32b1aed472dbe16e05e86a2655699f842d3864070fe868a30f037",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "items",
            "source_mapping": {
              "start": 26926,
              "length": 447,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "items(RLP.RLPItem)"
            }
          }
        ],
        "description": "RLP.items(RLP.RLPItem) () is never used and should be removed\n",
        "markdown": "[RLP.items(RLP.RLPItem)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "b41958556ad5e6d516651a28844da395ab448e104850c8cc4c23d7bea6ba71bd",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "_copyToBytes",
            "source_mapping": {
              "start": 34144,
              "length": 841,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "_copyToBytes(uint256,bytes,uint256)"
            }
          }
        ],
        "description": "RLP._copyToBytes(uint256,bytes,uint256) () is never used and should be removed\n",
        "markdown": "[RLP._copyToBytes(uint256,bytes,uint256)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "bf1b17cbb785d9869dd092a6be7ee9f1a8b70d051e2b60d992ab0b43dbec651d",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "toBool",
            "source_mapping": {
              "start": 30036,
              "length": 351,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "toBool(RLP.RLPItem)"
            }
          }
        ],
        "description": "RLP.toBool(RLP.RLPItem) () is never used and should be removed\n",
        "markdown": "[RLP.toBool(RLP.RLPItem)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "c58cacd17b2425a8444f1ac56b3c8add4a66a931e71b88a1e58248b5ffe4b008",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "toBytes",
            "source_mapping": {
              "start": 27826,
              "length": 236,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "toBytes(RLP.RLPItem)"
            }
          }
        ],
        "description": "RLP.toBytes(RLP.RLPItem) () is never used and should be removed\n",
        "markdown": "[RLP.toBytes(RLP.RLPItem)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "d7f44b88ebffc2eeb7d5ab7206b6e2c64c582afc1eda4057787b595610803197",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "toRLPItem",
            "source_mapping": {
              "start": 25001,
              "length": 390,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "toRLPItem(bytes,bool)"
            }
          }
        ],
        "description": "RLP.toRLPItem(bytes,bool) () is never used and should be removed\n",
        "markdown": "[RLP.toRLPItem(bytes,bool)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "d897d0ecb13ff3f177fcb13d891769a3604a4668b5aa928a3b530fe4cc68260e",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "toData",
            "source_mapping": {
              "start": 28218,
              "length": 235,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "toData(RLP.RLPItem)"
            }
          }
        ],
        "description": "RLP.toData(RLP.RLPItem) () is never used and should be removed\n",
        "markdown": "[RLP.toData(RLP.RLPItem)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "dce48179f88514e81e750dc47076efbf2095cc3cbde864ffa7880551e54a6446",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "currentHash = uint256(sha3()(leftCounterMin + (leftCounterMax << 128),leftHash,rightCounterMin + (rightCounterMax << 128),rightHash)) & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
            "source_mapping": {
              "start": 38448,
              "length": 276,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyAgt",
                "source_mapping": {
                  "start": 36890,
                  "length": 3573,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Agt",
                    "source_mapping": {
                      "start": 35476,
                      "length": 5809,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[])"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected currentHash = uint256(sha3()(leftCounterMin + (leftCounterMax << 128),leftHash,rightCounterMin + (rightCounterMax << 128),rightHash)) & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ():\n\t- Usage of \"sha3()\" should be replaced with \"keccak256()\"\n",
        "markdown": "Deprecated standard detected [currentHash = uint256(sha3()(leftCounterMin + (leftCounterMax << 128),leftHash,rightCounterMin + (rightCounterMax << 128),rightHash)) & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF]():\n\t- Usage of \"sha3()\" should be replaced with \"keccak256()\"\n",
        "first_markdown_element": "",
        "id": "1855d616261239872fdf13a97058619ef9ed36d21362db5a3990cc4fc3aca2a7",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "uint256(sha3()(dataSetLookup[4 * index],dataSetLookup[4 * index + 1],dataSetLookup[4 * index + 2],dataSetLookup[4 * index + 3]))",
            "source_mapping": {
              "start": 13280,
              "length": 205,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "computeLeaf",
                "source_mapping": {
                  "start": 13181,
                  "length": 348,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Ethash",
                    "source_mapping": {
                      "start": 8147,
                      "length": 14708,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "computeLeaf(uint256[],uint256)"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected uint256(sha3()(dataSetLookup[4 * index],dataSetLookup[4 * index + 1],dataSetLookup[4 * index + 2],dataSetLookup[4 * index + 3])) ():\n\t- Usage of \"sha3()\" should be replaced with \"keccak256()\"\n",
        "markdown": "Deprecated standard detected [uint256(sha3()(dataSetLookup[4 * index],dataSetLookup[4 * index + 1],dataSetLookup[4 * index + 2],dataSetLookup[4 * index + 3]))]():\n\t- Usage of \"sha3()\" should be replaced with \"keccak256()\"\n",
        "first_markdown_element": "",
        "id": "242bd1135dca015e764428ac398c46dea9299d504b34ab6f1704d8ccbf8baa7c",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "leaf = uint256(sha3()(left,right)) & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
            "source_mapping": {
              "start": 10157,
              "length": 66,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "computeCacheRoot",
                "source_mapping": {
                  "start": 8540,
                  "length": 3601,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Ethash",
                    "source_mapping": {
                      "start": 8147,
                      "length": 14708,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "computeCacheRoot(uint256,uint256,uint256[],uint256[],uint256)"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected leaf = uint256(sha3()(left,right)) & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ():\n\t- Usage of \"sha3()\" should be replaced with \"keccak256()\"\n",
        "markdown": "Deprecated standard detected [leaf = uint256(sha3()(left,right)) & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF]():\n\t- Usage of \"sha3()\" should be replaced with \"keccak256()\"\n",
        "first_markdown_element": "",
        "id": "3397e59f2d8a368b5f03176e8cc4f4090eca1217f5d609d2598bb731e25b10d2",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "uint256(block.blockhash(lastBlockNumber + 10))",
            "source_mapping": {
              "start": 45616,
              "length": 50,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "getClaimSeed",
                "source_mapping": {
                  "start": 45098,
                  "length": 575,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "WeightedSubmission",
                    "source_mapping": {
                      "start": 41287,
                      "length": 10389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "getClaimSeed(address)"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected uint256(block.blockhash(lastBlockNumber + 10)) ():\n\t- Usage of \"block.blockhash()\" should be replaced with \"blockhash()\"\n",
        "markdown": "Deprecated standard detected [uint256(block.blockhash(lastBlockNumber + 10))]():\n\t- Usage of \"block.blockhash()\" should be replaced with \"blockhash()\"\n",
        "first_markdown_element": "",
        "id": "6c9a4e97de668f83b0ad4c93ab6332f76a3f7f46cf8b7b22551f945b268e7d4d",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "uint256(sha3()(toBE(s0),toBE(s1),toBE(c)))",
            "source_mapping": {
              "start": 13119,
              "length": 46,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "computeSha3",
                "source_mapping": {
                  "start": 12425,
                  "length": 747,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Ethash",
                    "source_mapping": {
                      "start": 8147,
                      "length": 14708,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "computeSha3(uint256[16],uint256[8])"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected uint256(sha3()(toBE(s0),toBE(s1),toBE(c))) ():\n\t- Usage of \"sha3()\" should be replaced with \"keccak256()\"\n",
        "markdown": "Deprecated standard detected [uint256(sha3()(toBE(s0),toBE(s1),toBE(c)))]():\n\t- Usage of \"sha3()\" should be replaced with \"keccak256()\"\n",
        "first_markdown_element": "",
        "id": "7d421857a9fe800c4331d596f03163aa867d077aeb7c2b835bdb9048286f8125",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "leafHash = uint256(sha3()(rlpHeader))",
            "source_mapping": {
              "start": 62771,
              "length": 37,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected leafHash = uint256(sha3()(rlpHeader)) ():\n\t- Usage of \"sha3()\" should be replaced with \"keccak256()\"\n",
        "markdown": "Deprecated standard detected [leafHash = uint256(sha3()(rlpHeader))]():\n\t- Usage of \"sha3()\" should be replaced with \"keccak256()\"\n",
        "first_markdown_element": "",
        "id": "a71e63ebb9a2b5646ec9453649f4fb1a65162b901c413158fb7c6689da21630b",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 6990,
              "length": 5,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "sponge",
                "source_mapping": {
                  "start": 6890,
                  "length": 1170,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SHA3_512",
                    "source_mapping": {
                      "start": 98,
                      "length": 7965,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "sponge(uint256[9])"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected THROW ():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "markdown": "Deprecated standard detected [THROW]():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "first_markdown_element": "",
        "id": "f5556cf1c70b64b9e4b1fc32044dd970b5f2c8b9fc21b7971fda01971033f2d5",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "pragma",
            "name": "^0.4.8",
            "source_mapping": {
              "start": 0,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "directive": [
                "solidity",
                "^",
                "0.4",
                ".8"
              ]
            }
          }
        ],
        "description": "Pragma version^0.4.8 () allows old versions\n",
        "markdown": "Pragma version[^0.4.8]() allows old versions\n",
        "first_markdown_element": "",
        "id": "dd43bca9b08bc1fa7b94a3e619671f3c2c98a72b8b3bf0caf1e1f86665ec4569",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [],
        "description": "solc-0.4.8 is not recommended for deployment\n",
        "markdown": "solc-0.4.8 is not recommended for deployment\n",
        "first_markdown_element": "",
        "id": "ebbd8e423b3c73a93e118f8daed7c9ac33b0d525351f79b5ea41076caa3c1bc5",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "LIST_LONG_START",
            "source_mapping": {
              "start": 23139,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable RLP.LIST_LONG_START () is not in mixedCase\n",
        "markdown": "Variable [RLP.LIST_LONG_START]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "0ac27b70c0b95eb951bd8f628ffaf2756fd22fb0dda8a0628aa8fc77c1a22cdc",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "DATA_SHORT_START",
            "source_mapping": {
              "start": 23020,
              "length": 37,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable RLP.DATA_SHORT_START () is not in mixedCase\n",
        "markdown": "Variable [RLP.DATA_SHORT_START]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "2b358201be9549ab08211418559ff5d6ec71ebee1867484013efbe34990a09fe",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "DATA_LONG_OFFSET",
            "source_mapping": {
              "start": 23179,
              "length": 37,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable RLP.DATA_LONG_OFFSET () is not in mixedCase\n",
        "markdown": "Variable [RLP.DATA_LONG_OFFSET]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "50e364844790420a18bbc3fddb4ba64941507b50d2158038ee0a2467c44e1daf",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_uncleRate",
            "source_mapping": {
              "start": 66127,
              "length": 15,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setUnlceRateAndFees",
                "source_mapping": {
                  "start": 66097,
                  "length": 375,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setUnlceRateAndFees(uint256,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter SmartPool.setUnlceRateAndFees(uint256,uint256)._uncleRate () is not in mixedCase\n",
        "markdown": "Parameter [SmartPool.setUnlceRateAndFees(uint256,uint256)._uncleRate]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "6b2a1be268c9b774af126944a1a7221e15b4079d2ddf2720ac89d062818fb7da",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "LIST_LONG_OFFSET",
            "source_mapping": {
              "start": 23219,
              "length": 37,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable RLP.LIST_LONG_OFFSET () is not in mixedCase\n",
        "markdown": "Variable [RLP.LIST_LONG_OFFSET]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "759dfb34df404699fdfc0a88efd3e7a61f9ce21be223047e05d599227d9afb6e",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "A",
            "source_mapping": {
              "start": 172,
              "length": 10,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "keccak_f",
                "source_mapping": {
                  "start": 154,
                  "length": 6724,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SHA3_512",
                    "source_mapping": {
                      "start": 98,
                      "length": 7965,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "keccak_f(uint256[25])"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter SHA3_512.keccak_f(uint256[25]).A () is not in mixedCase\n",
        "markdown": "Parameter [SHA3_512.keccak_f(uint256[25]).A]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "76ec074ea90df38275ec9db0e0a2cd6802d8ea668f01f6918cefaa7a871127b2",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_poolFees",
            "source_mapping": {
              "start": 66144,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setUnlceRateAndFees",
                "source_mapping": {
                  "start": 66097,
                  "length": 375,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setUnlceRateAndFees(uint256,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter SmartPool.setUnlceRateAndFees(uint256,uint256)._poolFees () is not in mixedCase\n",
        "markdown": "Parameter [SmartPool.setUnlceRateAndFees(uint256,uint256)._poolFees]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "b43c00b9f50c3194200c28ed75e5e0f8eccc878cdc563e11c6b8a08f93b4101f",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "DATA_LONG_START",
            "source_mapping": {
              "start": 23060,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable RLP.DATA_LONG_START () is not in mixedCase\n",
        "markdown": "Variable [RLP.DATA_LONG_START]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "be3519de9e83c4a15128d79dff9ac2650c51c452f0ba745e154e0195c59095cd",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "SHA3_512",
            "source_mapping": {
              "start": 98,
              "length": 7965,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "additional_fields": {
              "target": "contract",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Contract SHA3_512 () is not in CapWords\n",
        "markdown": "Contract [SHA3_512]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "e3c11792d58b57a460479b7e8a0ba6509e7925d0e1ff298231e655aebc8c20aa",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "keccak_f",
            "source_mapping": {
              "start": 154,
              "length": 6724,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SHA3_512",
                "source_mapping": {
                  "start": 98,
                  "length": 7965,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "keccak_f(uint256[25])"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function SHA3_512.keccak_f(uint256[25]) () is not in mixedCase\n",
        "markdown": "Function [SHA3_512.keccak_f(uint256[25])]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "e5c2ce954106c371934c44911b34c8284ca403c3b4f7add5c464921574f84fb6",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "LIST_SHORT_START",
            "source_mapping": {
              "start": 23099,
              "length": 37,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable RLP.LIST_SHORT_START () is not in mixedCase\n",
        "markdown": "Variable [RLP.LIST_SHORT_START]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "ee609885719ef156016a11e1d654dfddc98d1bd929f4099a713675038d7fcd89",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "M",
            "source_mapping": {
              "start": 6906,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "sponge",
                "source_mapping": {
                  "start": 6890,
                  "length": 1170,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SHA3_512",
                    "source_mapping": {
                      "start": 98,
                      "length": 7965,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "sponge(uint256[9])"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter SHA3_512.sponge(uint256[9]).M () is not in mixedCase\n",
        "markdown": "Parameter [SHA3_512.sponge(uint256[9]).M]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "f222207187498134a12e3a18019ce948bed7496e6e0631c5225b51ae1aa1b268",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "withdraw",
            "source_mapping": {
              "start": 53274,
              "length": 332,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "withdraw(uint256)"
            }
          },
          {
            "type": "node",
            "name": "! withdrawalAddress.send(amount)",
            "source_mapping": {
              "start": 53493,
              "length": 34,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "withdraw",
                "source_mapping": {
                  "start": 53274,
                  "length": 332,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "withdraw(uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "Withdraw(msg.sender,0,amount)",
            "source_mapping": {
              "start": 53554,
              "length": 33,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "withdraw",
                "source_mapping": {
                  "start": 53274,
                  "length": 332,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "withdraw(uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          }
        ],
        "description": "Reentrancy in SmartPool.withdraw(uint256) ():\n\tExternal calls:\n\t- ! withdrawalAddress.send(amount) ()\n\tEvent emitted after the call(s):\n\t- Withdraw(msg.sender,0,amount) ()\n",
        "markdown": "Reentrancy in [SmartPool.withdraw(uint256)]():\n\tExternal calls:\n\t- [! withdrawalAddress.send(amount)]()\n\tEvent emitted after the call(s):\n\t- [Withdraw(msg.sender,0,amount)]()\n",
        "first_markdown_element": "",
        "id": "0b15aa1e68c1de57177d2879662b56b4fc4428f4a1e69cef257677a525d5d6d6",
        "check": "reentrancy-unlimited-gas",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifyClaim",
            "source_mapping": {
              "start": 60405,
              "length": 5340,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
            }
          },
          {
            "type": "node",
            "name": "! doPayment(submissionData.totalSubmissionValue,minersData[msg.sender].paymentAddress)",
            "source_mapping": {
              "start": 65314,
              "length": 113,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "! paymentAddress.send(payment)",
            "source_mapping": {
              "start": 67302,
              "length": 32,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "doPayment",
                "source_mapping": {
                  "start": 66574,
                  "length": 873,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "doPayment(uint256,address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "closeSubmission(msg.sender)",
            "source_mapping": {
              "start": 65535,
              "length": 29,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "submissionsMetaData"
            }
          },
          {
            "type": "node",
            "name": "submissionsMetaData[sender] = metaData",
            "source_mapping": {
              "start": 49808,
              "length": 38,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "closeSubmission",
                "source_mapping": {
                  "start": 49313,
                  "length": 540,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "WeightedSubmission",
                    "source_mapping": {
                      "start": 41287,
                      "length": 10389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "closeSubmission(address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "submissionsMetaData"
            }
          },
          {
            "type": "node",
            "name": "VerifyClaim(msg.sender,0,0)",
            "source_mapping": {
              "start": 65649,
              "length": 31,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          }
        ],
        "description": "Reentrancy in SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[]) ():\n\tExternal calls:\n\t- ! doPayment(submissionData.totalSubmissionValue,minersData[msg.sender].paymentAddress) ()\n\t\t- ! paymentAddress.send(payment) ()\n\tState variables written after the call(s):\n\t- closeSubmission(msg.sender) ()\n\t\t- submissionsMetaData[sender] = metaData ()\n\tEvent emitted after the call(s):\n\t- VerifyClaim(msg.sender,0,0) ()\n",
        "markdown": "Reentrancy in [SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])]():\n\tExternal calls:\n\t- [! doPayment(submissionData.totalSubmissionValue,minersData[msg.sender].paymentAddress)]()\n\t\t- [! paymentAddress.send(payment)]()\n\tState variables written after the call(s):\n\t- [closeSubmission(msg.sender)]()\n\t\t- [submissionsMetaData[sender] = metaData]()\n\tEvent emitted after the call(s):\n\t- [VerifyClaim(msg.sender,0,0)]()\n",
        "first_markdown_element": "",
        "id": "3eddd71bbfdc992556615c9a856ac06c3dd119d3e994d5be4d05dea469747699",
        "check": "reentrancy-unlimited-gas",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "doPayment",
            "source_mapping": {
              "start": 66574,
              "length": 873,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "doPayment(uint256,address)"
            }
          },
          {
            "type": "node",
            "name": "! paymentAddress.send(payment)",
            "source_mapping": {
              "start": 67302,
              "length": 32,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "doPayment",
                "source_mapping": {
                  "start": 66574,
                  "length": 873,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "doPayment(uint256,address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "DoPayment(msg.sender,paymentAddress,payment)",
            "source_mapping": {
              "start": 67361,
              "length": 48,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "doPayment",
                "source_mapping": {
                  "start": 66574,
                  "length": 873,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "doPayment(uint256,address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          }
        ],
        "description": "Reentrancy in SmartPool.doPayment(uint256,address) ():\n\tExternal calls:\n\t- ! paymentAddress.send(payment) ()\n\tEvent emitted after the call(s):\n\t- DoPayment(msg.sender,paymentAddress,payment) ()\n",
        "markdown": "Reentrancy in [SmartPool.doPayment(uint256,address)]():\n\tExternal calls:\n\t- [! paymentAddress.send(payment)]()\n\tEvent emitted after the call(s):\n\t- [DoPayment(msg.sender,paymentAddress,payment)]()\n",
        "first_markdown_element": "",
        "id": "c9a2f7e96201dbf7032207fac6c464fa233f57099055633548b5300dc866fea3",
        "check": "reentrancy-unlimited-gas",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "submitClaim",
            "source_mapping": {
              "start": 42173,
              "length": 2919,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "WeightedSubmission",
                "source_mapping": {
                  "start": 41287,
                  "length": 10389,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "submitClaim(uint256,uint256,uint256,uint256,uint256,bool)"
            }
          },
          {
            "type": "node",
            "name": "SubmitClaim(msg.sender,0x81000001,metaData.lastCounter)",
            "source_mapping": {
              "start": 42495,
              "length": 59,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "submitClaim",
                "source_mapping": {
                  "start": 42173,
                  "length": 2919,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "WeightedSubmission",
                    "source_mapping": {
                      "start": 41287,
                      "length": 10389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "submitClaim(uint256,uint256,uint256,uint256,uint256,bool)"
                }
              }
            }
          }
        ],
        "description": "WeightedSubmission.submitClaim(uint256,uint256,uint256,uint256,uint256,bool) () uses literals with too many digits:\n\t- SubmitClaim(msg.sender,0x81000001,metaData.lastCounter) ()\n",
        "markdown": "[WeightedSubmission.submitClaim(uint256,uint256,uint256,uint256,uint256,bool)]() uses literals with too many digits:\n\t- [SubmitClaim(msg.sender,0x81000001,metaData.lastCounter)]()\n",
        "first_markdown_element": "",
        "id": "00da34771bef49bb786c2b8700f0aa4c9a0cf22739030c4927d5e2e87021e696",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifyAgt",
            "source_mapping": {
              "start": 36890,
              "length": 3573,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Agt",
                "source_mapping": {
                  "start": 35476,
                  "length": 5809,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[])"
            }
          },
          {
            "type": "node",
            "name": "VerifyAgt(0x80000009,i)",
            "source_mapping": {
              "start": 39594,
              "length": 26,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyAgt",
                "source_mapping": {
                  "start": 36890,
                  "length": 3573,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Agt",
                    "source_mapping": {
                      "start": 35476,
                      "length": 5809,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[])"
                }
              }
            }
          }
        ],
        "description": "Agt.verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[]) () uses literals with too many digits:\n\t- VerifyAgt(0x80000009,i) ()\n",
        "markdown": "[Agt.verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[])]() uses literals with too many digits:\n\t- [VerifyAgt(0x80000009,i)]()\n",
        "first_markdown_element": "",
        "id": "0dd0b589949b4500b373e4623a4718e109f4a80a0c209a1fc27003e669fa49f0",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifyAgt",
            "source_mapping": {
              "start": 36890,
              "length": 3573,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Agt",
                "source_mapping": {
                  "start": 35476,
                  "length": 5809,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[])"
            }
          },
          {
            "type": "node",
            "name": "VerifyAgt(0x80000004,max)",
            "source_mapping": {
              "start": 40123,
              "length": 28,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyAgt",
                "source_mapping": {
                  "start": 36890,
                  "length": 3573,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Agt",
                    "source_mapping": {
                      "start": 35476,
                      "length": 5809,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[])"
                }
              }
            }
          }
        ],
        "description": "Agt.verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[]) () uses literals with too many digits:\n\t- VerifyAgt(0x80000004,max) ()\n",
        "markdown": "[Agt.verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[])]() uses literals with too many digits:\n\t- [VerifyAgt(0x80000004,max)]()\n",
        "first_markdown_element": "",
        "id": "0f9ce83ae432adba98d0f61a4ffb36aa3b3dfa2e0aaa2a7016e7fbca8dd8a4da",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "sponge",
            "source_mapping": {
              "start": 6890,
              "length": 1170,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SHA3_512",
                "source_mapping": {
                  "start": 98,
                  "length": 7965,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "sponge(uint256[9])"
            }
          },
          {
            "type": "node",
            "name": "M[8] = 0x8000000000000000",
            "source_mapping": {
              "start": 7026,
              "length": 25,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "sponge",
                "source_mapping": {
                  "start": 6890,
                  "length": 1170,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SHA3_512",
                    "source_mapping": {
                      "start": 98,
                      "length": 7965,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "sponge(uint256[9])"
                }
              }
            }
          }
        ],
        "description": "SHA3_512.sponge(uint256[9]) () uses literals with too many digits:\n\t- M[8] = 0x8000000000000000 ()\n",
        "markdown": "[SHA3_512.sponge(uint256[9])]() uses literals with too many digits:\n\t- [M[8] = 0x8000000000000000]()\n",
        "first_markdown_element": "",
        "id": "13fd08e925b6e8af7a841740ec8f715195a39770a6956000b83766cf7a02261b",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "submitClaim",
            "source_mapping": {
              "start": 42173,
              "length": 2919,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "WeightedSubmission",
                "source_mapping": {
                  "start": 41287,
                  "length": 10389,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "submitClaim(uint256,uint256,uint256,uint256,uint256,bool)"
            }
          },
          {
            "type": "node",
            "name": "SubmitClaim(msg.sender,0x81000003,metaData.difficulty)",
            "source_mapping": {
              "start": 42996,
              "length": 58,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "submitClaim",
                "source_mapping": {
                  "start": 42173,
                  "length": 2919,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "WeightedSubmission",
                    "source_mapping": {
                      "start": 41287,
                      "length": 10389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "submitClaim(uint256,uint256,uint256,uint256,uint256,bool)"
                }
              }
            }
          }
        ],
        "description": "WeightedSubmission.submitClaim(uint256,uint256,uint256,uint256,uint256,bool) () uses literals with too many digits:\n\t- SubmitClaim(msg.sender,0x81000003,metaData.difficulty) ()\n",
        "markdown": "[WeightedSubmission.submitClaim(uint256,uint256,uint256,uint256,uint256,bool)]() uses literals with too many digits:\n\t- [SubmitClaim(msg.sender,0x81000003,metaData.difficulty)]()\n",
        "first_markdown_element": "",
        "id": "1f8aba1303877f576a316b2921f9f99b0c662091864ef89c9be34991b5402e38",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "storeClaimSeed",
            "source_mapping": {
              "start": 45763,
              "length": 1207,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "WeightedSubmission",
                "source_mapping": {
                  "start": 41287,
                  "length": 10389,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "storeClaimSeed(address)"
            }
          },
          {
            "type": "node",
            "name": "StoreClaimSeed(msg.sender,0x8000003,uint256(miner))",
            "source_mapping": {
              "start": 46901,
              "length": 52,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "storeClaimSeed",
                "source_mapping": {
                  "start": 45763,
                  "length": 1207,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "WeightedSubmission",
                    "source_mapping": {
                      "start": 41287,
                      "length": 10389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "storeClaimSeed(address)"
                }
              }
            }
          }
        ],
        "description": "WeightedSubmission.storeClaimSeed(address) () uses literals with too many digits:\n\t- StoreClaimSeed(msg.sender,0x8000003,uint256(miner)) ()\n",
        "markdown": "[WeightedSubmission.storeClaimSeed(address)]() uses literals with too many digits:\n\t- [StoreClaimSeed(msg.sender,0x8000003,uint256(miner))]()\n",
        "first_markdown_element": "",
        "id": "1fcc3bd7e819b2ac0bd040d3ddd081170462a032327a30e2573e0d77cc8d3f9d",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifyClaim",
            "source_mapping": {
              "start": 60405,
              "length": 5340,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
            }
          },
          {
            "type": "node",
            "name": "VerifyClaim(msg.sender,0x84000003,0)",
            "source_mapping": {
              "start": 61279,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            }
          }
        ],
        "description": "SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[]) () uses literals with too many digits:\n\t- VerifyClaim(msg.sender,0x84000003,0) ()\n",
        "markdown": "[SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])]() uses literals with too many digits:\n\t- [VerifyClaim(msg.sender,0x84000003,0)]()\n",
        "first_markdown_element": "",
        "id": "2459cbaba2840cdcc39e1c066b653872d70bb635c435feb43e41364c7fca3d8b",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifyAgt",
            "source_mapping": {
              "start": 36890,
              "length": 3573,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Agt",
                "source_mapping": {
                  "start": 35476,
                  "length": 5809,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[])"
            }
          },
          {
            "type": "node",
            "name": "VerifyAgt(0x80000003,min)",
            "source_mapping": {
              "start": 39924,
              "length": 28,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyAgt",
                "source_mapping": {
                  "start": 36890,
                  "length": 3573,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Agt",
                    "source_mapping": {
                      "start": 35476,
                      "length": 5809,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[])"
                }
              }
            }
          }
        ],
        "description": "Agt.verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[]) () uses literals with too many digits:\n\t- VerifyAgt(0x80000003,min) ()\n",
        "markdown": "[Agt.verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[])]() uses literals with too many digits:\n\t- [VerifyAgt(0x80000003,min)]()\n",
        "first_markdown_element": "",
        "id": "29ce1137372092333a2313d6dd77ee4a6a7602b524045799152b34a0de85804b",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "register",
            "source_mapping": {
              "start": 54414,
              "length": 1608,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "register(address)"
            }
          },
          {
            "type": "node",
            "name": "Register(msg.sender,0x80000000,uint256(minerId))",
            "source_mapping": {
              "start": 54767,
              "length": 49,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "register",
                "source_mapping": {
                  "start": 54414,
                  "length": 1608,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "register(address)"
                }
              }
            }
          }
        ],
        "description": "SmartPool.register(address) () uses literals with too many digits:\n\t- Register(msg.sender,0x80000000,uint256(minerId)) ()\n",
        "markdown": "[SmartPool.register(address)]() uses literals with too many digits:\n\t- [Register(msg.sender,0x80000000,uint256(minerId))]()\n",
        "first_markdown_element": "",
        "id": "2b55ffcc8cb0898d5a9950fdc94f69d6bce836824938cc20f7b1a02477f70703",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "register",
            "source_mapping": {
              "start": 54414,
              "length": 1608,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "register(address)"
            }
          },
          {
            "type": "node",
            "name": "Register(msg.sender,0x80000003,uint256(minerId))",
            "source_mapping": {
              "start": 55444,
              "length": 49,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "register",
                "source_mapping": {
                  "start": 54414,
                  "length": 1608,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "register(address)"
                }
              }
            }
          }
        ],
        "description": "SmartPool.register(address) () uses literals with too many digits:\n\t- Register(msg.sender,0x80000003,uint256(minerId)) ()\n",
        "markdown": "[SmartPool.register(address)]() uses literals with too many digits:\n\t- [Register(msg.sender,0x80000003,uint256(minerId))]()\n",
        "first_markdown_element": "",
        "id": "2eabeef91510524c2327770106751bf078c5bc37d50802613764cd05a43913cf",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "submitClaim",
            "source_mapping": {
              "start": 42173,
              "length": 2919,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "WeightedSubmission",
                "source_mapping": {
                  "start": 41287,
                  "length": 10389,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "submitClaim(uint256,uint256,uint256,uint256,uint256,bool)"
            }
          },
          {
            "type": "node",
            "name": "blockDifficulty = (900000000 * (metaData.numPendingSubmissions + 1))",
            "source_mapping": {
              "start": 43373,
              "length": 66,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "submitClaim",
                "source_mapping": {
                  "start": 42173,
                  "length": 2919,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "WeightedSubmission",
                    "source_mapping": {
                      "start": 41287,
                      "length": 10389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "submitClaim(uint256,uint256,uint256,uint256,uint256,bool)"
                }
              }
            }
          }
        ],
        "description": "WeightedSubmission.submitClaim(uint256,uint256,uint256,uint256,uint256,bool) () uses literals with too many digits:\n\t- blockDifficulty = (900000000 * (metaData.numPendingSubmissions + 1)) ()\n",
        "markdown": "[WeightedSubmission.submitClaim(uint256,uint256,uint256,uint256,uint256,bool)]() uses literals with too many digits:\n\t- [blockDifficulty = (900000000 * (metaData.numPendingSubmissions + 1))]()\n",
        "first_markdown_element": "",
        "id": "305fcb6ef92355309e821e1d2dc4ad63732bd460e0a2c4f5b96bb4c04525936a",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifyClaim",
            "source_mapping": {
              "start": 60405,
              "length": 5340,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
            }
          },
          {
            "type": "node",
            "name": "VerifyClaim(msg.sender,0x8400000c,0)",
            "source_mapping": {
              "start": 60875,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            }
          }
        ],
        "description": "SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[]) () uses literals with too many digits:\n\t- VerifyClaim(msg.sender,0x8400000c,0) ()\n",
        "markdown": "[SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])]() uses literals with too many digits:\n\t- [VerifyClaim(msg.sender,0x8400000c,0)]()\n",
        "first_markdown_element": "",
        "id": "361279c6716cbf2177f1b6b93c76802c483eee4b8bf742b3884c6d47e78b6e71",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifyClaim",
            "source_mapping": {
              "start": 60405,
              "length": 5340,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
            }
          },
          {
            "type": "node",
            "name": "VerifyClaim(msg.sender,0x84000005,uint256(header.coinbase))",
            "source_mapping": {
              "start": 62051,
              "length": 60,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            }
          }
        ],
        "description": "SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[]) () uses literals with too many digits:\n\t- VerifyClaim(msg.sender,0x84000005,uint256(header.coinbase)) ()\n",
        "markdown": "[SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])]() uses literals with too many digits:\n\t- [VerifyClaim(msg.sender,0x84000005,uint256(header.coinbase))]()\n",
        "first_markdown_element": "",
        "id": "366b4c870c83e9ddd52ed36e518227098af9f2926cc07c0075edb0a4474b697f",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "storeClaimSeed",
            "source_mapping": {
              "start": 45763,
              "length": 1207,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "WeightedSubmission",
                "source_mapping": {
                  "start": 41287,
                  "length": 10389,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "storeClaimSeed(address)"
            }
          },
          {
            "type": "node",
            "name": "StoreClaimSeed(msg.sender,0x8000001,uint256(miner))",
            "source_mapping": {
              "start": 46594,
              "length": 52,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "storeClaimSeed",
                "source_mapping": {
                  "start": 45763,
                  "length": 1207,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "WeightedSubmission",
                    "source_mapping": {
                      "start": 41287,
                      "length": 10389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "storeClaimSeed(address)"
                }
              }
            }
          }
        ],
        "description": "WeightedSubmission.storeClaimSeed(address) () uses literals with too many digits:\n\t- StoreClaimSeed(msg.sender,0x8000001,uint256(miner)) ()\n",
        "markdown": "[WeightedSubmission.storeClaimSeed(address)]() uses literals with too many digits:\n\t- [StoreClaimSeed(msg.sender,0x8000001,uint256(miner))]()\n",
        "first_markdown_element": "",
        "id": "3a48f20047ac164c46fdc9bac45b4a0f76f2230d673bf457b08b2c838fb12797",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifyClaim",
            "source_mapping": {
              "start": 60405,
              "length": 5340,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
            }
          },
          {
            "type": "node",
            "name": "VerifyClaim(msg.sender,0x84000002,0)",
            "source_mapping": {
              "start": 65119,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            }
          }
        ],
        "description": "SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[]) () uses literals with too many digits:\n\t- VerifyClaim(msg.sender,0x84000002,0) ()\n",
        "markdown": "[SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])]() uses literals with too many digits:\n\t- [VerifyClaim(msg.sender,0x84000002,0)]()\n",
        "first_markdown_element": "",
        "id": "3dc06a301fe240637ba99ba6a7eb79cdc35df9fb99945a0b5d9d7bf8e9c5515e",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "withdraw",
            "source_mapping": {
              "start": 53274,
              "length": 332,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "withdraw(uint256)"
            }
          },
          {
            "type": "node",
            "name": "Withdraw(msg.sender,0x80000000,amount)",
            "source_mapping": {
              "start": 53398,
              "length": 42,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "withdraw",
                "source_mapping": {
                  "start": 53274,
                  "length": 332,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "withdraw(uint256)"
                }
              }
            }
          }
        ],
        "description": "SmartPool.withdraw(uint256) () uses literals with too many digits:\n\t- Withdraw(msg.sender,0x80000000,amount) ()\n",
        "markdown": "[SmartPool.withdraw(uint256)]() uses literals with too many digits:\n\t- [Withdraw(msg.sender,0x80000000,amount)]()\n",
        "first_markdown_element": "",
        "id": "470f260f26bc4889c6eeb10e32e1d5c46ab5536784af0a53a787c1c11f58822f",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifyClaim",
            "source_mapping": {
              "start": 60405,
              "length": 5340,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
            }
          },
          {
            "type": "node",
            "name": "VerifyClaim(msg.sender,0x8400000a,header.blockNumber / 30000)",
            "source_mapping": {
              "start": 64418,
              "length": 65,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            }
          }
        ],
        "description": "SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[]) () uses literals with too many digits:\n\t- VerifyClaim(msg.sender,0x8400000a,header.blockNumber / 30000) ()\n",
        "markdown": "[SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])]() uses literals with too many digits:\n\t- [VerifyClaim(msg.sender,0x8400000a,header.blockNumber / 30000)]()\n",
        "first_markdown_element": "",
        "id": "584b29d6ffb4fb26a324e363fbe9aeb2e693c23093e8f2e946273067e74b5a21",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifyExtraData",
            "source_mapping": {
              "start": 59339,
              "length": 961,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifyExtraData(bytes32,bytes32,uint256)"
            }
          },
          {
            "type": "node",
            "name": "VerifyExtraData(msg.sender,0x83000000,uint256(minerId))",
            "source_mapping": {
              "start": 59676,
              "length": 56,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyExtraData",
                "source_mapping": {
                  "start": 59339,
                  "length": 961,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyExtraData(bytes32,bytes32,uint256)"
                }
              }
            }
          }
        ],
        "description": "SmartPool.verifyExtraData(bytes32,bytes32,uint256) () uses literals with too many digits:\n\t- VerifyExtraData(msg.sender,0x83000000,uint256(minerId)) ()\n",
        "markdown": "[SmartPool.verifyExtraData(bytes32,bytes32,uint256)]() uses literals with too many digits:\n\t- [VerifyExtraData(msg.sender,0x83000000,uint256(minerId))]()\n",
        "first_markdown_element": "",
        "id": "6087274050c056a1e7aaed6e3f53ffaa837cc77160447786fbb03d763758623b",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "doPayment",
            "source_mapping": {
              "start": 66574,
              "length": 873,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "doPayment(uint256,address)"
            }
          },
          {
            "type": "node",
            "name": "VerifyClaim(msg.sender,0x84000000,payment)",
            "source_mapping": {
              "start": 67181,
              "length": 46,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "doPayment",
                "source_mapping": {
                  "start": 66574,
                  "length": 873,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "doPayment(uint256,address)"
                }
              }
            }
          }
        ],
        "description": "SmartPool.doPayment(uint256,address) () uses literals with too many digits:\n\t- VerifyClaim(msg.sender,0x84000000,payment) ()\n",
        "markdown": "[SmartPool.doPayment(uint256,address)]() uses literals with too many digits:\n\t- [VerifyClaim(msg.sender,0x84000000,payment)]()\n",
        "first_markdown_element": "",
        "id": "640410b253e36765be896cce37194f04cdb111f204525650903881bceac56178",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifyAgt",
            "source_mapping": {
              "start": 36890,
              "length": 3573,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Agt",
                "source_mapping": {
                  "start": 35476,
                  "length": 5809,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[])"
            }
          },
          {
            "type": "node",
            "name": "VerifyAgt(0x80000000,i)",
            "source_mapping": {
              "start": 38941,
              "length": 26,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyAgt",
                "source_mapping": {
                  "start": 36890,
                  "length": 3573,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Agt",
                    "source_mapping": {
                      "start": 35476,
                      "length": 5809,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[])"
                }
              }
            }
          }
        ],
        "description": "Agt.verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[]) () uses literals with too many digits:\n\t- VerifyAgt(0x80000000,i) ()\n",
        "markdown": "[Agt.verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[])]() uses literals with too many digits:\n\t- [VerifyAgt(0x80000000,i)]()\n",
        "first_markdown_element": "",
        "id": "6d4a5b16e928ef7bbdd6a1b09ab921e8382c41ee2caf97aa301cf4397ffd3142",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "storeClaimSeed",
            "source_mapping": {
              "start": 45763,
              "length": 1207,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "WeightedSubmission",
                "source_mapping": {
                  "start": 41287,
                  "length": 10389,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "storeClaimSeed(address)"
            }
          },
          {
            "type": "node",
            "name": "StoreClaimSeed(msg.sender,0x8000000,uint256(miner))",
            "source_mapping": {
              "start": 46404,
              "length": 52,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "storeClaimSeed",
                "source_mapping": {
                  "start": 45763,
                  "length": 1207,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "WeightedSubmission",
                    "source_mapping": {
                      "start": 41287,
                      "length": 10389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "storeClaimSeed(address)"
                }
              }
            }
          }
        ],
        "description": "WeightedSubmission.storeClaimSeed(address) () uses literals with too many digits:\n\t- StoreClaimSeed(msg.sender,0x8000000,uint256(miner)) ()\n",
        "markdown": "[WeightedSubmission.storeClaimSeed(address)]() uses literals with too many digits:\n\t- [StoreClaimSeed(msg.sender,0x8000000,uint256(miner))]()\n",
        "first_markdown_element": "",
        "id": "745cb48a4b01d14ccc3cc27d47506cafed04f4ea6d8ba48edf363ebb4c3325c2",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifyClaim",
            "source_mapping": {
              "start": 60405,
              "length": 5340,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
            }
          },
          {
            "type": "node",
            "name": "VerifyClaim(msg.sender,0x84000004,uint256(header.extraData))",
            "source_mapping": {
              "start": 61740,
              "length": 61,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            }
          }
        ],
        "description": "SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[]) () uses literals with too many digits:\n\t- VerifyClaim(msg.sender,0x84000004,uint256(header.extraData)) ()\n",
        "markdown": "[SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])]() uses literals with too many digits:\n\t- [VerifyClaim(msg.sender,0x84000004,uint256(header.extraData))]()\n",
        "first_markdown_element": "",
        "id": "79b388509a3cd2b4d5715a7283bdcea4d94a6d2cf546e1fed9ee3268e6d5aa8e",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "storeClaimSeed",
            "source_mapping": {
              "start": 45763,
              "length": 1207,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "WeightedSubmission",
                "source_mapping": {
                  "start": 41287,
                  "length": 10389,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "storeClaimSeed(address)"
            }
          },
          {
            "type": "node",
            "name": "StoreClaimSeed(msg.sender,0x8000002,uint256(miner))",
            "source_mapping": {
              "start": 46781,
              "length": 52,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "storeClaimSeed",
                "source_mapping": {
                  "start": 45763,
                  "length": 1207,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "WeightedSubmission",
                    "source_mapping": {
                      "start": 41287,
                      "length": 10389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "storeClaimSeed(address)"
                }
              }
            }
          }
        ],
        "description": "WeightedSubmission.storeClaimSeed(address) () uses literals with too many digits:\n\t- StoreClaimSeed(msg.sender,0x8000002,uint256(miner)) ()\n",
        "markdown": "[WeightedSubmission.storeClaimSeed(address)]() uses literals with too many digits:\n\t- [StoreClaimSeed(msg.sender,0x8000002,uint256(miner))]()\n",
        "first_markdown_element": "",
        "id": "7d831bad58c105866185895f32e93ac7ee9128eda25defd31be63a48d224b366",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifyClaim",
            "source_mapping": {
              "start": 60405,
              "length": 5340,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
            }
          },
          {
            "type": "node",
            "name": "VerifyClaim(msg.sender,0x84000009,0)",
            "source_mapping": {
              "start": 63308,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            }
          }
        ],
        "description": "SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[]) () uses literals with too many digits:\n\t- VerifyClaim(msg.sender,0x84000009,0) ()\n",
        "markdown": "[SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])]() uses literals with too many digits:\n\t- [VerifyClaim(msg.sender,0x84000009,0)]()\n",
        "first_markdown_element": "",
        "id": "7e21f686cfeb27448e6ff35a87dd695105ae8fcb1fc1c8e4228da91aa2b48e0a",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifyAgt",
            "source_mapping": {
              "start": 36890,
              "length": 3573,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Agt",
                "source_mapping": {
                  "start": 35476,
                  "length": 5809,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[])"
            }
          },
          {
            "type": "node",
            "name": "VerifyAgt(0x80000001,i)",
            "source_mapping": {
              "start": 39154,
              "length": 26,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyAgt",
                "source_mapping": {
                  "start": 36890,
                  "length": 3573,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Agt",
                    "source_mapping": {
                      "start": 35476,
                      "length": 5809,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[])"
                }
              }
            }
          }
        ],
        "description": "Agt.verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[]) () uses literals with too many digits:\n\t- VerifyAgt(0x80000001,i) ()\n",
        "markdown": "[Agt.verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[])]() uses literals with too many digits:\n\t- [VerifyAgt(0x80000001,i)]()\n",
        "first_markdown_element": "",
        "id": "7fa63b908e5e085374376a5cbe6f71af44590a761f79ac1f48becfb0e6cbf35b",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "register",
            "source_mapping": {
              "start": 54414,
              "length": 1608,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "register(address)"
            }
          },
          {
            "type": "node",
            "name": "Register(msg.sender,0x80000001,uint256(paymentAddress))",
            "source_mapping": {
              "start": 54951,
              "length": 56,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "register",
                "source_mapping": {
                  "start": 54414,
                  "length": 1608,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "register(address)"
                }
              }
            }
          }
        ],
        "description": "SmartPool.register(address) () uses literals with too many digits:\n\t- Register(msg.sender,0x80000001,uint256(paymentAddress)) ()\n",
        "markdown": "[SmartPool.register(address)]() uses literals with too many digits:\n\t- [Register(msg.sender,0x80000001,uint256(paymentAddress))]()\n",
        "first_markdown_element": "",
        "id": "84a0063f23ca30bd5d4d404da457086f0f5453bb5c8f9528df85fa9c26749763",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "disableWhiteListForever",
            "source_mapping": {
              "start": 58908,
              "length": 336,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "disableWhiteListForever()"
            }
          },
          {
            "type": "node",
            "name": "DisableWhiteListForever(msg.sender,0x80000000,0)",
            "source_mapping": {
              "start": 59038,
              "length": 52,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "disableWhiteListForever",
                "source_mapping": {
                  "start": 58908,
                  "length": 336,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "disableWhiteListForever()"
                }
              }
            }
          }
        ],
        "description": "SmartPool.disableWhiteListForever() () uses literals with too many digits:\n\t- DisableWhiteListForever(msg.sender,0x80000000,0) ()\n",
        "markdown": "[SmartPool.disableWhiteListForever()]() uses literals with too many digits:\n\t- [DisableWhiteListForever(msg.sender,0x80000000,0)]()\n",
        "first_markdown_element": "",
        "id": "8890aac466972cf1228baf30feea415b017c8c34f252852076d17b1cb17c6eac",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifyAgt",
            "source_mapping": {
              "start": 36890,
              "length": 3573,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Agt",
                "source_mapping": {
                  "start": 35476,
                  "length": 5809,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[])"
            }
          },
          {
            "type": "node",
            "name": "VerifyAgt(0x80000005,currentHash)",
            "source_mapping": {
              "start": 40354,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyAgt",
                "source_mapping": {
                  "start": 36890,
                  "length": 3573,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Agt",
                    "source_mapping": {
                      "start": 35476,
                      "length": 5809,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[])"
                }
              }
            }
          }
        ],
        "description": "Agt.verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[]) () uses literals with too many digits:\n\t- VerifyAgt(0x80000005,currentHash) ()\n",
        "markdown": "[Agt.verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[])]() uses literals with too many digits:\n\t- [VerifyAgt(0x80000005,currentHash)]()\n",
        "first_markdown_element": "",
        "id": "92d74c470700e41dc09e6c972433994b9aef4b7d7a8150eaa2db2ce295d585fb",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "register",
            "source_mapping": {
              "start": 54414,
              "length": 1608,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "register(address)"
            }
          },
          {
            "type": "node",
            "name": "Register(msg.sender,0x80000002,uint256(minerId))",
            "source_mapping": {
              "start": 55187,
              "length": 49,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "register",
                "source_mapping": {
                  "start": 54414,
                  "length": 1608,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "register(address)"
                }
              }
            }
          }
        ],
        "description": "SmartPool.register(address) () uses literals with too many digits:\n\t- Register(msg.sender,0x80000002,uint256(minerId)) ()\n",
        "markdown": "[SmartPool.register(address)]() uses literals with too many digits:\n\t- [Register(msg.sender,0x80000002,uint256(minerId))]()\n",
        "first_markdown_element": "",
        "id": "ab87da5361f3f249a5dcc4f1d82fa79a3dc96c8fef82cf76ca8b4284d8852796",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "sponge",
            "source_mapping": {
              "start": 6890,
              "length": 1170,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SHA3_512",
                "source_mapping": {
                  "start": 98,
                  "length": 7965,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "sponge(uint256[9])"
            }
          },
          {
            "type": "node",
            "name": "result[b + 1] = S[5 * x + y] / 0x100000000",
            "source_mapping": {
              "start": 7891,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "sponge",
                "source_mapping": {
                  "start": 6890,
                  "length": 1170,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SHA3_512",
                    "source_mapping": {
                      "start": 98,
                      "length": 7965,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "sponge(uint256[9])"
                }
              }
            }
          }
        ],
        "description": "SHA3_512.sponge(uint256[9]) () uses literals with too many digits:\n\t- result[b + 1] = S[5 * x + y] / 0x100000000 ()\n",
        "markdown": "[SHA3_512.sponge(uint256[9])]() uses literals with too many digits:\n\t- [result[b + 1] = S[5 * x + y] / 0x100000000]()\n",
        "first_markdown_element": "",
        "id": "af80167c5cf22e8854ecba51d7cf6b8d14b1bdafd07f949cf621940fdf702b5a",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifyClaim",
            "source_mapping": {
              "start": 60405,
              "length": 5340,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
            }
          },
          {
            "type": "node",
            "name": "VerifyClaim(msg.sender,0x84000001,0)",
            "source_mapping": {
              "start": 64865,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            }
          }
        ],
        "description": "SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[]) () uses literals with too many digits:\n\t- VerifyClaim(msg.sender,0x84000001,0) ()\n",
        "markdown": "[SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])]() uses literals with too many digits:\n\t- [VerifyClaim(msg.sender,0x84000001,0)]()\n",
        "first_markdown_element": "",
        "id": "afb3beb8667a7bd73057a3c0a5c6a597cf00f3c9867f5124ccaa2a22d21aa84b",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "updateBlackList",
            "source_mapping": {
              "start": 57741,
              "length": 637,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "updateBlackList(address,bool)"
            }
          },
          {
            "type": "node",
            "name": "UpdateBlackList(msg.sender,0x80000000,0,add)",
            "source_mapping": {
              "start": 57888,
              "length": 49,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "updateBlackList",
                "source_mapping": {
                  "start": 57741,
                  "length": 637,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "updateBlackList(address,bool)"
                }
              }
            }
          }
        ],
        "description": "SmartPool.updateBlackList(address,bool) () uses literals with too many digits:\n\t- UpdateBlackList(msg.sender,0x80000000,0,add) ()\n",
        "markdown": "[SmartPool.updateBlackList(address,bool)]() uses literals with too many digits:\n\t- [UpdateBlackList(msg.sender,0x80000000,0,add)]()\n",
        "first_markdown_element": "",
        "id": "b4aa8b2a303096412aedd2f51d927e3b746a26a13292616e6c11ef35a73347b4",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "submitClaim",
            "source_mapping": {
              "start": 42173,
              "length": 2919,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "WeightedSubmission",
                "source_mapping": {
                  "start": 41287,
                  "length": 10389,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "submitClaim(uint256,uint256,uint256,uint256,uint256,bool)"
            }
          },
          {
            "type": "node",
            "name": "SubmitClaim(msg.sender,0x81000005,0)",
            "source_mapping": {
              "start": 44805,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "submitClaim",
                "source_mapping": {
                  "start": 42173,
                  "length": 2919,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "WeightedSubmission",
                    "source_mapping": {
                      "start": 41287,
                      "length": 10389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "submitClaim(uint256,uint256,uint256,uint256,uint256,bool)"
                }
              }
            }
          }
        ],
        "description": "WeightedSubmission.submitClaim(uint256,uint256,uint256,uint256,uint256,bool) () uses literals with too many digits:\n\t- SubmitClaim(msg.sender,0x81000005,0) ()\n",
        "markdown": "[WeightedSubmission.submitClaim(uint256,uint256,uint256,uint256,uint256,bool)]() uses literals with too many digits:\n\t- [SubmitClaim(msg.sender,0x81000005,0)]()\n",
        "first_markdown_element": "",
        "id": "b4f4e5e5fd5fbc4cb9a22cbc0501ec1c4414b6f74f67f4a32b19e7f2b7c78931",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "setEpochData",
            "source_mapping": {
              "start": 15136,
              "length": 1130,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Ethash",
                "source_mapping": {
                  "start": 8147,
                  "length": 14708,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "setEpochData(uint256,uint256,uint256,uint256[],uint256,uint256)"
            }
          },
          {
            "type": "node",
            "name": "SetEpochData(msg.sender,0x82000000,uint256(msg.sender))",
            "source_mapping": {
              "start": 15538,
              "length": 56,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setEpochData",
                "source_mapping": {
                  "start": 15136,
                  "length": 1130,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Ethash",
                    "source_mapping": {
                      "start": 8147,
                      "length": 14708,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setEpochData(uint256,uint256,uint256,uint256[],uint256,uint256)"
                }
              }
            }
          }
        ],
        "description": "Ethash.setEpochData(uint256,uint256,uint256,uint256[],uint256,uint256) () uses literals with too many digits:\n\t- SetEpochData(msg.sender,0x82000000,uint256(msg.sender)) ()\n",
        "markdown": "[Ethash.setEpochData(uint256,uint256,uint256,uint256[],uint256,uint256)]() uses literals with too many digits:\n\t- [SetEpochData(msg.sender,0x82000000,uint256(msg.sender))]()\n",
        "first_markdown_element": "",
        "id": "b6773e640a18d73d5e9df6cf2fccd5f43e1c0b3396e18627352e4d2c21d0f81c",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifyClaim",
            "source_mapping": {
              "start": 60405,
              "length": 5340,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
            }
          },
          {
            "type": "node",
            "name": "VerifyClaim(msg.sender,0x84000008,counter)",
            "source_mapping": {
              "start": 62617,
              "length": 46,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            }
          }
        ],
        "description": "SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[]) () uses literals with too many digits:\n\t- VerifyClaim(msg.sender,0x84000008,counter) ()\n",
        "markdown": "[SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])]() uses literals with too many digits:\n\t- [VerifyClaim(msg.sender,0x84000008,counter)]()\n",
        "first_markdown_element": "",
        "id": "bb566d6ae9f0771a55ddee2dfd59a662639b24923641ac272f184a65e60b5986",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "setEpochData",
            "source_mapping": {
              "start": 15136,
              "length": 1130,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Ethash",
                "source_mapping": {
                  "start": 8147,
                  "length": 14708,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "setEpochData(uint256,uint256,uint256,uint256[],uint256,uint256)"
            }
          },
          {
            "type": "node",
            "name": "SetEpochData(msg.sender,0x82000001,epoch * (2 ** 128) + start + i)",
            "source_mapping": {
              "start": 15875,
              "length": 68,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setEpochData",
                "source_mapping": {
                  "start": 15136,
                  "length": 1130,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Ethash",
                    "source_mapping": {
                      "start": 8147,
                      "length": 14708,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setEpochData(uint256,uint256,uint256,uint256[],uint256,uint256)"
                }
              }
            }
          }
        ],
        "description": "Ethash.setEpochData(uint256,uint256,uint256,uint256[],uint256,uint256) () uses literals with too many digits:\n\t- SetEpochData(msg.sender,0x82000001,epoch * (2 ** 128) + start + i) ()\n",
        "markdown": "[Ethash.setEpochData(uint256,uint256,uint256,uint256[],uint256,uint256)]() uses literals with too many digits:\n\t- [SetEpochData(msg.sender,0x82000001,epoch * (2 ** 128) + start + i)]()\n",
        "first_markdown_element": "",
        "id": "bf91bef96a2fd62e13bdf05b8b87ed470238a0dce0faa415e0f07d1ffc016b7d",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifyAgt",
            "source_mapping": {
              "start": 36890,
              "length": 3573,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Agt",
                "source_mapping": {
                  "start": 35476,
                  "length": 5809,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[])"
            }
          },
          {
            "type": "node",
            "name": "VerifyAgt(0x80000002,i)",
            "source_mapping": {
              "start": 39385,
              "length": 26,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyAgt",
                "source_mapping": {
                  "start": 36890,
                  "length": 3573,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Agt",
                    "source_mapping": {
                      "start": 35476,
                      "length": 5809,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[])"
                }
              }
            }
          }
        ],
        "description": "Agt.verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[]) () uses literals with too many digits:\n\t- VerifyAgt(0x80000002,i) ()\n",
        "markdown": "[Agt.verifyAgt(Agt.VerifyAgtData,uint256,uint256[],uint256[])]() uses literals with too many digits:\n\t- [VerifyAgt(0x80000002,i)]()\n",
        "first_markdown_element": "",
        "id": "c13b9c051d1787dc1306d1ec0ee19134bcb8f5c1cc082a403ef408698bf8bfef",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifyExtraData",
            "source_mapping": {
              "start": 59339,
              "length": 961,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifyExtraData(bytes32,bytes32,uint256)"
            }
          },
          {
            "type": "node",
            "name": "VerifyExtraData(msg.sender,0x83000001,uint256(encodedDiff))",
            "source_mapping": {
              "start": 60115,
              "length": 60,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyExtraData",
                "source_mapping": {
                  "start": 59339,
                  "length": 961,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyExtraData(bytes32,bytes32,uint256)"
                }
              }
            }
          }
        ],
        "description": "SmartPool.verifyExtraData(bytes32,bytes32,uint256) () uses literals with too many digits:\n\t- VerifyExtraData(msg.sender,0x83000001,uint256(encodedDiff)) ()\n",
        "markdown": "[SmartPool.verifyExtraData(bytes32,bytes32,uint256)]() uses literals with too many digits:\n\t- [VerifyExtraData(msg.sender,0x83000001,uint256(encodedDiff))]()\n",
        "first_markdown_element": "",
        "id": "c9fe45a152141312d89b6e22883790b51c36c95b46159c25f6624b742ebe6d33",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "keccak_f",
            "source_mapping": {
              "start": 154,
              "length": 6724,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SHA3_512",
                "source_mapping": {
                  "start": 98,
                  "length": 7965,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "keccak_f(uint256[25])"
            }
          },
          {
            "type": "node",
            "name": "RC = (uint256(0x0000000000000001),0x0000000000008082,0x800000000000808A,0x8000000080008000,0x000000000000808B,0x0000000080000001,0x8000000080008081,0x8000000000008009,0x000000000000008A,0x0000000000000088,0x0000000080008009,0x000000008000000A,0x000000008000808B,0x800000000000008B,0x8000000000008089,0x8000000000008003,0x8000000000008002,0x8000000000000080,0x000000000000800A,0x800000008000000A,0x8000000080008081,0x8000000000008080,0x0000000080000001,0x8000000080008008)",
            "source_mapping": {
              "start": 410,
              "length": 964,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "keccak_f",
                "source_mapping": {
                  "start": 154,
                  "length": 6724,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SHA3_512",
                    "source_mapping": {
                      "start": 98,
                      "length": 7965,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "keccak_f(uint256[25])"
                }
              }
            }
          }
        ],
        "description": "SHA3_512.keccak_f(uint256[25]) () uses literals with too many digits:\n\t- RC = (uint256(0x0000000000000001),0x0000000000008082,0x800000000000808A,0x8000000080008000,0x000000000000808B,0x0000000080000001,0x8000000080008081,0x8000000000008009,0x000000000000008A,0x0000000000000088,0x0000000080008009,0x000000008000000A,0x000000008000808B,0x800000000000008B,0x8000000000008089,0x8000000000008003,0x8000000000008002,0x8000000000000080,0x000000000000800A,0x800000008000000A,0x8000000080008081,0x8000000000008080,0x0000000080000001,0x8000000080008008) ()\n",
        "markdown": "[SHA3_512.keccak_f(uint256[25])]() uses literals with too many digits:\n\t- [RC = (uint256(0x0000000000000001),0x0000000000008082,0x800000000000808A,0x8000000080008000,0x000000000000808B,0x0000000080000001,0x8000000080008081,0x8000000000008009,0x000000000000008A,0x0000000000000088,0x0000000080008009,0x000000008000000A,0x000000008000808B,0x800000000000008B,0x8000000000008089,0x8000000000008003,0x8000000000008002,0x8000000000000080,0x000000000000800A,0x800000008000000A,0x8000000080008081,0x8000000000008080,0x0000000080000001,0x8000000080008008)]()\n",
        "first_markdown_element": "",
        "id": "ca41d88590b5df0d5d4a2424bfd3370545d5c97dc8a49a9b84280e2d455ae44c",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "updateWhiteList",
            "source_mapping": {
              "start": 57096,
              "length": 639,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "updateWhiteList(address,bool)"
            }
          },
          {
            "type": "node",
            "name": "UpdateWhiteList(msg.sender,0x80000001,0,add)",
            "source_mapping": {
              "start": 57413,
              "length": 49,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "updateWhiteList",
                "source_mapping": {
                  "start": 57096,
                  "length": 639,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "updateWhiteList(address,bool)"
                }
              }
            }
          }
        ],
        "description": "SmartPool.updateWhiteList(address,bool) () uses literals with too many digits:\n\t- UpdateWhiteList(msg.sender,0x80000001,0,add) ()\n",
        "markdown": "[SmartPool.updateWhiteList(address,bool)]() uses literals with too many digits:\n\t- [UpdateWhiteList(msg.sender,0x80000001,0,add)]()\n",
        "first_markdown_element": "",
        "id": "d2a209c4b1e8bd0f89c48efda4771bc3d4dcf27eb0232df5f978c5c86cd38cc0",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "setUnlceRateAndFees",
            "source_mapping": {
              "start": 66097,
              "length": 375,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "setUnlceRateAndFees(uint256,uint256)"
            }
          },
          {
            "type": "node",
            "name": "SetUnlceRateAndFees(msg.sender,0x80000000,0)",
            "source_mapping": {
              "start": 66258,
              "length": 48,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setUnlceRateAndFees",
                "source_mapping": {
                  "start": 66097,
                  "length": 375,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setUnlceRateAndFees(uint256,uint256)"
                }
              }
            }
          }
        ],
        "description": "SmartPool.setUnlceRateAndFees(uint256,uint256) () uses literals with too many digits:\n\t- SetUnlceRateAndFees(msg.sender,0x80000000,0) ()\n",
        "markdown": "[SmartPool.setUnlceRateAndFees(uint256,uint256)]() uses literals with too many digits:\n\t- [SetUnlceRateAndFees(msg.sender,0x80000000,0)]()\n",
        "first_markdown_element": "",
        "id": "dc3a54e17d36a119194fbf169fc5f4c93387a3bb42fef21062b70e8ace81ae91",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "updateWhiteList",
            "source_mapping": {
              "start": 57096,
              "length": 639,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "updateWhiteList(address,bool)"
            }
          },
          {
            "type": "node",
            "name": "UpdateWhiteList(msg.sender,0x80000000,0,add)",
            "source_mapping": {
              "start": 57243,
              "length": 49,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "updateWhiteList",
                "source_mapping": {
                  "start": 57096,
                  "length": 639,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "updateWhiteList(address,bool)"
                }
              }
            }
          }
        ],
        "description": "SmartPool.updateWhiteList(address,bool) () uses literals with too many digits:\n\t- UpdateWhiteList(msg.sender,0x80000000,0,add) ()\n",
        "markdown": "[SmartPool.updateWhiteList(address,bool)]() uses literals with too many digits:\n\t- [UpdateWhiteList(msg.sender,0x80000000,0,add)]()\n",
        "first_markdown_element": "",
        "id": "df6d996ac9f62835f622abd32df6aa5d4ae2a0a2a4157d2c00cdf0cee5caa708",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "submitClaim",
            "source_mapping": {
              "start": 42173,
              "length": 2919,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "WeightedSubmission",
                "source_mapping": {
                  "start": 41287,
                  "length": 10389,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "submitClaim(uint256,uint256,uint256,uint256,uint256,bool)"
            }
          },
          {
            "type": "node",
            "name": "SubmitClaim(msg.sender,0x81000002,0)",
            "source_mapping": {
              "start": 42726,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "submitClaim",
                "source_mapping": {
                  "start": 42173,
                  "length": 2919,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "WeightedSubmission",
                    "source_mapping": {
                      "start": 41287,
                      "length": 10389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "submitClaim(uint256,uint256,uint256,uint256,uint256,bool)"
                }
              }
            }
          }
        ],
        "description": "WeightedSubmission.submitClaim(uint256,uint256,uint256,uint256,uint256,bool) () uses literals with too many digits:\n\t- SubmitClaim(msg.sender,0x81000002,0) ()\n",
        "markdown": "[WeightedSubmission.submitClaim(uint256,uint256,uint256,uint256,uint256,bool)]() uses literals with too many digits:\n\t- [SubmitClaim(msg.sender,0x81000002,0)]()\n",
        "first_markdown_element": "",
        "id": "e42f3e026728dcb898fd9690e2c7a66c8715d1420a6db916fb95b36199a758b5",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifyClaim",
            "source_mapping": {
              "start": 60405,
              "length": 5340,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
            }
          },
          {
            "type": "node",
            "name": "VerifyClaim(msg.sender,0x84000007,counter)",
            "source_mapping": {
              "start": 62381,
              "length": 46,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            }
          }
        ],
        "description": "SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[]) () uses literals with too many digits:\n\t- VerifyClaim(msg.sender,0x84000007,counter) ()\n",
        "markdown": "[SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])]() uses literals with too many digits:\n\t- [VerifyClaim(msg.sender,0x84000007,counter)]()\n",
        "first_markdown_element": "",
        "id": "e79d52d0086c7062a9ad431136cd5df77ae29d45e0c79e1d40baae01e6fe0373",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifyClaim",
            "source_mapping": {
              "start": 60405,
              "length": 5340,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
            }
          },
          {
            "type": "node",
            "name": "VerifyClaim(msg.sender,0x8400000b,ethash)",
            "source_mapping": {
              "start": 64639,
              "length": 45,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifyClaim",
                "source_mapping": {
                  "start": 60405,
                  "length": 5340,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
                }
              }
            }
          }
        ],
        "description": "SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[]) () uses literals with too many digits:\n\t- VerifyClaim(msg.sender,0x8400000b,ethash) ()\n",
        "markdown": "[SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])]() uses literals with too many digits:\n\t- [VerifyClaim(msg.sender,0x8400000b,ethash)]()\n",
        "first_markdown_element": "",
        "id": "eee0af1c9bafc9714150ac8f1a758d5299e09fd20ef887ff94e2664b6fa1f0be",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "updateBlackList",
            "source_mapping": {
              "start": 57741,
              "length": 637,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "updateBlackList(address,bool)"
            }
          },
          {
            "type": "node",
            "name": "UpdateBlackList(msg.sender,0x80000001,0,add)",
            "source_mapping": {
              "start": 58058,
              "length": 49,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "updateBlackList",
                "source_mapping": {
                  "start": 57741,
                  "length": 637,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "updateBlackList(address,bool)"
                }
              }
            }
          }
        ],
        "description": "SmartPool.updateBlackList(address,bool) () uses literals with too many digits:\n\t- UpdateBlackList(msg.sender,0x80000001,0,add) ()\n",
        "markdown": "[SmartPool.updateBlackList(address,bool)]() uses literals with too many digits:\n\t- [UpdateBlackList(msg.sender,0x80000001,0,add)]()\n",
        "first_markdown_element": "",
        "id": "f4e029d356193782fe2111765ff65d9d69ebdf0fb22a06dcad7875ffbdd4dde6",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "disableBlackListForever",
            "source_mapping": {
              "start": 58481,
              "length": 332,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "disableBlackListForever()"
            }
          },
          {
            "type": "node",
            "name": "DisableBlackListForever(msg.sender,0x80000000,0)",
            "source_mapping": {
              "start": 58611,
              "length": 52,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "disableBlackListForever",
                "source_mapping": {
                  "start": 58481,
                  "length": 332,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SmartPool",
                    "source_mapping": {
                      "start": 51679,
                      "length": 16402,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "disableBlackListForever()"
                }
              }
            }
          }
        ],
        "description": "SmartPool.disableBlackListForever() () uses literals with too many digits:\n\t- DisableBlackListForever(msg.sender,0x80000000,0) ()\n",
        "markdown": "[SmartPool.disableBlackListForever()]() uses literals with too many digits:\n\t- [DisableBlackListForever(msg.sender,0x80000000,0)]()\n",
        "first_markdown_element": "",
        "id": "ff7e48b94a06fce643fe4c01a6a7b0e0089b5985018add3c3fbfc88e01478777",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "version",
            "source_mapping": {
              "start": 51735,
              "length": 32,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "SmartPool",
            "source_mapping": {
              "start": 51679,
              "length": 16402,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "SmartPool.version () is never used in SmartPool ()\n",
        "markdown": "[SmartPool.version]() is never used in [SmartPool]()\n",
        "first_markdown_element": "",
        "id": "79daafd4d5a37a576ab45c7ed6f70376a887e78b3ddc3858bee2cafa6b37f237",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "version",
            "source_mapping": {
              "start": 51735,
              "length": 32,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "SmartPool.version () should be constant \n",
        "markdown": "[SmartPool.version]() should be constant \n",
        "first_markdown_element": "",
        "id": "320c267414d55e123499bf7cab2877786b969fe8ed069b502a530e5927e0826b",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "LIST_SHORT_START",
            "source_mapping": {
              "start": 23099,
              "length": 37,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "RLP.LIST_SHORT_START () should be constant \n",
        "markdown": "[RLP.LIST_SHORT_START]() should be constant \n",
        "first_markdown_element": "",
        "id": "587a25041da4efaec413a47251badc999132ab1e83534adec5450efb860d912c",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "DATA_LONG_START",
            "source_mapping": {
              "start": 23060,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "RLP.DATA_LONG_START () should be constant \n",
        "markdown": "[RLP.DATA_LONG_START]() should be constant \n",
        "first_markdown_element": "",
        "id": "646499dc4246b19f34f3340823a44e223f7a24e2f7f048fafaa961ce31dfee45",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "DATA_SHORT_START",
            "source_mapping": {
              "start": 23020,
              "length": 37,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "RLP.DATA_SHORT_START () should be constant \n",
        "markdown": "[RLP.DATA_SHORT_START]() should be constant \n",
        "first_markdown_element": "",
        "id": "9437186685342c113eb9d5f8835978228214b0f22181dc0880435176394622f3",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "LIST_LONG_START",
            "source_mapping": {
              "start": 23139,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "RLP.LIST_LONG_START () should be constant \n",
        "markdown": "[RLP.LIST_LONG_START]() should be constant \n",
        "first_markdown_element": "",
        "id": "9c306950023f3b6bd423c5182b57070ec254e6f1287d250beb4499831602757b",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "LIST_LONG_OFFSET",
            "source_mapping": {
              "start": 23219,
              "length": 37,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "RLP.LIST_LONG_OFFSET () should be constant \n",
        "markdown": "[RLP.LIST_LONG_OFFSET]() should be constant \n",
        "first_markdown_element": "",
        "id": "a2d8c34dfdb1cf19a489947793d23b81a7eb0710a8405609977a6f484336ffad",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "DATA_LONG_OFFSET",
            "source_mapping": {
              "start": 23179,
              "length": 37,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RLP",
                "source_mapping": {
                  "start": 23004,
                  "length": 12467,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "RLP.DATA_LONG_OFFSET () should be constant \n",
        "markdown": "[RLP.DATA_LONG_OFFSET]() should be constant \n",
        "first_markdown_element": "",
        "id": "a2e42541bf2f975f362b09ad7cb425d891953cc827de358c3669f71c3c39f84c",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "setEpochData",
            "source_mapping": {
              "start": 15136,
              "length": 1130,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Ethash",
                "source_mapping": {
                  "start": 8147,
                  "length": 14708,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "setEpochData(uint256,uint256,uint256,uint256[],uint256,uint256)"
            }
          }
        ],
        "description": "setEpochData(uint256,uint256,uint256,uint256[],uint256,uint256) should be declared external:\n\t- Ethash.setEpochData(uint256,uint256,uint256,uint256[],uint256,uint256) ()\n",
        "markdown": "setEpochData(uint256,uint256,uint256,uint256[],uint256,uint256) should be declared external:\n\t- [Ethash.setEpochData(uint256,uint256,uint256,uint256[],uint256,uint256)]()\n",
        "first_markdown_element": "",
        "id": "3c51edbdd645695d7d75018ed0895e5ef74620cff875d49b2edfc79325d37a16",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "hashimoto",
            "source_mapping": {
              "start": 16712,
              "length": 6141,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Ethash",
                "source_mapping": {
                  "start": 8147,
                  "length": 14708,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "hashimoto(bytes32,bytes8,uint256[],uint256[],uint256)"
            }
          }
        ],
        "description": "hashimoto(bytes32,bytes8,uint256[],uint256[],uint256) should be declared external:\n\t- Ethash.hashimoto(bytes32,bytes8,uint256[],uint256[],uint256) ()\n",
        "markdown": "hashimoto(bytes32,bytes8,uint256[],uint256[],uint256) should be declared external:\n\t- [Ethash.hashimoto(bytes32,bytes8,uint256[],uint256[],uint256)]()\n",
        "first_markdown_element": "",
        "id": "5350f29855737c56d8739ad2d2a926d1203526037716cc54676da879921722bd",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifyAgtDebugForTesting",
            "source_mapping": {
              "start": 40473,
              "length": 801,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Agt",
                "source_mapping": {
                  "start": 35476,
                  "length": 5809,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifyAgtDebugForTesting(uint256,uint256,uint256,uint256,uint256,uint256,uint256[],uint256[])"
            }
          }
        ],
        "description": "verifyAgtDebugForTesting(uint256,uint256,uint256,uint256,uint256,uint256,uint256[],uint256[]) should be declared external:\n\t- Agt.verifyAgtDebugForTesting(uint256,uint256,uint256,uint256,uint256,uint256,uint256[],uint256[]) ()\n",
        "markdown": "verifyAgtDebugForTesting(uint256,uint256,uint256,uint256,uint256,uint256,uint256[],uint256[]) should be declared external:\n\t- [Agt.verifyAgtDebugForTesting(uint256,uint256,uint256,uint256,uint256,uint256,uint256[],uint256[])]()\n",
        "first_markdown_element": "",
        "id": "a1263ee6735860d00e8948a248cd1446dc092f5ed49d0dcfb71df51cd23896e3",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "verifyClaim",
            "source_mapping": {
              "start": 60405,
              "length": 5340,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SmartPool",
                "source_mapping": {
                  "start": 51679,
                  "length": 16402,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])"
            }
          }
        ],
        "description": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[]) should be declared external:\n\t- SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[]) ()\n",
        "markdown": "verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[]) should be declared external:\n\t- [SmartPool.verifyClaim(bytes,uint256,uint256,uint256,uint256[],uint256[],uint256[],uint256[])]()\n",
        "first_markdown_element": "",
        "id": "c7f63796ac382dc870604b889b6c3eafeb0df77bca8e3d051898a1b52ba042c6",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      }
    ]
  }
}