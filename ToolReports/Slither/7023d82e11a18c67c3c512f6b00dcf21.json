{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "node",
            "name": "prizes.push(1600)",
            "source_mapping": {
              "start": 14230,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "slot",
                "source_mapping": {
                  "start": 13734,
                  "length": 694,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "slot()"
                }
              }
            }
          }
        ],
        "description": "slot () contract sets array length with a user-controlled value:\n\t- prizes.push(1600) ()\n",
        "markdown": "[slot]() contract sets array length with a user-controlled value:\n\t- [prizes.push(1600)]()\n",
        "first_markdown_element": "",
        "id": "010159d2098247fe6c544f97d9a07b537e8ed2e52aee422028ccb5c5846af7a2",
        "check": "controlled-array-length",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "node",
            "name": "probabilities.push(4)",
            "source_mapping": {
              "start": 13767,
              "length": 21,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "slot",
                "source_mapping": {
                  "start": 13734,
                  "length": 694,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "slot()"
                }
              }
            }
          }
        ],
        "description": "slot () contract sets array length with a user-controlled value:\n\t- probabilities.push(4) ()\n",
        "markdown": "[slot]() contract sets array length with a user-controlled value:\n\t- [probabilities.push(4)]()\n",
        "first_markdown_element": "",
        "id": "3cc5d57aafcd0dfa8072e2702f409fe7f5403ee831cfb0c736819b9837a2147e",
        "check": "controlled-array-length",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "node",
            "name": "prizes.push(2500)",
            "source_mapping": {
              "start": 14095,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "slot",
                "source_mapping": {
                  "start": 13734,
                  "length": 694,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "slot()"
                }
              }
            }
          }
        ],
        "description": "slot () contract sets array length with a user-controlled value:\n\t- prizes.push(2500) ()\n",
        "markdown": "[slot]() contract sets array length with a user-controlled value:\n\t- [prizes.push(2500)]()\n",
        "first_markdown_element": "",
        "id": "4fe1be57382217ac1220a026ca17e1dc5db01495b4dcb188a25f413a7169f571",
        "check": "controlled-array-length",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "node",
            "name": "probabilities.push(2000)",
            "source_mapping": {
              "start": 13930,
              "length": 24,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "slot",
                "source_mapping": {
                  "start": 13734,
                  "length": 694,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "slot()"
                }
              }
            }
          }
        ],
        "description": "slot () contract sets array length with a user-controlled value:\n\t- probabilities.push(2000) ()\n",
        "markdown": "[slot]() contract sets array length with a user-controlled value:\n\t- [probabilities.push(2000)]()\n",
        "first_markdown_element": "",
        "id": "59af8519271438d45b983acefcaa85271267e3417b827db416961de887ce3b22",
        "check": "controlled-array-length",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "node",
            "name": "probabilities.push(600)",
            "source_mapping": {
              "start": 13863,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "slot",
                "source_mapping": {
                  "start": 13734,
                  "length": 694,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "slot()"
                }
              }
            }
          }
        ],
        "description": "slot () contract sets array length with a user-controlled value:\n\t- probabilities.push(600) ()\n",
        "markdown": "[slot]() contract sets array length with a user-controlled value:\n\t- [probabilities.push(600)]()\n",
        "first_markdown_element": "",
        "id": "5b07dfb3b36c8f74bd4fb08935c7780452761e6f6d6ac318c0f853643485d11c",
        "check": "controlled-array-length",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "node",
            "name": "prizes.push(1800)",
            "source_mapping": {
              "start": 14176,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "slot",
                "source_mapping": {
                  "start": 13734,
                  "length": 694,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "slot()"
                }
              }
            }
          }
        ],
        "description": "slot () contract sets array length with a user-controlled value:\n\t- prizes.push(1800) ()\n",
        "markdown": "[slot]() contract sets array length with a user-controlled value:\n\t- [prizes.push(1800)]()\n",
        "first_markdown_element": "",
        "id": "5b210ed1858e519651955908e244206630abd03536b7d3e071e6b0d14f5a3a03",
        "check": "controlled-array-length",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "node",
            "name": "prizes.push(1500)",
            "source_mapping": {
              "start": 14257,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "slot",
                "source_mapping": {
                  "start": 13734,
                  "length": 694,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "slot()"
                }
              }
            }
          }
        ],
        "description": "slot () contract sets array length with a user-controlled value:\n\t- prizes.push(1500) ()\n",
        "markdown": "[slot]() contract sets array length with a user-controlled value:\n\t- [prizes.push(1500)]()\n",
        "first_markdown_element": "",
        "id": "5b845e903af0d6e88fbb32f70696d146988c477cb77fc138e806361c96c4909d",
        "check": "controlled-array-length",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "node",
            "name": "prizes.push(1700)",
            "source_mapping": {
              "start": 14203,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "slot",
                "source_mapping": {
                  "start": 13734,
                  "length": 694,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "slot()"
                }
              }
            }
          }
        ],
        "description": "slot () contract sets array length with a user-controlled value:\n\t- prizes.push(1700) ()\n",
        "markdown": "[slot]() contract sets array length with a user-controlled value:\n\t- [prizes.push(1700)]()\n",
        "first_markdown_element": "",
        "id": "5fe268a9d797acf00c25078fb530da7f3d0ff1365c16f06181cbc04a977cfa3f",
        "check": "controlled-array-length",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "node",
            "name": "probabilities.push(1000)",
            "source_mapping": {
              "start": 13896,
              "length": 24,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "slot",
                "source_mapping": {
                  "start": 13734,
                  "length": 694,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "slot()"
                }
              }
            }
          }
        ],
        "description": "slot () contract sets array length with a user-controlled value:\n\t- probabilities.push(1000) ()\n",
        "markdown": "[slot]() contract sets array length with a user-controlled value:\n\t- [probabilities.push(1000)]()\n",
        "first_markdown_element": "",
        "id": "8690c13af8adff49a00663c00503aecf548a4d51d70bb1bc554d924c163b8249",
        "check": "controlled-array-length",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "node",
            "name": "probabilities.push(200)",
            "source_mapping": {
              "start": 13830,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "slot",
                "source_mapping": {
                  "start": 13734,
                  "length": 694,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "slot()"
                }
              }
            }
          }
        ],
        "description": "slot () contract sets array length with a user-controlled value:\n\t- probabilities.push(200) ()\n",
        "markdown": "[slot]() contract sets array length with a user-controlled value:\n\t- [probabilities.push(200)]()\n",
        "first_markdown_element": "",
        "id": "98748af0eb62ba9d80623e9d3a1798d40513f7781e456e78ac71f853c5aa8227",
        "check": "controlled-array-length",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "node",
            "name": "prizes.push(5000)",
            "source_mapping": {
              "start": 14068,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "slot",
                "source_mapping": {
                  "start": 13734,
                  "length": 694,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "slot()"
                }
              }
            }
          }
        ],
        "description": "slot () contract sets array length with a user-controlled value:\n\t- prizes.push(5000) ()\n",
        "markdown": "[slot]() contract sets array length with a user-controlled value:\n\t- [prizes.push(5000)]()\n",
        "first_markdown_element": "",
        "id": "9c75435bef83de9c984ced2824d12e665974d82719fac8243b731ddad84449e7",
        "check": "controlled-array-length",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "node",
            "name": "probabilities.push(30000)",
            "source_mapping": {
              "start": 13998,
              "length": 25,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "slot",
                "source_mapping": {
                  "start": 13734,
                  "length": 694,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "slot()"
                }
              }
            }
          }
        ],
        "description": "slot () contract sets array length with a user-controlled value:\n\t- probabilities.push(30000) ()\n",
        "markdown": "[slot]() contract sets array length with a user-controlled value:\n\t- [probabilities.push(30000)]()\n",
        "first_markdown_element": "",
        "id": "a6a8351eb1298cd3a5ea07458a3af54c70d256ed64de5887c706695d6c93e28c",
        "check": "controlled-array-length",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "node",
            "name": "prizes.push(1900)",
            "source_mapping": {
              "start": 14149,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "slot",
                "source_mapping": {
                  "start": 13734,
                  "length": 694,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "slot()"
                }
              }
            }
          }
        ],
        "description": "slot () contract sets array length with a user-controlled value:\n\t- prizes.push(1900) ()\n",
        "markdown": "[slot]() contract sets array length with a user-controlled value:\n\t- [prizes.push(1900)]()\n",
        "first_markdown_element": "",
        "id": "a6ac312596f4f3dba88d3abd3f884c605482cd9c91553c390be806aa48dd4d5a",
        "check": "controlled-array-length",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "node",
            "name": "probabilities.push(50)",
            "source_mapping": {
              "start": 13798,
              "length": 22,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "slot",
                "source_mapping": {
                  "start": 13734,
                  "length": 694,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "slot()"
                }
              }
            }
          }
        ],
        "description": "slot () contract sets array length with a user-controlled value:\n\t- probabilities.push(50) ()\n",
        "markdown": "[slot]() contract sets array length with a user-controlled value:\n\t- [probabilities.push(50)]()\n",
        "first_markdown_element": "",
        "id": "a9894bc17f1d43f5aa9fc8a2f3ba359b16e6a21cc54121e2eafc56ce1dcffed3",
        "check": "controlled-array-length",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "node",
            "name": "prizes.push(2000)",
            "source_mapping": {
              "start": 14122,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "slot",
                "source_mapping": {
                  "start": 13734,
                  "length": 694,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "slot()"
                }
              }
            }
          }
        ],
        "description": "slot () contract sets array length with a user-controlled value:\n\t- prizes.push(2000) ()\n",
        "markdown": "[slot]() contract sets array length with a user-controlled value:\n\t- [prizes.push(2000)]()\n",
        "first_markdown_element": "",
        "id": "afc1eb1480cb12620e922eab1f644ca47d836d86a58ed304fd432cefb192f933",
        "check": "controlled-array-length",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "node",
            "name": "probabilities.push(90000)",
            "source_mapping": {
              "start": 14033,
              "length": 25,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "slot",
                "source_mapping": {
                  "start": 13734,
                  "length": 694,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "slot()"
                }
              }
            }
          }
        ],
        "description": "slot () contract sets array length with a user-controlled value:\n\t- probabilities.push(90000) ()\n",
        "markdown": "[slot]() contract sets array length with a user-controlled value:\n\t- [probabilities.push(90000)]()\n",
        "first_markdown_element": "",
        "id": "c2cd01df2116c60ede1e6775d32b719383556951888168cc76df02e40fb0030c",
        "check": "controlled-array-length",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "node",
            "name": "prizes.push(375)",
            "source_mapping": {
              "start": 14284,
              "length": 16,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "slot",
                "source_mapping": {
                  "start": 13734,
                  "length": 694,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "slot()"
                }
              }
            }
          }
        ],
        "description": "slot () contract sets array length with a user-controlled value:\n\t- prizes.push(375) ()\n",
        "markdown": "[slot]() contract sets array length with a user-controlled value:\n\t- [prizes.push(375)]()\n",
        "first_markdown_element": "",
        "id": "e4a30cccafded7eca4fc03f8ff145b308d8352cf023ac7d60e9f2154fbfd3b3c",
        "check": "controlled-array-length",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "node",
            "name": "probabilities.push(4000)",
            "source_mapping": {
              "start": 13964,
              "length": 24,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "slot",
                "source_mapping": {
                  "start": 13734,
                  "length": 694,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "slot()"
                }
              }
            }
          }
        ],
        "description": "slot () contract sets array length with a user-controlled value:\n\t- probabilities.push(4000) ()\n",
        "markdown": "[slot]() contract sets array length with a user-controlled value:\n\t- [probabilities.push(4000)]()\n",
        "first_markdown_element": "",
        "id": "f8650ead0af9b774d142d595805fe9a34c97e852ced32e4bc8ba5ac044bc6d98",
        "check": "controlled-array-length",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "getCodeSize",
            "source_mapping": {
              "start": 8009,
              "length": 150,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "getCodeSize(address)"
            }
          }
        ],
        "description": "usingOraclize.getCodeSize(address) () is declared view but contains assembly code\n",
        "markdown": "[usingOraclize.getCodeSize(address)]() is declared view but contains assembly code\n",
        "first_markdown_element": "",
        "id": "16bc519b263fbe20f07d3e662621a5f73c505ffdf6a9ef4970d71f70faa21ef0",
        "additional_fields": {
          "contains_assembly": true
        },
        "check": "constant-function-asm",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "fallback",
            "source_mapping": {
              "start": 14628,
              "length": 537,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "slot",
                "source_mapping": {
                  "start": 12824,
                  "length": 5347,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "fallback()"
            }
          },
          {
            "type": "node",
            "name": "address(this).balance < msg.value / 100 * prizes[0]",
            "source_mapping": {
              "start": 14876,
              "length": 47,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "fallback",
                "source_mapping": {
                  "start": 14628,
                  "length": 537,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "fallback()"
                }
              }
            }
          }
        ],
        "description": "slot.fallback() () performs a multiplication on the result of a division:\n\t- address(this).balance < msg.value / 100 * prizes[0] ()\n",
        "markdown": "[slot.fallback()]() performs a multiplication on the result of a division:\n\t- [address(this).balance < msg.value / 100 * prizes[0]]()\n",
        "first_markdown_element": "",
        "id": "28acfc55df907eec034515843f699b6e1775a3905fccda1580e4396e88f8a5ca",
        "check": "divide-before-multiply",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "__callback",
            "source_mapping": {
              "start": 15357,
              "length": 1013,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "slot",
                "source_mapping": {
                  "start": 12824,
                  "length": 5347,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "__callback(bytes32,string)"
            }
          },
          {
            "type": "node",
            "name": "! players[myid].send(bets[myid] / 100 * prizes[i])",
            "source_mapping": {
              "start": 15929,
              "length": 45,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "__callback",
                "source_mapping": {
                  "start": 15357,
                  "length": 1013,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "__callback(bytes32,string)"
                }
              }
            }
          }
        ],
        "description": "slot.__callback(bytes32,string) () performs a multiplication on the result of a division:\n\t- ! players[myid].send(bets[myid] / 100 * prizes[i]) ()\n",
        "markdown": "[slot.__callback(bytes32,string)]() performs a multiplication on the result of a division:\n\t- [! players[myid].send(bets[myid] / 100 * prizes[i])]()\n",
        "first_markdown_element": "",
        "id": "a8fd2772ea149379f01467e56175e24b3a1c8789d11747336527daaafd07197e",
        "check": "divide-before-multiply",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "__callback",
            "source_mapping": {
              "start": 15357,
              "length": 1013,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "slot",
                "source_mapping": {
                  "start": 12824,
                  "length": 5347,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "__callback(bytes32,string)"
            }
          },
          {
            "type": "node",
            "name": "! players[myid].send(bets[myid] / 100 * prizes[i])",
            "source_mapping": {
              "start": 15929,
              "length": 45,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "__callback",
                "source_mapping": {
                  "start": 15357,
                  "length": 1013,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "__callback(bytes32,string)"
                }
              }
            }
          }
        ],
        "description": "slot.__callback(bytes32,string) () has external calls inside a loop: ! players[myid].send(bets[myid] / 100 * prizes[i]) ()\n",
        "markdown": "[slot.__callback(bytes32,string)]() has external calls inside a loop: [! players[myid].send(bets[myid] / 100 * prizes[i])]()\n",
        "first_markdown_element": "",
        "id": "f30e7e8d4effe389f97fe1c7e9e7bd5d44011638ec3e8de7eb63a078a92cec51",
        "check": "calls-loop",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "fallback",
            "source_mapping": {
              "start": 14628,
              "length": 537,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "slot",
                "source_mapping": {
                  "start": 12824,
                  "length": 5347,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "fallback()"
            }
          },
          {
            "type": "node",
            "name": "oid = oraclize_query(queryType,query,oraclizeGas)",
            "source_mapping": {
              "start": 15015,
              "length": 59,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "fallback",
                "source_mapping": {
                  "start": 14628,
                  "length": 537,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "fallback()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "price = oraclize.getPrice(datasource,gaslimit)",
            "source_mapping": {
              "start": 5791,
              "length": 52,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "oraclize_query",
                "source_mapping": {
                  "start": 5670,
                  "length": 356,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "oraclize_query(string,string,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "oraclize = OraclizeI(OAR.getAddress())",
            "source_mapping": {
              "start": 2798,
              "length": 38,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "oraclizeAPI",
                "source_mapping": {
                  "start": 2702,
                  "length": 152,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "oraclizeAPI()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "oraclize.query_withGasLimit.value(price)(0,datasource,arg,gaslimit)",
            "source_mapping": {
              "start": 5942,
              "length": 77,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "oraclize_query",
                "source_mapping": {
                  "start": 5670,
                  "length": 356,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "oraclize_query(string,string,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "oid = oraclize_query(queryType,query,oraclizeGas)",
            "source_mapping": {
              "start": 15015,
              "length": 59,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "fallback",
                "source_mapping": {
                  "start": 14628,
                  "length": 537,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "fallback()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "price = oraclize.getPrice(datasource,gaslimit)",
            "source_mapping": {
              "start": 5791,
              "length": 52,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "oraclize_query",
                "source_mapping": {
                  "start": 5670,
                  "length": 356,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "oraclize_query(string,string,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "oraclize = OraclizeI(OAR.getAddress())",
            "source_mapping": {
              "start": 2798,
              "length": 38,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "oraclizeAPI",
                "source_mapping": {
                  "start": 2702,
                  "length": 152,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "oraclizeAPI()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "oraclize.query_withGasLimit.value(price)(0,datasource,arg,gaslimit)",
            "source_mapping": {
              "start": 5942,
              "length": 77,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "oraclize_query",
                "source_mapping": {
                  "start": 5670,
                  "length": 356,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "oraclize_query(string,string,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "bets[oid] = msg.value",
            "source_mapping": {
              "start": 15088,
              "length": 21,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "fallback",
                "source_mapping": {
                  "start": 14628,
                  "length": 537,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "fallback()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "bets"
            }
          },
          {
            "type": "node",
            "name": "players[oid] = msg.sender",
            "source_mapping": {
              "start": 15123,
              "length": 25,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "fallback",
                "source_mapping": {
                  "start": 14628,
                  "length": 537,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "fallback()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "players"
            }
          }
        ],
        "description": "Reentrancy in slot.fallback() ():\n\tExternal calls:\n\t- oid = oraclize_query(queryType,query,oraclizeGas) ()\n\t\t- price = oraclize.getPrice(datasource,gaslimit) ()\n\t\t- oraclize = OraclizeI(OAR.getAddress()) ()\n\t\t- oraclize.query_withGasLimit.value(price)(0,datasource,arg,gaslimit) ()\n\tExternal calls sending eth:\n\t- oid = oraclize_query(queryType,query,oraclizeGas) ()\n\t\t- oraclize.query_withGasLimit.value(price)(0,datasource,arg,gaslimit) ()\n\tState variables written after the call(s):\n\t- bets[oid] = msg.value ()\n\t- players[oid] = msg.sender ()\n",
        "markdown": "Reentrancy in [slot.fallback()]():\n\tExternal calls:\n\t- [oid = oraclize_query(queryType,query,oraclizeGas)]()\n\t\t- [price = oraclize.getPrice(datasource,gaslimit)]()\n\t\t- [oraclize = OraclizeI(OAR.getAddress())]()\n\t\t- [oraclize.query_withGasLimit.value(price)(0,datasource,arg,gaslimit)]()\n\tExternal calls sending eth:\n\t- [oid = oraclize_query(queryType,query,oraclizeGas)]()\n\t\t- [oraclize.query_withGasLimit.value(price)(0,datasource,arg,gaslimit)]()\n\tState variables written after the call(s):\n\t- [bets[oid] = msg.value]()\n\t- [players[oid] = msg.sender]()\n",
        "first_markdown_element": "",
        "id": "9004e53f076bdb102dce6c498fc037a9565a0d33355d0fbce610576c2b7d70e3",
        "check": "reentrancy-benign",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "getCodeSize",
            "source_mapping": {
              "start": 8009,
              "length": 150,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "getCodeSize(address)"
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 8093,
              "length": 66,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "getCodeSize",
                "source_mapping": {
                  "start": 8009,
                  "length": 150,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "getCodeSize(address)"
                }
              }
            }
          }
        ],
        "description": "usingOraclize.getCodeSize(address) () uses assembly\n\t- INLINE ASM ()\n",
        "markdown": "[usingOraclize.getCodeSize(address)]() uses assembly\n\t- [INLINE ASM]()\n",
        "first_markdown_element": "",
        "id": "7e5d41f62c2c212a13753087718c1c83601b562dbe02a125ed1b6cadeb32d75a",
        "check": "assembly",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "__callback",
            "source_mapping": {
              "start": 15357,
              "length": 1013,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "slot",
                "source_mapping": {
                  "start": 12824,
                  "length": 5347,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "__callback(bytes32,string)"
            }
          },
          {
            "type": "node",
            "name": "delete players[myid]",
            "source_mapping": {
              "start": 16150,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "__callback",
                "source_mapping": {
                  "start": 15357,
                  "length": 1013,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "__callback(bytes32,string)"
                }
              }
            }
          }
        ],
        "description": "slot.__callback(bytes32,string) () has costly operations inside a loop:\n\t- delete players[myid] ()\n",
        "markdown": "[slot.__callback(bytes32,string)]() has costly operations inside a loop:\n\t- [delete players[myid]]()\n",
        "first_markdown_element": "",
        "id": "e2504f73aedcddd5de2325a871b9b51c196fe8291309eda24ebb9a2169ce6ac9",
        "check": "costly-loop",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "strConcat",
            "source_mapping": {
              "start": 10227,
              "length": 817,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "strConcat(string,string,string,string,string)"
            }
          }
        ],
        "description": "usingOraclize.strConcat(string,string,string,string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.strConcat(string,string,string,string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "02bccda8823598fc34194f454dae3f280b9461d6ec1ba6f8bc0616de61155d89",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_getPrice",
            "source_mapping": {
              "start": 4470,
              "length": 159,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_getPrice(string,uint256)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_getPrice(string,uint256) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_getPrice(string,uint256)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "0a426fe4087471cc79e04f61e78dbd2be460b7fba9c246ac05c58d6b9717054f",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "uint2str",
            "source_mapping": {
              "start": 12211,
              "length": 399,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "uint2str(uint256)"
            }
          }
        ],
        "description": "usingOraclize.uint2str(uint256) () is never used and should be removed\n",
        "markdown": "[usingOraclize.uint2str(uint256)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "2d8122f378a2a4ab25e5f21214afd3bb0874d1cfab7d0c2c5729ca3f4ac6b40a",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 7128,
              "length": 378,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string,string,uint256)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(string,string,string,uint256) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_query(string,string,string,uint256)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "3a9ba80ddeeb41d7a063a72b2f54747b5c14c4b956a07721cbdd12f9399d0a64",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 6031,
              "length": 328,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string,string)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(string,string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_query(string,string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "40054756700f3045af800052736c1eee7232bb1485a66df3a6b8e58c259923e3",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_setProof",
            "source_mapping": {
              "start": 7628,
              "length": 114,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_setProof(bytes1)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_setProof(bytes1) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_setProof(bytes1)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "481aca295ce795a1524d6dbce51cce53333d2513e83e589481d6a5d37fd206ea",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "parseAddr",
            "source_mapping": {
              "start": 8166,
              "length": 590,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "parseAddr(string)"
            }
          }
        ],
        "description": "usingOraclize.parseAddr(string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.parseAddr(string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "4f626564b7e2b022bb1b91377e45cc01a4e7443ae60b2d0c0f0c4c6eb4061c30",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_setCustomGasPrice",
            "source_mapping": {
              "start": 7747,
              "length": 132,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_setCustomGasPrice(uint256)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_setCustomGasPrice(uint256) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_setCustomGasPrice(uint256)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "52f7a269a49b51da4eb16aeee255edd439016e5dcd357aace3abf49037e1e236",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "strConcat",
            "source_mapping": {
              "start": 11054,
              "length": 142,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "strConcat(string,string,string,string)"
            }
          }
        ],
        "description": "usingOraclize.strConcat(string,string,string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.strConcat(string,string,string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "624828dc68f34e0da8911b149b7f75362984c7b83bc6efde9be2137df284241b",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 4950,
              "length": 330,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(uint256,string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_query(uint256,string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "6c078a52d1b31d3bdf41c2f4fef697ea3c6f94dbbd022b75ef571ccdd4268d3e",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 6364,
              "length": 352,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string,string)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(uint256,string,string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_query(uint256,string,string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "6ff97cc5c8f08858e86abc1fd46209a6b609be89e5760dffa980d63f4bba636c",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 5285,
              "length": 380,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string,uint256)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(uint256,string,string,uint256) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_query(uint256,string,string,uint256)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "73e029d68cda46f97a1509bb8791a3e962d126ff11e225a745f44dcb125e2134",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 4639,
              "length": 306,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_query(string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "76e2c7b0dd1c26753359bd31ebd36f8d2ff3d5e7e2f1b2911e2c738f8aa48dc5",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_setConfig",
            "source_mapping": {
              "start": 7888,
              "length": 115,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_setConfig(bytes32)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_setConfig(bytes32) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_setConfig(bytes32)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "81b6bba3fb7eece4a07ae16462e87e69366581edfe5ed5695c0c9a3ade3d67f1",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "strConcat",
            "source_mapping": {
              "start": 11339,
              "length": 120,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "strConcat(string,string)"
            }
          }
        ],
        "description": "usingOraclize.strConcat(string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.strConcat(string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "8cff80c0d8ce354d63c6201689f28cc903370629959c02f442412125acb599e2",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 6721,
              "length": 402,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string,string,uint256)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(uint256,string,string,string,uint256) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_query(uint256,string,string,string,uint256)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "8e8132dac8e24f98880fb95bfdc5e8336a3d1e00e06329b801fbe92bf610ce5f",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "strConcat",
            "source_mapping": {
              "start": 11202,
              "length": 131,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "strConcat(string,string,string)"
            }
          }
        ],
        "description": "usingOraclize.strConcat(string,string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.strConcat(string,string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "9cbe09a4afa473093d19e2a4f281cf4cc6337f4beefabce2b567e5882ff5d104",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "strCompare",
            "source_mapping": {
              "start": 8763,
              "length": 547,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "strCompare(string,string)"
            }
          }
        ],
        "description": "usingOraclize.strCompare(string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.strCompare(string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "b03ccda235961726f89662bec71e81728ac465851316fa7a3ec2420c2ff70235",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "parseInt",
            "source_mapping": {
              "start": 11481,
              "length": 92,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "parseInt(string)"
            }
          }
        ],
        "description": "usingOraclize.parseInt(string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.parseInt(string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "b9882b453764a4e58475b5ba332231e868c5c0313b1c5a257a40fee3220fac35",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "parseInt",
            "source_mapping": {
              "start": 11613,
              "length": 588,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "parseInt(string,uint256)"
            }
          }
        ],
        "description": "usingOraclize.parseInt(string,uint256) () is never used and should be removed\n",
        "markdown": "[usingOraclize.parseInt(string,uint256)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "d014d920fa364f18bec2bf3edbc85702a0f8255985c3a67fe21ca51e630a6f11",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "indexOf",
            "source_mapping": {
              "start": 9317,
              "length": 904,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "indexOf(string,string)"
            }
          }
        ],
        "description": "usingOraclize.indexOf(string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.indexOf(string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "d01b6f80ac7cad693f5b3e23453ca959866bbe5a177219a2a2cae02a9fd244bd",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_getPrice",
            "source_mapping": {
              "start": 4331,
              "length": 134,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_getPrice(string)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_getPrice(string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_getPrice(string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "df7c66d45c20f7eff86cb6ee8fcd92fd824bcb036fa277a4292c9bb11f0a4ff6",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "suicide(address)(owner)",
            "source_mapping": {
              "start": 12798,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "kill",
                "source_mapping": {
                  "start": 12747,
                  "length": 72,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "mortal",
                    "source_mapping": {
                      "start": 12646,
                      "length": 175,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "kill()"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected suicide(address)(owner) ():\n\t- Usage of \"suicide()\" should be replaced with \"selfdestruct()\"\n",
        "markdown": "Deprecated standard detected [suicide(address)(owner)]():\n\t- Usage of \"suicide()\" should be replaced with \"selfdestruct()\"\n",
        "first_markdown_element": "",
        "id": "af38f120e2d6ce3d7567404eb936f0124e2e9b2e954f0ddc56088aa4c884e377",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 14816,
              "length": 5,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "fallback",
                "source_mapping": {
                  "start": 14628,
                  "length": 537,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "fallback()"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected THROW ():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "markdown": "Deprecated standard detected [THROW]():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "first_markdown_element": "",
        "id": "f5556cf1c70b64b9e4b1fc32044dd970b5f2c8b9fc21b7971fda01971033f2d5",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [],
        "description": "solc-0.4.0 is not recommended for deployment\n",
        "markdown": "solc-0.4.0 is not recommended for deployment\n",
        "first_markdown_element": "",
        "id": "e676d9e89e623fa7675baecce41eb7ab21d1d8ec9e856bc5b047e6cfb50b37ca",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "pragma",
            "name": "^0.4.0",
            "source_mapping": {
              "start": 1125,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "directive": [
                "solidity",
                "^",
                "0.4",
                ".0"
              ]
            }
          }
        ],
        "description": "Pragma version^0.4.0 () allows old versions\n",
        "markdown": "Pragma version[^0.4.0]() allows old versions\n",
        "first_markdown_element": "",
        "id": "f4d0f96f990510a571c7ae954763f848d217d6f86fa5953d251f28f5221969e2",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_c",
            "source_mapping": {
              "start": 11095,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 11054,
                  "length": 142,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string,string)._c () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string,string)._c]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "0297d8ce4b74ef53be4b13e445c465611fab4a270b96bc56585b1132dedbe8df",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 7128,
              "length": 378,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string,string,uint256)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_query(string,string,string,uint256) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_query(string,string,string,uint256)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "0355ac2dd878572cdf2226829ecc27b042d6b998b720514b9409d71f0fc08d01",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 6031,
              "length": 328,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string,string)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_query(string,string,string) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_query(string,string,string)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "07e7db1bc757bec560c188cf286fc5a362e9c3524544eb1e30bcfcb7e33c3b67",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 11499,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "parseInt",
                "source_mapping": {
                  "start": 11481,
                  "length": 92,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "parseInt(string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.parseInt(string)._a () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.parseInt(string)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "0c07075992b1ccf274de61ec04f08ec1d92841f4b25fe1deeab308ebb2a12f41",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_b",
            "source_mapping": {
              "start": 11084,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 11054,
                  "length": 142,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string,string)._b () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string,string)._b]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "0dd455db537396a2d830f97a84264af9e123321e1acd0908050ac8432194f452",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_consensys",
            "source_mapping": {
              "start": 2595,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable usingOraclize.networkID_consensys () is not in mixedCase\n",
        "markdown": "Variable [usingOraclize.networkID_consensys]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "0e715024833b53f1d598506398b7809786829d042e39df5d1ca755e45bf845a0",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_setCustomGasPrice",
            "source_mapping": {
              "start": 7747,
              "length": 132,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_setCustomGasPrice(uint256)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_setCustomGasPrice(uint256) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_setCustomGasPrice(uint256)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "14a791f5083bd8e1ab5d29c695c6b1e035e7be7385d4a4e6cb80361fe24f4170",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 11073,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 11054,
                  "length": 142,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string,string)._a () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string,string)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "16572e724a6d96fbd6289a436ad4ce3c1217fd9263c9a0998cf5a09c1de685f6",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "__callback",
            "source_mapping": {
              "start": 4143,
              "length": 104,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "__callback(bytes32,string)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.__callback(bytes32,string) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.__callback(bytes32,string)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "17404c0124979738531db7fe78a033150302d5a516f3200e9d91b9ae7f2c19bc",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 4639,
              "length": 306,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_query(string,string) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_query(string,string)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "182939ac468801b45916f317f6de846e06252aaf9ad8dc907300d972141fc130",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_b",
            "source_mapping": {
              "start": 8794,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strCompare",
                "source_mapping": {
                  "start": 8763,
                  "length": 547,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strCompare(string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strCompare(string,string)._b () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strCompare(string,string)._b]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "203595b6031f1173a3d0859cb8782093fd630f05aa0625029cf8498533d170f2",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_haystack",
            "source_mapping": {
              "start": 9334,
              "length": 16,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "indexOf",
                "source_mapping": {
                  "start": 9317,
                  "length": 904,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "indexOf(string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.indexOf(string,string)._haystack () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.indexOf(string,string)._haystack]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "2d6b306069d60ef4b6ea5e9eaca715a69b42958bb0991b818b000b298bf664da",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "__callback",
            "source_mapping": {
              "start": 15357,
              "length": 1013,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "slot",
                "source_mapping": {
                  "start": 12824,
                  "length": 5347,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "__callback(bytes32,string)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function slot.__callback(bytes32,string) () is not in mixedCase\n",
        "markdown": "Function [slot.__callback(bytes32,string)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "36a4b03ec07f012fda5f19e98f47464216443b2ddc024fba1d42e0a4062ad9cd",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_c",
            "source_mapping": {
              "start": 11243,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 11202,
                  "length": 131,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string)._c () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string)._c]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "3acd35d9eee9de104f9be3bcdc3ec0b416cb51824ba4240088dd1fec67a054fa",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "OAR",
            "source_mapping": {
              "start": 2642,
              "length": 25,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable usingOraclize.OAR () is not in mixedCase\n",
        "markdown": "Variable [usingOraclize.OAR]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "3fc2652416bd0c049f5740630d4de1e63de0c95c26521cfc9ed8dc8e6aaf1027",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_e",
            "source_mapping": {
              "start": 10290,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 10227,
                  "length": 817,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string,string,string)._e () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string,string,string)._e]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "40419806dcca834fc51223039f96e5f2ab87fdabfc1c27c2b417d8d633027c26",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "usingOraclize",
            "source_mapping": {
              "start": 2161,
              "length": 10462,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "additional_fields": {
              "target": "contract",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Contract usingOraclize () is not in CapWords\n",
        "markdown": "Contract [usingOraclize]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "420b57e2612bc5bf3c105a488ede65d39993bf5272cace9e472f2bd7c6832eca",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 6721,
              "length": 402,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string,string,uint256)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_query(uint256,string,string,string,uint256) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_query(uint256,string,string,string,uint256)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "468a7e3fc0d5f78ef5b0d51e3525435c587be2eaed8120b52809984804c195bb",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_cbAddress",
            "source_mapping": {
              "start": 7511,
              "length": 112,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_cbAddress()"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_cbAddress() () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_cbAddress()]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "4b7e075f75a6c475fa1820455abef59bd0fefa72209045aa977070b4a1d0af6d",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 11631,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "parseInt",
                "source_mapping": {
                  "start": 11613,
                  "length": 588,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "parseInt(string,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.parseInt(string,uint256)._a () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.parseInt(string,uint256)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "5251d60a38eed6f14a390b9f471bf8a3ce3e4f3be2b8e0487cb4926fa9b12806",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 11358,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 11339,
                  "length": 120,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string)._a () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "5a798c8f8de8de5cc0e8db621e5d802e697874d964514db55ffe4138b8c1b58f",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_testnet",
            "source_mapping": {
              "start": 2512,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable usingOraclize.networkID_testnet () is not in mixedCase\n",
        "markdown": "Variable [usingOraclize.networkID_testnet]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "63fb3c93545f9e715e601e21ba6494c2da12407209f0519a762435ad2024ca0e",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_getPrice",
            "source_mapping": {
              "start": 4470,
              "length": 159,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_getPrice(string,uint256)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_getPrice(string,uint256) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_getPrice(string,uint256)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "691b9c31ec4e1adf893cd34e4647a9a43827786e591ed9013854f11e09994ef8",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_b",
            "source_mapping": {
              "start": 11642,
              "length": 7,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "parseInt",
                "source_mapping": {
                  "start": 11613,
                  "length": 588,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "parseInt(string,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.parseInt(string,uint256)._b () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.parseInt(string,uint256)._b]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "691c3ef346af826a974d5e7a1cc853c05c5293f315ab116e46e4162161238b71",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_setNetwork",
            "source_mapping": {
              "start": 2993,
              "length": 1140,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_setNetwork(uint8)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_setNetwork(uint8) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_setNetwork(uint8)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "6a7015444ddf266441dc7d33dcf6b5d6c550d73f30747262d959e7298d94fec2",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 5285,
              "length": 380,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string,uint256)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_query(uint256,string,string,uint256) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_query(uint256,string,string,uint256)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "6f78239649f465ee938014355116cc751940f47be305cba5227682499e2819f1",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 6364,
              "length": 352,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string,string)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_query(uint256,string,string,string) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_query(uint256,string,string,string)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "76cae6b4617bf837d03a7cbfa6721bd925b8b5ce6ee4380e9e77e50a14248d3e",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "query_withGasLimit",
            "source_mapping": {
              "start": 1365,
              "length": 124,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "OraclizeI",
                "source_mapping": {
                  "start": 1210,
                  "length": 864,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "query_withGasLimit(uint256,string,string,uint256)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function OraclizeI.query_withGasLimit(uint256,string,string,uint256) () is not in mixedCase\n",
        "markdown": "Function [OraclizeI.query_withGasLimit(uint256,string,string,uint256)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "76f8bb2829d7132eb11f5b0132b332152a63a76c64cbe7b4ebce8eb15341fed0",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 8783,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strCompare",
                "source_mapping": {
                  "start": 8763,
                  "length": 547,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strCompare(string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strCompare(string,string)._a () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strCompare(string,string)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "7c3aae1671f76dcdfd21f3a38d40994536117979a5756e1689676f223337d350",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 5670,
              "length": 356,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string,uint256)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_query(string,string,uint256) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_query(string,string,uint256)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "88daeed5c2be5e554d5fceece5daeb6dce6cbe53eba64f6fc4a9b78df5938482",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 8185,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "parseAddr",
                "source_mapping": {
                  "start": 8166,
                  "length": 590,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "parseAddr(string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.parseAddr(string)._a () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.parseAddr(string)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "88e01c1e054b5490854c09029663704da156e5a3de882a95ddf5d0741e963d37",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_b",
            "source_mapping": {
              "start": 10257,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 10227,
                  "length": 817,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string,string,string)._b () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string,string,string)._b]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "8ace4331b3043dcc6e28044be3541f13ca8f8c4e523e055236484e2f5bb2a614",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "query2_withGasLimit",
            "source_mapping": {
              "start": 1610,
              "length": 140,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "OraclizeI",
                "source_mapping": {
                  "start": 1210,
                  "length": 864,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "query2_withGasLimit(uint256,string,string,string,uint256)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function OraclizeI.query2_withGasLimit(uint256,string,string,string,uint256) () is not in mixedCase\n",
        "markdown": "Function [OraclizeI.query2_withGasLimit(uint256,string,string,string,uint256)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "8cab8387bbfe5ecbbdafb85915d067ccab5a541511da64de538c6a0dbf0b507b",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_c",
            "source_mapping": {
              "start": 10268,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 10227,
                  "length": 817,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string,string,string)._c () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string,string,string)._c]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "94c6eea5f0b161bd7e7c39e6a2da006de24c9ee4220b1d66c23235001f800d7c",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_d",
            "source_mapping": {
              "start": 11106,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 11054,
                  "length": 142,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string,string)._d () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string,string)._d]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "99ddd30a64dabc8213a5985828854bfe856140e3ad9b8cae48d379ccdd934f12",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_needle",
            "source_mapping": {
              "start": 9352,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "indexOf",
                "source_mapping": {
                  "start": 9317,
                  "length": 904,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "indexOf(string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.indexOf(string,string)._needle () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.indexOf(string,string)._needle]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "9d394dc0a86e7071c94eacba676655a265fb490bc0d7d035f22b041e4b8aac37",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "additional_fields": {
              "target": "contract",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Contract slot () is not in CapWords\n",
        "markdown": "Contract [slot]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "9fca8f2639249e5c362c9746a91b57d5b1eb360b1cc55f5d6d536545f0c6b96a",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_mainnet",
            "source_mapping": {
              "start": 2470,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable usingOraclize.networkID_mainnet () is not in mixedCase\n",
        "markdown": "Variable [usingOraclize.networkID_mainnet]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "a1c752d2b791ecf5d79750abcafeafee2b3ec17b74e7d2f8f568ba1fecf3b470",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 10246,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 10227,
                  "length": 817,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string,string,string)._a () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string,string,string)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "a79f70421fd937a6f1b016585faf8a3e7d1cf90ca2cb10f32e7cb4028828cfd5",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 11221,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 11202,
                  "length": 131,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string)._a () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "a841a03f172f3e2af7381284d79eeeb4a536a35b9e7d7ca85e9b4ce99d0d31c3",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_auto",
            "source_mapping": {
              "start": 2431,
              "length": 33,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable usingOraclize.networkID_auto () is not in mixedCase\n",
        "markdown": "Variable [usingOraclize.networkID_auto]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "ab19cbfcd051281f084ba84892ce605cc50efa56b3ce36f68a664e91e9fe76d0",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "gameResult",
            "source_mapping": {
              "start": 13626,
              "length": 32,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "slot",
                "source_mapping": {
                  "start": 12824,
                  "length": 5347,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "gameResult(uint256,address)"
            },
            "additional_fields": {
              "target": "event",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Event slot.gameResult(uint256,address) () is not in CapWords\n",
        "markdown": "Event [slot.gameResult(uint256,address)]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "afdee370d076a55030232d64259663dfae3b0d168ce6d9a8f1ad3ac1b2a853a2",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "__callback",
            "source_mapping": {
              "start": 4252,
              "length": 69,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "__callback(bytes32,string,bytes)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.__callback(bytes32,string,bytes) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.__callback(bytes32,string,bytes)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "bb9905f26f90e9da5aed3b7399cce373f717a230341ccb1c9fe6ed5b527dac10",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 4950,
              "length": 330,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_query(uint256,string,string) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_query(uint256,string,string)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "c0060136ce3d791852cebe29dbe67435cbfc99ec46c8bf938389d10317130152",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 17751,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "convertToInt",
                "source_mapping": {
                  "start": 17729,
                  "length": 440,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "convertToInt(string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter slot.convertToInt(string)._a () is not in mixedCase\n",
        "markdown": "Parameter [slot.convertToInt(string)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "c917ae569665c6be527a8970a315d3f6b80b98c8595701e1f6bcf5fa03a8d116",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_b",
            "source_mapping": {
              "start": 11369,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 11339,
                  "length": 120,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string)._b () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string)._b]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "c96709e63500a426719bf2ab31063a69d7fbbeffab63d11d0100a0e2b2102d15",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_getPrice",
            "source_mapping": {
              "start": 4331,
              "length": 134,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_getPrice(string)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_getPrice(string) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_getPrice(string)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "d1a5ca5593e23a8b4244aa42858608404c45af320b7024a591e76e8fb2e7acf9",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_morden",
            "source_mapping": {
              "start": 2554,
              "length": 35,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable usingOraclize.networkID_morden () is not in mixedCase\n",
        "markdown": "Variable [usingOraclize.networkID_morden]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "d3c1056f7858dbe1588a1f9c65191e580356dbeb3f4aeab47bfa15b3c49b7e9f",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_setConfig",
            "source_mapping": {
              "start": 7888,
              "length": 115,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_setConfig(bytes32)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_setConfig(bytes32) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_setConfig(bytes32)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "d5396d4d7170306a67d089d86b9c17cb5571405b7a1bd812e67cb444ab1a9080",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_d",
            "source_mapping": {
              "start": 10279,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 10227,
                  "length": 817,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string,string,string)._d () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string,string,string)._d]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "dd68cac6d3298d27c00d9a0a1f68811c5249075d7040b96eabb090bf6355d7fe",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_setProof",
            "source_mapping": {
              "start": 7628,
              "length": 114,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_setProof(bytes1)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_setProof(bytes1) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_setProof(bytes1)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "e7bf812b47645de4a94a597bdce9dcd1d2c54aab92fd8da20363f972cd450eff",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_b",
            "source_mapping": {
              "start": 11232,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 11202,
                  "length": 131,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string)._b () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string)._b]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "e890df7734f8e87a83d5a32145bcbe1a16dda0ea17b3822e4a175ce140c9677d",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "proofType_TLSNotary",
            "source_mapping": {
              "start": 2341,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable usingOraclize.proofType_TLSNotary () is not in mixedCase\n",
        "markdown": "Variable [usingOraclize.proofType_TLSNotary]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "ebe49ac9795d0f19c592850e2fb1abc132bbf1890eeffb09d6e9c78c64205e06",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "mortal",
            "source_mapping": {
              "start": 12646,
              "length": 175,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "additional_fields": {
              "target": "contract",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Contract mortal () is not in CapWords\n",
        "markdown": "Contract [mortal]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "ec6fd981aa3723a7397bb4a654ba23bb07bb6139fc284c36be7e9c9ad45c3105",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "proofType_NONE",
            "source_mapping": {
              "start": 2300,
              "length": 35,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable usingOraclize.proofType_NONE () is not in mixedCase\n",
        "markdown": "Variable [usingOraclize.proofType_NONE]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "ecf0ce275dc6a2ae89cbb24a52f261a4f10da5f6449bd95f869bf532541041ad",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "proofStorage_IPFS",
            "source_mapping": {
              "start": 2387,
              "length": 38,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable usingOraclize.proofStorage_IPFS () is not in mixedCase\n",
        "markdown": "Variable [usingOraclize.proofStorage_IPFS]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "f0eb69f7996b4db7aedd94e1bc049b96d4da7686f0048ab30e14165ea7a67325",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "__callback",
            "source_mapping": {
              "start": 15357,
              "length": 1013,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "slot",
                "source_mapping": {
                  "start": 12824,
                  "length": 5347,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "__callback(bytes32,string)"
            }
          },
          {
            "type": "node",
            "name": "! players[myid].send(bets[myid])",
            "source_mapping": {
              "start": 15617,
              "length": 31,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "__callback",
                "source_mapping": {
                  "start": 15357,
                  "length": 1013,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "__callback(bytes32,string)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "delete players[myid]",
            "source_mapping": {
              "start": 15712,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "__callback",
                "source_mapping": {
                  "start": 15357,
                  "length": 1013,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "__callback(bytes32,string)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "players"
            }
          },
          {
            "type": "node",
            "name": "gameResult(101,players[myid])",
            "source_mapping": {
              "start": 15669,
              "length": 29,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "__callback",
                "source_mapping": {
                  "start": 15357,
                  "length": 1013,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "__callback(bytes32,string)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          }
        ],
        "description": "Reentrancy in slot.__callback(bytes32,string) ():\n\tExternal calls:\n\t- ! players[myid].send(bets[myid]) ()\n\tState variables written after the call(s):\n\t- delete players[myid] ()\n\tEvent emitted after the call(s):\n\t- gameResult(101,players[myid]) ()\n",
        "markdown": "Reentrancy in [slot.__callback(bytes32,string)]():\n\tExternal calls:\n\t- [! players[myid].send(bets[myid])]()\n\tState variables written after the call(s):\n\t- [delete players[myid]]()\n\tEvent emitted after the call(s):\n\t- [gameResult(101,players[myid])]()\n",
        "first_markdown_element": "",
        "id": "383b6c09c2d3a5dff90085445e2a802e8f7a05111544b1c9a87cd7e759300c02",
        "check": "reentrancy-unlimited-gas",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "__callback",
            "source_mapping": {
              "start": 15357,
              "length": 1013,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "slot",
                "source_mapping": {
                  "start": 12824,
                  "length": 5347,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "__callback(bytes32,string)"
            }
          },
          {
            "type": "node",
            "name": "! players[myid].send(bets[myid] / 100 * prizes[i])",
            "source_mapping": {
              "start": 15929,
              "length": 45,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "__callback",
                "source_mapping": {
                  "start": 15357,
                  "length": 1013,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "__callback(bytes32,string)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "delete players[myid]",
            "source_mapping": {
              "start": 16150,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "__callback",
                "source_mapping": {
                  "start": 15357,
                  "length": 1013,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "__callback(bytes32,string)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "players"
            }
          },
          {
            "type": "node",
            "name": "gameResult(i,players[myid])",
            "source_mapping": {
              "start": 16104,
              "length": 28,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "__callback",
                "source_mapping": {
                  "start": 15357,
                  "length": 1013,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "__callback(bytes32,string)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          }
        ],
        "description": "Reentrancy in slot.__callback(bytes32,string) ():\n\tExternal calls:\n\t- ! players[myid].send(bets[myid] / 100 * prizes[i]) ()\n\tState variables written after the call(s):\n\t- delete players[myid] ()\n\tEvent emitted after the call(s):\n\t- gameResult(i,players[myid]) ()\n",
        "markdown": "Reentrancy in [slot.__callback(bytes32,string)]():\n\tExternal calls:\n\t- [! players[myid].send(bets[myid] / 100 * prizes[i])]()\n\tState variables written after the call(s):\n\t- [delete players[myid]]()\n\tEvent emitted after the call(s):\n\t- [gameResult(i,players[myid])]()\n",
        "first_markdown_element": "",
        "id": "7f2c33ede93d0bead77f09b790fb25f5434cb87d97f9940fea4a7f02fdc42073",
        "check": "reentrancy-unlimited-gas",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 6031,
              "length": 328,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string,string)"
            }
          },
          {
            "type": "node",
            "name": "price > 1000000000000000000 + tx.gasprice * 200000",
            "source_mapping": {
              "start": 6207,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "oraclize_query",
                "source_mapping": {
                  "start": 6031,
                  "length": 328,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "oraclize_query(string,string,string)"
                }
              }
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(string,string,string) () uses literals with too many digits:\n\t- price > 1000000000000000000 + tx.gasprice * 200000 ()\n",
        "markdown": "[usingOraclize.oraclize_query(string,string,string)]() uses literals with too many digits:\n\t- [price > 1000000000000000000 + tx.gasprice * 200000]()\n",
        "first_markdown_element": "",
        "id": "0bbe3689c023335dcdd6957f4fe8aaae2276f8c7e4217d92b71a080350ff0110",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 4950,
              "length": 330,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string)"
            }
          },
          {
            "type": "node",
            "name": "price > 1000000000000000000 + tx.gasprice * 200000",
            "source_mapping": {
              "start": 5128,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "oraclize_query",
                "source_mapping": {
                  "start": 4950,
                  "length": 330,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "oraclize_query(uint256,string,string)"
                }
              }
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(uint256,string,string) () uses literals with too many digits:\n\t- price > 1000000000000000000 + tx.gasprice * 200000 ()\n",
        "markdown": "[usingOraclize.oraclize_query(uint256,string,string)]() uses literals with too many digits:\n\t- [price > 1000000000000000000 + tx.gasprice * 200000]()\n",
        "first_markdown_element": "",
        "id": "6f1d34d280b7fa6cce7a08ce45c32c12d51421c655e3c5ea0962d94d65abf281",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 6364,
              "length": 352,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string,string)"
            }
          },
          {
            "type": "node",
            "name": "price > 1000000000000000000 + tx.gasprice * 200000",
            "source_mapping": {
              "start": 6556,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "oraclize_query",
                "source_mapping": {
                  "start": 6364,
                  "length": 352,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "oraclize_query(uint256,string,string,string)"
                }
              }
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(uint256,string,string,string) () uses literals with too many digits:\n\t- price > 1000000000000000000 + tx.gasprice * 200000 ()\n",
        "markdown": "[usingOraclize.oraclize_query(uint256,string,string,string)]() uses literals with too many digits:\n\t- [price > 1000000000000000000 + tx.gasprice * 200000]()\n",
        "first_markdown_element": "",
        "id": "801bcaa4ba72bbdfe7de41cd50f7335527828f82ee7bea6b66e7160b93f73b3d",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 4639,
              "length": 306,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string)"
            }
          },
          {
            "type": "node",
            "name": "price > 1000000000000000000 + tx.gasprice * 200000",
            "source_mapping": {
              "start": 4801,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "oraclize_query",
                "source_mapping": {
                  "start": 4639,
                  "length": 306,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2161,
                      "length": 10462,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "oraclize_query(string,string)"
                }
              }
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(string,string) () uses literals with too many digits:\n\t- price > 1000000000000000000 + tx.gasprice * 200000 ()\n",
        "markdown": "[usingOraclize.oraclize_query(string,string)]() uses literals with too many digits:\n\t- [price > 1000000000000000000 + tx.gasprice * 200000]()\n",
        "first_markdown_element": "",
        "id": "a7c2cda403487bb1cae2af93db016b373452de4ca4b18f164a0d7b38708b9ca4",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "slot",
            "source_mapping": {
              "start": 13734,
              "length": 694,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "slot",
                "source_mapping": {
                  "start": 12824,
                  "length": 5347,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "slot()"
            }
          },
          {
            "type": "node",
            "name": "query = random number between 1 and 1000000",
            "source_mapping": {
              "start": 14340,
              "length": 45,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "slot",
                "source_mapping": {
                  "start": 13734,
                  "length": 694,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "slot()"
                }
              }
            }
          }
        ],
        "description": "slot.slot() () uses literals with too many digits:\n\t- query = random number between 1 and 1000000 ()\n",
        "markdown": "[slot.slot()]() uses literals with too many digits:\n\t- [query = random number between 1 and 1000000]()\n",
        "first_markdown_element": "",
        "id": "c7e358cf0384684297421b937a5c5370662b82c95565ee78a2576db4cab246f8",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "fallback",
            "source_mapping": {
              "start": 14628,
              "length": 537,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "slot",
                "source_mapping": {
                  "start": 12824,
                  "length": 5347,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "fallback()"
            }
          },
          {
            "type": "node",
            "name": "msg.value < 100000000000000000 || msg.value > 1000000000000000000",
            "source_mapping": {
              "start": 14755,
              "length": 59,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "fallback",
                "source_mapping": {
                  "start": 14628,
                  "length": 537,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "fallback()"
                }
              }
            }
          }
        ],
        "description": "slot.fallback() () uses literals with too many digits:\n\t- msg.value < 100000000000000000 || msg.value > 1000000000000000000 ()\n",
        "markdown": "[slot.fallback()]() uses literals with too many digits:\n\t- [msg.value < 100000000000000000 || msg.value > 1000000000000000000]()\n",
        "first_markdown_element": "",
        "id": "d11994d8380a142ea330527422219358dc33ce268024fcb3ecf5168bb8a1210b",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_morden",
            "source_mapping": {
              "start": 2554,
              "length": 35,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "usingOraclize.networkID_morden () is never used in slot ()\n",
        "markdown": "[usingOraclize.networkID_morden]() is never used in [slot]()\n",
        "first_markdown_element": "",
        "id": "05dcce971cfb2a5a42af34eaf9358f1ad4ee0dad0a67172ee6662977f4757e80",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_mainnet",
            "source_mapping": {
              "start": 2470,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "usingOraclize.networkID_mainnet () is never used in slot ()\n",
        "markdown": "[usingOraclize.networkID_mainnet]() is never used in [slot]()\n",
        "first_markdown_element": "",
        "id": "2da3a74760a9f6251b5cf59ccf9fb2ce0ee83856eed812de94f304f49df75526",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "proofType_TLSNotary",
            "source_mapping": {
              "start": 2341,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "usingOraclize.proofType_TLSNotary () is never used in slot ()\n",
        "markdown": "[usingOraclize.proofType_TLSNotary]() is never used in [slot]()\n",
        "first_markdown_element": "",
        "id": "402f323cd6cdd0331281326cfab7f286305fb599e91cba886e37d057d6d68bad",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "proofType_NONE",
            "source_mapping": {
              "start": 2300,
              "length": 35,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "usingOraclize.proofType_NONE () is never used in slot ()\n",
        "markdown": "[usingOraclize.proofType_NONE]() is never used in [slot]()\n",
        "first_markdown_element": "",
        "id": "49a879d4207512cf9a6dfe6ea56b2d0fa5ce625839998d88a9a069ed754d2d1c",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_testnet",
            "source_mapping": {
              "start": 2512,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "usingOraclize.networkID_testnet () is never used in slot ()\n",
        "markdown": "[usingOraclize.networkID_testnet]() is never used in [slot]()\n",
        "first_markdown_element": "",
        "id": "5b01b874db0c8f81fd489e736939f74854e11a73eef329f66053b091e2d1cbec",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_consensys",
            "source_mapping": {
              "start": 2595,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "usingOraclize.networkID_consensys () is never used in slot ()\n",
        "markdown": "[usingOraclize.networkID_consensys]() is never used in [slot]()\n",
        "first_markdown_element": "",
        "id": "5b758b194f1316b57c62243efa3d51469d22cb08b3e142d6d570c029a0f71513",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "day",
            "source_mapping": {
              "start": 2190,
              "length": 28,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "usingOraclize.day () is never used in slot ()\n",
        "markdown": "[usingOraclize.day]() is never used in [slot]()\n",
        "first_markdown_element": "",
        "id": "8e5742db724a04a768dd2681e84a8c3b7909fbfd3dd3162fcd467e9e61210344",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "week",
            "source_mapping": {
              "start": 2224,
              "length": 31,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "usingOraclize.week () is never used in slot ()\n",
        "markdown": "[usingOraclize.week]() is never used in [slot]()\n",
        "first_markdown_element": "",
        "id": "e22905a42b975c1eca0dc6c8a2588a23eaf476ee0414f4e9affc7e6c57ad536a",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "proofStorage_IPFS",
            "source_mapping": {
              "start": 2387,
              "length": 38,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "usingOraclize.proofStorage_IPFS () is never used in slot ()\n",
        "markdown": "[usingOraclize.proofStorage_IPFS]() is never used in [slot]()\n",
        "first_markdown_element": "",
        "id": "e3208e3dad4d144d231701f8ccd8360b4de783178cff38d957c146441b4365d3",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "month",
            "source_mapping": {
              "start": 2261,
              "length": 33,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "slot",
            "source_mapping": {
              "start": 12824,
              "length": 5347,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "usingOraclize.month () is never used in slot ()\n",
        "markdown": "[usingOraclize.month]() is never used in [slot]()\n",
        "first_markdown_element": "",
        "id": "fceeaa5d2fbc06ce6da5c6b04b81234928b2ddaf7f8d3c1e12820336c28ce206",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "i < probabilities.length",
            "source_mapping": {
              "start": 15812,
              "length": 22,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "__callback",
                "source_mapping": {
                  "start": 15357,
                  "length": 1013,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "slot",
                    "source_mapping": {
                      "start": 12824,
                      "length": 5347,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "__callback(bytes32,string)"
                }
              }
            }
          }
        ],
        "description": "Loop condition i < probabilities.length () should use cached array length instead of referencing `length` member of the storage array.\n ",
        "markdown": "Loop condition [i < probabilities.length]() should use cached array length instead of referencing `length` member of the storage array.\n ",
        "first_markdown_element": "",
        "id": "5fb11e964bd64493b1a3116212e87f7c3f75e7f1d4f9c4b838a79aa850acb0b3",
        "check": "cache-array-length",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_mainnet",
            "source_mapping": {
              "start": 2470,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.networkID_mainnet () should be constant \n",
        "markdown": "[usingOraclize.networkID_mainnet]() should be constant \n",
        "first_markdown_element": "",
        "id": "1295c8e74108aa302a5995aa7979024aa89ec9a717e5f3b7b1c99b072bd19e0e",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "proofStorage_IPFS",
            "source_mapping": {
              "start": 2387,
              "length": 38,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.proofStorage_IPFS () should be constant \n",
        "markdown": "[usingOraclize.proofStorage_IPFS]() should be constant \n",
        "first_markdown_element": "",
        "id": "23c351e28291aae5fc02534ecb401deab14074e4107021e7f6b38b2c8ef122ae",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "week",
            "source_mapping": {
              "start": 2224,
              "length": 31,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.week () should be constant \n",
        "markdown": "[usingOraclize.week]() should be constant \n",
        "first_markdown_element": "",
        "id": "282b0634cdadfc7747123ec514eeb7caf0c0f63efb0a723cd98d3663f7850df4",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "day",
            "source_mapping": {
              "start": 2190,
              "length": 28,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.day () should be constant \n",
        "markdown": "[usingOraclize.day]() should be constant \n",
        "first_markdown_element": "",
        "id": "6b82a7d9c0a40a08e6e4871a717bfcbe2e5b01b764214921e0944a4f413081fa",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_consensys",
            "source_mapping": {
              "start": 2595,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.networkID_consensys () should be constant \n",
        "markdown": "[usingOraclize.networkID_consensys]() should be constant \n",
        "first_markdown_element": "",
        "id": "711a7a2d86087739d78a8a516109c67d1c61de4fea0f195574f91b9737b39d01",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_auto",
            "source_mapping": {
              "start": 2431,
              "length": 33,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.networkID_auto () should be constant \n",
        "markdown": "[usingOraclize.networkID_auto]() should be constant \n",
        "first_markdown_element": "",
        "id": "8836d8a69b190a37d4d84e90c1311ba8f574768b50cd6ab959fac6c7611481d1",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "month",
            "source_mapping": {
              "start": 2261,
              "length": 33,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.month () should be constant \n",
        "markdown": "[usingOraclize.month]() should be constant \n",
        "first_markdown_element": "",
        "id": "90ff36e0248e6a44e3b6239468125e20c133147576a09f8897cb145a1d9e594d",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "proofType_TLSNotary",
            "source_mapping": {
              "start": 2341,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.proofType_TLSNotary () should be constant \n",
        "markdown": "[usingOraclize.proofType_TLSNotary]() should be constant \n",
        "first_markdown_element": "",
        "id": "94426cf10179edb4b2487e6e14b432b61ef56fd85be70557aa3a94dc6b71a125",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "proofType_NONE",
            "source_mapping": {
              "start": 2300,
              "length": 35,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.proofType_NONE () should be constant \n",
        "markdown": "[usingOraclize.proofType_NONE]() should be constant \n",
        "first_markdown_element": "",
        "id": "94a11fbf538cb37121c80b299541faac5233b5f96139f0e49a17f0117972e7fa",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_morden",
            "source_mapping": {
              "start": 2554,
              "length": 35,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.networkID_morden () should be constant \n",
        "markdown": "[usingOraclize.networkID_morden]() should be constant \n",
        "first_markdown_element": "",
        "id": "98966137672e0a006be030f02a3bb7779624566e6e6e2c82b82362df5f96323c",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_testnet",
            "source_mapping": {
              "start": 2512,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.networkID_testnet () should be constant \n",
        "markdown": "[usingOraclize.networkID_testnet]() should be constant \n",
        "first_markdown_element": "",
        "id": "d45f51fa43198e778f111a7f4ab2ddc0eb537637be02b351089673ed8551f0be",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "getPrice",
            "source_mapping": {
              "start": 1822,
              "length": 77,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "OraclizeI",
                "source_mapping": {
                  "start": 1210,
                  "length": 864,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "getPrice(string,uint256)"
            }
          }
        ],
        "description": "getPrice(string,uint256) should be declared external:\n\t- OraclizeI.getPrice(string,uint256) ()\n",
        "markdown": "getPrice(string,uint256) should be declared external:\n\t- [OraclizeI.getPrice(string,uint256)]()\n",
        "first_markdown_element": "",
        "id": "0928ff40a2cd5c6bb7e7c4db46ce8527361a50c7bc66ebd8f2b364438c7287c0",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "setPrizes",
            "source_mapping": {
              "start": 17278,
              "length": 101,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "slot",
                "source_mapping": {
                  "start": 12824,
                  "length": 5347,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "setPrizes(uint32[])"
            }
          }
        ],
        "description": "setPrizes(uint32[]) should be declared external:\n\t- slot.setPrizes(uint32[]) ()\n",
        "markdown": "setPrizes(uint32[]) should be declared external:\n\t- [slot.setPrizes(uint32[])]()\n",
        "first_markdown_element": "",
        "id": "1485bf032fbc3172d744bcec10201a9d5c89a1caf27b3abda89e40d3a6977a1d",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "query2_withGasLimit",
            "source_mapping": {
              "start": 1610,
              "length": 140,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "OraclizeI",
                "source_mapping": {
                  "start": 1210,
                  "length": 864,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "query2_withGasLimit(uint256,string,string,string,uint256)"
            }
          }
        ],
        "description": "query2_withGasLimit(uint256,string,string,string,uint256) should be declared external:\n\t- OraclizeI.query2_withGasLimit(uint256,string,string,string,uint256) ()\n",
        "markdown": "query2_withGasLimit(uint256,string,string,string,uint256) should be declared external:\n\t- [OraclizeI.query2_withGasLimit(uint256,string,string,string,uint256)]()\n",
        "first_markdown_element": "",
        "id": "177b2e93f959a814233f43d5450222d4551c2259c8c7835b69114994d567cdfb",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "query2",
            "source_mapping": {
              "start": 1494,
              "length": 111,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "OraclizeI",
                "source_mapping": {
                  "start": 1210,
                  "length": 864,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "query2(uint256,string,string,string)"
            }
          }
        ],
        "description": "query2(uint256,string,string,string) should be declared external:\n\t- OraclizeI.query2(uint256,string,string,string) ()\n",
        "markdown": "query2(uint256,string,string,string) should be declared external:\n\t- [OraclizeI.query2(uint256,string,string,string)]()\n",
        "first_markdown_element": "",
        "id": "28c47db3b2fd58e0e00bf259b88b0e5c16563822a9cbba15f8538faff05dcb58",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "setOraclizeQuery",
            "source_mapping": {
              "start": 16644,
              "length": 112,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "slot",
                "source_mapping": {
                  "start": 12824,
                  "length": 5347,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "setOraclizeQuery(string)"
            }
          }
        ],
        "description": "setOraclizeQuery(string) should be declared external:\n\t- slot.setOraclizeQuery(string) ()\n",
        "markdown": "setOraclizeQuery(string) should be declared external:\n\t- [slot.setOraclizeQuery(string)]()\n",
        "first_markdown_element": "",
        "id": "3e3506890cc3fbbc8bfca349f799a9ff5e04ed312343267321c1c96dea8a12b9",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "__callback",
            "source_mapping": {
              "start": 15357,
              "length": 1013,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "slot",
                "source_mapping": {
                  "start": 12824,
                  "length": 5347,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "__callback(bytes32,string)"
            }
          },
          {
            "type": "function",
            "name": "__callback",
            "source_mapping": {
              "start": 4143,
              "length": 104,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2161,
                  "length": 10462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "__callback(bytes32,string)"
            }
          }
        ],
        "description": "__callback(bytes32,string) should be declared external:\n\t- slot.__callback(bytes32,string) ()\n\t- usingOraclize.__callback(bytes32,string) ()\n",
        "markdown": "__callback(bytes32,string) should be declared external:\n\t- [slot.__callback(bytes32,string)]()\n\t- [usingOraclize.__callback(bytes32,string)]()\n",
        "first_markdown_element": "",
        "id": "623bb5b08f78dfb8d67e3bded3e5c25c4c7c5101eb9a95e82fa58cb7d5b3cacc",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "getPrice",
            "source_mapping": {
              "start": 1755,
              "length": 62,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "OraclizeI",
                "source_mapping": {
                  "start": 1210,
                  "length": 864,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "getPrice(string)"
            }
          }
        ],
        "description": "getPrice(string) should be declared external:\n\t- OraclizeI.getPrice(string) ()\n",
        "markdown": "getPrice(string) should be declared external:\n\t- [OraclizeI.getPrice(string)]()\n",
        "first_markdown_element": "",
        "id": "7131bdae44c630bd349534321f508a4c6e6ee9be4b178ffe4370403a1e805c5f",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "query",
            "source_mapping": {
              "start": 1265,
              "length": 95,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "OraclizeI",
                "source_mapping": {
                  "start": 1210,
                  "length": 864,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "query(uint256,string,string)"
            }
          }
        ],
        "description": "query(uint256,string,string) should be declared external:\n\t- OraclizeI.query(uint256,string,string) ()\n",
        "markdown": "query(uint256,string,string) should be declared external:\n\t- [OraclizeI.query(uint256,string,string)]()\n",
        "first_markdown_element": "",
        "id": "7fbbe34ad8e213ffe5099a5bdf0c24b8a73edf078eda1e75416d510cc2f4fe2b",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "useCoupon",
            "source_mapping": {
              "start": 1904,
              "length": 35,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "OraclizeI",
                "source_mapping": {
                  "start": 1210,
                  "length": 864,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "useCoupon(string)"
            }
          }
        ],
        "description": "useCoupon(string) should be declared external:\n\t- OraclizeI.useCoupon(string) ()\n",
        "markdown": "useCoupon(string) should be declared external:\n\t- [OraclizeI.useCoupon(string)]()\n",
        "first_markdown_element": "",
        "id": "9d58ae755cfc2d61463ccac1e5542293b98a29ee026191cb1e013619244920a1",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "setProbabilities",
            "source_mapping": {
              "start": 17070,
              "length": 117,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "slot",
                "source_mapping": {
                  "start": 12824,
                  "length": 5347,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "setProbabilities(uint32[])"
            }
          }
        ],
        "description": "setProbabilities(uint32[]) should be declared external:\n\t- slot.setProbabilities(uint32[]) ()\n",
        "markdown": "setProbabilities(uint32[]) should be declared external:\n\t- [slot.setProbabilities(uint32[])]()\n",
        "first_markdown_element": "",
        "id": "c1be5a7dcdd70b6a045a6a2e3c0e1e5e8fdcace71f0e0537ab45431afe6c99fa",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "setOraclizeQueryType",
            "source_mapping": {
              "start": 16837,
              "length": 128,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "slot",
                "source_mapping": {
                  "start": 12824,
                  "length": 5347,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "setOraclizeQueryType(string)"
            }
          }
        ],
        "description": "setOraclizeQueryType(string) should be declared external:\n\t- slot.setOraclizeQueryType(string) ()\n",
        "markdown": "setOraclizeQueryType(string) should be declared external:\n\t- [slot.setOraclizeQueryType(string)]()\n",
        "first_markdown_element": "",
        "id": "ec42b91eb838f51efe2b7e0ef626e65875e9c4037abe12f685cd743f4eaa76e7",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "query_withGasLimit",
            "source_mapping": {
              "start": 1365,
              "length": 124,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "OraclizeI",
                "source_mapping": {
                  "start": 1210,
                  "length": 864,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "query_withGasLimit(uint256,string,string,uint256)"
            }
          }
        ],
        "description": "query_withGasLimit(uint256,string,string,uint256) should be declared external:\n\t- OraclizeI.query_withGasLimit(uint256,string,string,uint256) ()\n",
        "markdown": "query_withGasLimit(uint256,string,string,uint256) should be declared external:\n\t- [OraclizeI.query_withGasLimit(uint256,string,string,uint256)]()\n",
        "first_markdown_element": "",
        "id": "fdc72c39990c24160abb0ce91adcccfa1954d5d26c36d1ae059fbe0d5d8b525a",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      }
    ]
  }
}