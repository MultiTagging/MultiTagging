{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "function",
            "name": "changeAuthorizer",
            "source_mapping": {
              "start": 472,
              "length": 100,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "IDCaseC",
                "source_mapping": {
                  "start": 25,
                  "length": 983,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "changeAuthorizer(address)"
            }
          },
          {
            "type": "node",
            "name": "authorizer = _authorizer",
            "source_mapping": {
              "start": 541,
              "length": 24,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeAuthorizer",
                "source_mapping": {
                  "start": 472,
                  "length": 100,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "IDCaseC",
                    "source_mapping": {
                      "start": 25,
                      "length": 983,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeAuthorizer(address)"
                }
              }
            }
          }
        ],
        "description": "IDCaseC.changeAuthorizer(address) () should emit an event for: \n\t- authorizer = _authorizer () \n",
        "markdown": "[IDCaseC.changeAuthorizer(address)]() should emit an event for: \n\t- [authorizer = _authorizer]() \n",
        "first_markdown_element": "",
        "id": "99709c15e938b47ac661e748293a7ab717ed592e85d126cd81beb2d868531a56",
        "check": "events-access",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_authorizer",
            "source_mapping": {
              "start": 498,
              "length": 19,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeAuthorizer",
                "source_mapping": {
                  "start": 472,
                  "length": 100,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "IDCaseC",
                    "source_mapping": {
                      "start": 25,
                      "length": 983,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeAuthorizer(address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "authorizer = _authorizer",
            "source_mapping": {
              "start": 541,
              "length": 24,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeAuthorizer",
                "source_mapping": {
                  "start": 472,
                  "length": 100,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "IDCaseC",
                    "source_mapping": {
                      "start": 25,
                      "length": 983,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeAuthorizer(address)"
                }
              }
            }
          }
        ],
        "description": "IDCaseC.changeAuthorizer(address)._authorizer () lacks a zero-check on :\n\t\t- authorizer = _authorizer ()\n",
        "markdown": "[IDCaseC.changeAuthorizer(address)._authorizer]() lacks a zero-check on :\n\t\t- [authorizer = _authorizer]()\n",
        "first_markdown_element": "",
        "id": "cdcb9f96251a72c9e93b9e9043d79a669ea627141a412284242ebde243728bcf",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "onlyAuthorizer",
            "source_mapping": {
              "start": 313,
              "length": 86,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "IDCaseC",
                "source_mapping": {
                  "start": 25,
                  "length": 983,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "onlyAuthorizer()"
            }
          }
        ],
        "description": "Modifier IDCaseC.onlyAuthorizer() () does not always execute _; or revert",
        "markdown": "Modifier [IDCaseC.onlyAuthorizer()]() does not always execute _; or revert",
        "first_markdown_element": "",
        "id": "258745767e3ddf78f1b17782bcffa03cff822b23d218c6b6243780effd5f0bdb",
        "check": "incorrect-modifier",
        "impact": "Low",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "onlyOwner",
            "source_mapping": {
              "start": 232,
              "length": 76,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "IDCaseC",
                "source_mapping": {
                  "start": 25,
                  "length": 983,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "onlyOwner()"
            }
          }
        ],
        "description": "Modifier IDCaseC.onlyOwner() () does not always execute _; or revert",
        "markdown": "Modifier [IDCaseC.onlyOwner()]() does not always execute _; or revert",
        "first_markdown_element": "",
        "id": "e5390ddd0fa57ca65676fd02f462257d601c41aac42d673cfddc1d7a0cb4876d",
        "check": "incorrect-modifier",
        "impact": "Low",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "sha3()(message) == hash",
            "source_mapping": {
              "start": 836,
              "length": 21,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "proveKnowledge",
                "source_mapping": {
                  "start": 769,
                  "length": 165,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "IDCaseC",
                    "source_mapping": {
                      "start": 25,
                      "length": 983,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "proveKnowledge(bytes)"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected sha3()(message) == hash ():\n\t- Usage of \"sha3()\" should be replaced with \"keccak256()\"\n",
        "markdown": "Deprecated standard detected [sha3()(message) == hash]():\n\t- Usage of \"sha3()\" should be replaced with \"keccak256()\"\n",
        "first_markdown_element": "",
        "id": "00a7d7445080d483a648295176ce83145cd3a5411af3807d26d6f4e59377c2af",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "suicide(address)(owner)",
            "source_mapping": {
              "start": 982,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "kill",
                "source_mapping": {
                  "start": 944,
                  "length": 62,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "IDCaseC",
                    "source_mapping": {
                      "start": 25,
                      "length": 983,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "kill()"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected suicide(address)(owner) ():\n\t- Usage of \"suicide()\" should be replaced with \"selfdestruct()\"\n",
        "markdown": "Deprecated standard detected [suicide(address)(owner)]():\n\t- Usage of \"suicide()\" should be replaced with \"selfdestruct()\"\n",
        "first_markdown_element": "",
        "id": "af38f120e2d6ce3d7567404eb936f0124e2e9b2e954f0ddc56088aa4c884e377",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 752,
              "length": 5,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "requestKnowledge",
                "source_mapping": {
                  "start": 582,
                  "length": 182,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "IDCaseC",
                    "source_mapping": {
                      "start": 25,
                      "length": 983,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "requestKnowledge(bytes32)"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected THROW ():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "markdown": "Deprecated standard detected [THROW]():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "first_markdown_element": "",
        "id": "f5556cf1c70b64b9e4b1fc32044dd970b5f2c8b9fc21b7971fda01971033f2d5",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "pragma",
            "name": "^0.4.2",
            "source_mapping": {
              "start": 0,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "directive": [
                "solidity",
                "^",
                "0.4",
                ".2"
              ]
            }
          }
        ],
        "description": "Pragma version^0.4.2 () allows old versions\n",
        "markdown": "Pragma version[^0.4.2]() allows old versions\n",
        "first_markdown_element": "",
        "id": "684a56cd27e54ff2efdccacdc31c1f9807e03d1014a0a136c00240d60a2f3a67",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [],
        "description": "solc-0.4.2 is not recommended for deployment\n",
        "markdown": "solc-0.4.2 is not recommended for deployment\n",
        "first_markdown_element": "",
        "id": "707dbfcfdf84b6816d84949bbe947a3701cd8aa49952e3db1879e122f1f0990d",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_hash",
            "source_mapping": {
              "start": 608,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "requestKnowledge",
                "source_mapping": {
                  "start": 582,
                  "length": 182,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "IDCaseC",
                    "source_mapping": {
                      "start": 25,
                      "length": 983,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "requestKnowledge(bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter IDCaseC.requestKnowledge(bytes32)._hash () is not in mixedCase\n",
        "markdown": "Parameter [IDCaseC.requestKnowledge(bytes32)._hash]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "0d7968250031d793fac4631e59b842da30e392b23451e3d3e797f4ab4cff2f33",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_authorizer",
            "source_mapping": {
              "start": 498,
              "length": 19,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeAuthorizer",
                "source_mapping": {
                  "start": 472,
                  "length": 100,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "IDCaseC",
                    "source_mapping": {
                      "start": 25,
                      "length": 983,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeAuthorizer(address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter IDCaseC.changeAuthorizer(address)._authorizer () is not in mixedCase\n",
        "markdown": "Parameter [IDCaseC.changeAuthorizer(address)._authorizer]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "c08667b89bebdf95b2ef2b852b48bf3516c555a8171d7d9aa8988c444bc41be8",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "adr",
            "source_mapping": {
              "start": 210,
              "length": 11,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "IDCaseC",
                "source_mapping": {
                  "start": 25,
                  "length": 983,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "IDCaseC",
            "source_mapping": {
              "start": 25,
              "length": 983,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "IDCaseC.adr () is never used in IDCaseC ()\n",
        "markdown": "[IDCaseC.adr]() is never used in [IDCaseC]()\n",
        "first_markdown_element": "",
        "id": "26c2eb0a859598d54ad28b325fd92f8d9c60251a7cf2a35e8be3586a2413a20e",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "adr",
            "source_mapping": {
              "start": 210,
              "length": 11,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "IDCaseC",
                "source_mapping": {
                  "start": 25,
                  "length": 983,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "IDCaseC.adr () should be constant \n",
        "markdown": "[IDCaseC.adr]() should be constant \n",
        "first_markdown_element": "",
        "id": "b5a61611f45bf5cf03df01d04c59ad41a944273b34d7c9eb042c84e9039a6e91",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "proveKnowledge",
            "source_mapping": {
              "start": 769,
              "length": 165,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "IDCaseC",
                "source_mapping": {
                  "start": 25,
                  "length": 983,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "proveKnowledge(bytes)"
            }
          }
        ],
        "description": "proveKnowledge(bytes) should be declared external:\n\t- IDCaseC.proveKnowledge(bytes) ()\n",
        "markdown": "proveKnowledge(bytes) should be declared external:\n\t- [IDCaseC.proveKnowledge(bytes)]()\n",
        "first_markdown_element": "",
        "id": "87e191300708bc8a96229582eb19082e304fc90dc452d431ea81f18b019f407d",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      }
    ]
  }
}