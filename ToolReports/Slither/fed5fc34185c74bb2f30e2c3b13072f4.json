{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "contract",
            "name": "DocumentRegistry",
            "source_mapping": {
              "start": 321,
              "length": 3628,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "node",
            "name": "owned[_owner].push(_hash)",
            "source_mapping": {
              "start": 3849,
              "length": 25,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "addToOwner",
                "source_mapping": {
                  "start": 3779,
                  "length": 163,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DocumentRegistry",
                    "source_mapping": {
                      "start": 321,
                      "length": 3628,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "addToOwner(address,bytes32)"
                }
              }
            }
          }
        ],
        "description": "DocumentRegistry () contract sets array length with a user-controlled value:\n\t- owned[_owner].push(_hash) ()\n",
        "markdown": "[DocumentRegistry]() contract sets array length with a user-controlled value:\n\t- [owned[_owner].push(_hash)]()\n",
        "first_markdown_element": "",
        "id": "78273f739b4370580063277411a21f47b3a2857bcb0619a6bf63716db52cefb6",
        "check": "controlled-array-length",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "DocumentRegistry",
            "source_mapping": {
              "start": 321,
              "length": 3628,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "node",
            "name": "documents[_hash].attributes.push(_name)",
            "source_mapping": {
              "start": 1829,
              "length": 39,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setData",
                "source_mapping": {
                  "start": 1587,
                  "length": 411,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DocumentRegistry",
                    "source_mapping": {
                      "start": 321,
                      "length": 3628,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setData(bytes32,string,string)"
                }
              }
            }
          }
        ],
        "description": "DocumentRegistry () contract sets array length with a user-controlled value:\n\t- documents[_hash].attributes.push(_name) ()\n",
        "markdown": "[DocumentRegistry]() contract sets array length with a user-controlled value:\n\t- [documents[_hash].attributes.push(_name)]()\n",
        "first_markdown_element": "",
        "id": "8c70b65fec4a41d299dfe0d5158ad6ae42564f16148b0e992ac88fe9e9d361e4",
        "check": "controlled-array-length",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "documents",
            "source_mapping": {
              "start": 2978,
              "length": 19,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "getOwned",
                "source_mapping": {
                  "start": 2926,
                  "length": 109,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DocumentRegistry",
                    "source_mapping": {
                      "start": 321,
                      "length": 3628,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "getOwned(address)"
                }
              }
            }
          },
          {
            "type": "variable",
            "name": "documents",
            "source_mapping": {
              "start": 1140,
              "length": 45,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "DocumentRegistry",
                "source_mapping": {
                  "start": 321,
                  "length": 3628,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "DocumentRegistry.getOwned(address).documents () shadows:\n\t- DocumentRegistry.documents () (state variable)\n",
        "markdown": "[DocumentRegistry.getOwned(address).documents]() shadows:\n\t- [DocumentRegistry.documents]() (state variable)\n",
        "first_markdown_element": "",
        "id": "aa674ec5f8a1903d6f5d3ef4ce1998493fdc26151dc10864d908fb7c5119e768",
        "check": "shadowing-local",
        "impact": "Low",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 1210,
              "length": 5,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "fallback",
                "source_mapping": {
                  "start": 1196,
                  "length": 22,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DocumentRegistry",
                    "source_mapping": {
                      "start": 321,
                      "length": 3628,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "fallback()"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected THROW ():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "markdown": "Deprecated standard detected [THROW]():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "first_markdown_element": "",
        "id": "f5556cf1c70b64b9e4b1fc32044dd970b5f2c8b9fc21b7971fda01971033f2d5",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [],
        "description": "solc-0.4.0 is not recommended for deployment\n",
        "markdown": "solc-0.4.0 is not recommended for deployment\n",
        "first_markdown_element": "",
        "id": "e676d9e89e623fa7675baecce41eb7ab21d1d8ec9e856bc5b047e6cfb50b37ca",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "pragma",
            "name": "^0.4.0",
            "source_mapping": {
              "start": 0,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "directive": [
                "solidity",
                "^",
                "0.4",
                ".0"
              ]
            }
          }
        ],
        "description": "Pragma version^0.4.0 () allows old versions\n",
        "markdown": "Pragma version[^0.4.0]() allows old versions\n",
        "first_markdown_element": "",
        "id": "f4d0f96f990510a571c7ae954763f848d217d6f86fa5953d251f28f5221969e2",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_hash",
            "source_mapping": {
              "start": 3071,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "getAttributeData",
                "source_mapping": {
                  "start": 3045,
                  "length": 196,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DocumentRegistry",
                    "source_mapping": {
                      "start": 321,
                      "length": 3628,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "getAttributeData(bytes32,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DocumentRegistry.getAttributeData(bytes32,string)._hash () is not in mixedCase\n",
        "markdown": "Parameter [DocumentRegistry.getAttributeData(bytes32,string)._hash]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "014fef28a7f561b4632102d9ee66e8e23ea85fc63894d15c6281cd2d3248d5af",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_hash",
            "source_mapping": {
              "start": 3277,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "getAttributeName",
                "source_mapping": {
                  "start": 3251,
                  "length": 132,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DocumentRegistry",
                    "source_mapping": {
                      "start": 321,
                      "length": 3628,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "getAttributeName(bytes32,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DocumentRegistry.getAttributeName(bytes32,uint256)._hash () is not in mixedCase\n",
        "markdown": "Parameter [DocumentRegistry.getAttributeName(bytes32,uint256)._hash]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "14646eff992c80a3cfdce49c1b00c825600951f3a8b44234865cc4469542f88a",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_name",
            "source_mapping": {
              "start": 1620,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setData",
                "source_mapping": {
                  "start": 1587,
                  "length": 411,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DocumentRegistry",
                    "source_mapping": {
                      "start": 321,
                      "length": 3628,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setData(bytes32,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DocumentRegistry.setData(bytes32,string,string)._name () is not in mixedCase\n",
        "markdown": "Parameter [DocumentRegistry.setData(bytes32,string,string)._name]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "183764257f8f118af1dd83c4c05ac6799907418794358f54439ab31bd8c1297e",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_owner",
            "source_mapping": {
              "start": 1356,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "registerTo",
                "source_mapping": {
                  "start": 1336,
                  "length": 245,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DocumentRegistry",
                    "source_mapping": {
                      "start": 321,
                      "length": 3628,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "registerTo(address,bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DocumentRegistry.registerTo(address,bytes32)._owner () is not in mixedCase\n",
        "markdown": "Parameter [DocumentRegistry.registerTo(address,bytes32)._owner]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "2523b9d668f3f8867b93f750ed2e1645d82916e12a99484863460b34245e3563",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_newOwner",
            "source_mapping": {
              "start": 2504,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "transfer",
                "source_mapping": {
                  "start": 2471,
                  "length": 275,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DocumentRegistry",
                    "source_mapping": {
                      "start": 321,
                      "length": 3628,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "transfer(bytes32,address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DocumentRegistry.transfer(bytes32,address)._newOwner () is not in mixedCase\n",
        "markdown": "Parameter [DocumentRegistry.transfer(bytes32,address)._newOwner]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "2e05a73a3b9876d34a71d0ab00333bc04c7bfafce355247631068613d00147ea",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_hash",
            "source_mapping": {
              "start": 2027,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "clearData",
                "source_mapping": {
                  "start": 2008,
                  "length": 457,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DocumentRegistry",
                    "source_mapping": {
                      "start": 321,
                      "length": 3628,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "clearData(bytes32,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DocumentRegistry.clearData(bytes32,string)._hash () is not in mixedCase\n",
        "markdown": "Parameter [DocumentRegistry.clearData(bytes32,string)._hash]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "38fef401ea351f2b998a2f7f7d997128dbd71ff71d645320b3b7e89c36f83f5f",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_hash",
            "source_mapping": {
              "start": 3419,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "getTotalAttributes",
                "source_mapping": {
                  "start": 3391,
                  "length": 124,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DocumentRegistry",
                    "source_mapping": {
                      "start": 321,
                      "length": 3628,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "getTotalAttributes(bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DocumentRegistry.getTotalAttributes(bytes32)._hash () is not in mixedCase\n",
        "markdown": "Parameter [DocumentRegistry.getTotalAttributes(bytes32)._hash]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "4e0403b6d44fa3ab10c96c7e0525c5f5606b01cbbd4f43810a1dc387af19693e",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_name",
            "source_mapping": {
              "start": 3086,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "getAttributeData",
                "source_mapping": {
                  "start": 3045,
                  "length": 196,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DocumentRegistry",
                    "source_mapping": {
                      "start": 321,
                      "length": 3628,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "getAttributeData(bytes32,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DocumentRegistry.getAttributeData(bytes32,string)._name () is not in mixedCase\n",
        "markdown": "Parameter [DocumentRegistry.getAttributeData(bytes32,string)._name]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "54296207808928194ce12285bec49dc0c7fdf14a8761250b6f156521bc855879",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_owner",
            "source_mapping": {
              "start": 3799,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "addToOwner",
                "source_mapping": {
                  "start": 3779,
                  "length": 163,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DocumentRegistry",
                    "source_mapping": {
                      "start": 321,
                      "length": 3628,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "addToOwner(address,bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DocumentRegistry.addToOwner(address,bytes32)._owner () is not in mixedCase\n",
        "markdown": "Parameter [DocumentRegistry.addToOwner(address,bytes32)._owner]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "5dff5e300179c59218b42b94d87060ac92f4991eeb899b26ce21e4d1bbd06545",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "only_owner",
            "source_mapping": {
              "start": 822,
              "length": 89,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "DocumentRegistry",
                "source_mapping": {
                  "start": 321,
                  "length": 3628,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "only_owner(bytes32)"
            },
            "additional_fields": {
              "target": "modifier",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Modifier DocumentRegistry.only_owner(bytes32) () is not in mixedCase\n",
        "markdown": "Modifier [DocumentRegistry.only_owner(bytes32)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "5f71a4a9ff470ca38e48aa6696aec67f2fc28027d43b184cc37883f6c8b94787",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_hash",
            "source_mapping": {
              "start": 1605,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setData",
                "source_mapping": {
                  "start": 1587,
                  "length": 411,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DocumentRegistry",
                    "source_mapping": {
                      "start": 321,
                      "length": 3628,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setData(bytes32,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DocumentRegistry.setData(bytes32,string,string)._hash () is not in mixedCase\n",
        "markdown": "Parameter [DocumentRegistry.setData(bytes32,string,string)._hash]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "6c271bb2032f200582865acd0726d0d65c86f7c21f53531dec696d1bc8cd182b",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "not_owned",
            "source_mapping": {
              "start": 1001,
              "length": 81,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "DocumentRegistry",
                "source_mapping": {
                  "start": 321,
                  "length": 3628,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "not_owned(bytes32)"
            },
            "additional_fields": {
              "target": "modifier",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Modifier DocumentRegistry.not_owned(bytes32) () is not in mixedCase\n",
        "markdown": "Modifier [DocumentRegistry.not_owned(bytes32)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "76e7159389c1040ee08653f2196a338dd4843f97de2e041bf9ce1a3d7cda9544",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_data",
            "source_mapping": {
              "start": 1634,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setData",
                "source_mapping": {
                  "start": 1587,
                  "length": 411,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DocumentRegistry",
                    "source_mapping": {
                      "start": 321,
                      "length": 3628,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setData(bytes32,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DocumentRegistry.setData(bytes32,string,string)._data () is not in mixedCase\n",
        "markdown": "Parameter [DocumentRegistry.setData(bytes32,string,string)._data]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "85da89ccd6506394ba984b0ca77ec6c81dcbdd2f75e76d3f7d2cac5e627584b7",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "is_owned",
            "source_mapping": {
              "start": 916,
              "length": 80,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "DocumentRegistry",
                "source_mapping": {
                  "start": 321,
                  "length": 3628,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "is_owned(bytes32)"
            },
            "additional_fields": {
              "target": "modifier",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Modifier DocumentRegistry.is_owned(bytes32) () is not in mixedCase\n",
        "markdown": "Modifier [DocumentRegistry.is_owned(bytes32)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "9b6ff9f8efc553fe1fed822800406040ba20c9a4e6d3bd62b66db972d823af66",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_hash",
            "source_mapping": {
              "start": 1246,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "register",
                "source_mapping": {
                  "start": 1228,
                  "length": 94,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DocumentRegistry",
                    "source_mapping": {
                      "start": 321,
                      "length": 3628,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "register(bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DocumentRegistry.register(bytes32)._hash () is not in mixedCase\n",
        "markdown": "Parameter [DocumentRegistry.register(bytes32)._hash]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "9c61d0d1fbd6602e56251730c7223f7ee746fcbade30ad0c25c3a5a53e20bddf",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_hash",
            "source_mapping": {
              "start": 3815,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "addToOwner",
                "source_mapping": {
                  "start": 3779,
                  "length": 163,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DocumentRegistry",
                    "source_mapping": {
                      "start": 321,
                      "length": 3628,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "addToOwner(address,bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DocumentRegistry.addToOwner(address,bytes32)._hash () is not in mixedCase\n",
        "markdown": "Parameter [DocumentRegistry.addToOwner(address,bytes32)._hash]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "a4c43c95053b83aead5ee40651c10021c4da261af834c3b252c492e197250367",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_owner",
            "source_mapping": {
              "start": 3546,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "removeOwned",
                "source_mapping": {
                  "start": 3525,
                  "length": 244,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DocumentRegistry",
                    "source_mapping": {
                      "start": 321,
                      "length": 3628,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "removeOwned(address,bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DocumentRegistry.removeOwned(address,bytes32)._owner () is not in mixedCase\n",
        "markdown": "Parameter [DocumentRegistry.removeOwned(address,bytes32)._owner]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "c0520dfc2c35d1fe9939bba5c3ebda56391f0355a7e520b55d0712c1ad0082f2",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_hash",
            "source_mapping": {
              "start": 2772,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "donate",
                "source_mapping": {
                  "start": 2756,
                  "length": 160,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DocumentRegistry",
                    "source_mapping": {
                      "start": 321,
                      "length": 3628,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "donate(bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DocumentRegistry.donate(bytes32)._hash () is not in mixedCase\n",
        "markdown": "Parameter [DocumentRegistry.donate(bytes32)._hash]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "c45ecd45966a074262a2da5a043b9ffa7f145c46dcb6fa830cb130f75d53eac0",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_hash",
            "source_mapping": {
              "start": 3561,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "removeOwned",
                "source_mapping": {
                  "start": 3525,
                  "length": 244,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DocumentRegistry",
                    "source_mapping": {
                      "start": 321,
                      "length": 3628,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "removeOwned(address,bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DocumentRegistry.removeOwned(address,bytes32)._hash () is not in mixedCase\n",
        "markdown": "Parameter [DocumentRegistry.removeOwned(address,bytes32)._hash]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "d857cf764af2880efb7f231228a963693c94af87fb751ff7e9e73ec75cf9d195",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_owner",
            "source_mapping": {
              "start": 2944,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "getOwned",
                "source_mapping": {
                  "start": 2926,
                  "length": 109,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DocumentRegistry",
                    "source_mapping": {
                      "start": 321,
                      "length": 3628,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "getOwned(address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DocumentRegistry.getOwned(address)._owner () is not in mixedCase\n",
        "markdown": "Parameter [DocumentRegistry.getOwned(address)._owner]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "e0256b7e3bd80e93e13e570c52f2ad6c486641bc572e4fa45e490151bf96dd48",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_hash",
            "source_mapping": {
              "start": 2489,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "transfer",
                "source_mapping": {
                  "start": 2471,
                  "length": 275,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DocumentRegistry",
                    "source_mapping": {
                      "start": 321,
                      "length": 3628,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "transfer(bytes32,address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DocumentRegistry.transfer(bytes32,address)._hash () is not in mixedCase\n",
        "markdown": "Parameter [DocumentRegistry.transfer(bytes32,address)._hash]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "e79de3270b82c8dfd2a0ac5a2ba333822651f368be5e963261daf16b40dd6425",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_name",
            "source_mapping": {
              "start": 2042,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "clearData",
                "source_mapping": {
                  "start": 2008,
                  "length": 457,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DocumentRegistry",
                    "source_mapping": {
                      "start": 321,
                      "length": 3628,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "clearData(bytes32,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DocumentRegistry.clearData(bytes32,string)._name () is not in mixedCase\n",
        "markdown": "Parameter [DocumentRegistry.clearData(bytes32,string)._name]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "e96c48d266c9163ffbd2c1a05fdfe613330c9841ba58eb09f7adc622fea8c622",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_hash",
            "source_mapping": {
              "start": 1372,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "registerTo",
                "source_mapping": {
                  "start": 1336,
                  "length": 245,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DocumentRegistry",
                    "source_mapping": {
                      "start": 321,
                      "length": 3628,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "registerTo(address,bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DocumentRegistry.registerTo(address,bytes32)._hash () is not in mixedCase\n",
        "markdown": "Parameter [DocumentRegistry.registerTo(address,bytes32)._hash]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "ebc664dbd1334236153464ca5173c1996c4002c36128c64151c7749ed039b82a",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "donate",
            "source_mapping": {
              "start": 2756,
              "length": 160,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "DocumentRegistry",
                "source_mapping": {
                  "start": 321,
                  "length": 3628,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "donate(bytes32)"
            }
          },
          {
            "type": "node",
            "name": "documents[_hash].owner.send(msg.value)",
            "source_mapping": {
              "start": 2823,
              "length": 38,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "donate",
                "source_mapping": {
                  "start": 2756,
                  "length": 160,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DocumentRegistry",
                    "source_mapping": {
                      "start": 321,
                      "length": 3628,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "donate(bytes32)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "Donate(_hash,msg.sender,msg.value)",
            "source_mapping": {
              "start": 2875,
              "length": 34,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "donate",
                "source_mapping": {
                  "start": 2756,
                  "length": 160,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DocumentRegistry",
                    "source_mapping": {
                      "start": 321,
                      "length": 3628,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "donate(bytes32)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          }
        ],
        "description": "Reentrancy in DocumentRegistry.donate(bytes32) ():\n\tExternal calls:\n\t- documents[_hash].owner.send(msg.value) ()\n\tEvent emitted after the call(s):\n\t- Donate(_hash,msg.sender,msg.value) ()\n",
        "markdown": "Reentrancy in [DocumentRegistry.donate(bytes32)]():\n\tExternal calls:\n\t- [documents[_hash].owner.send(msg.value)]()\n\tEvent emitted after the call(s):\n\t- [Donate(_hash,msg.sender,msg.value)]()\n",
        "first_markdown_element": "",
        "id": "a4180f2b6de0d5b619e7575ba3e980dd5e9476da6158f02c0156069d93257f5e",
        "check": "reentrancy-unlimited-gas",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "clearData",
            "source_mapping": {
              "start": 2008,
              "length": 457,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "DocumentRegistry",
                "source_mapping": {
                  "start": 321,
                  "length": 3628,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "clearData(bytes32,string)"
            }
          }
        ],
        "description": "clearData(bytes32,string) should be declared external:\n\t- DocumentRegistry.clearData(bytes32,string) ()\n",
        "markdown": "clearData(bytes32,string) should be declared external:\n\t- [DocumentRegistry.clearData(bytes32,string)]()\n",
        "first_markdown_element": "",
        "id": "0a6b2aa4567e67f80530ca933597f4009e1d66e562dd464b83bcb3e89f3f64d6",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "setData",
            "source_mapping": {
              "start": 1587,
              "length": 411,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "DocumentRegistry",
                "source_mapping": {
                  "start": 321,
                  "length": 3628,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "setData(bytes32,string,string)"
            }
          }
        ],
        "description": "setData(bytes32,string,string) should be declared external:\n\t- DocumentRegistry.setData(bytes32,string,string) ()\n",
        "markdown": "setData(bytes32,string,string) should be declared external:\n\t- [DocumentRegistry.setData(bytes32,string,string)]()\n",
        "first_markdown_element": "",
        "id": "2d7d7615b98755fea398c6ebd77010bbeacd4d02ca49ef63951ffc3c747c4b72",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "getAttributeData",
            "source_mapping": {
              "start": 3045,
              "length": 196,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "DocumentRegistry",
                "source_mapping": {
                  "start": 321,
                  "length": 3628,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "getAttributeData(bytes32,string)"
            }
          }
        ],
        "description": "getAttributeData(bytes32,string) should be declared external:\n\t- DocumentRegistry.getAttributeData(bytes32,string) ()\n",
        "markdown": "getAttributeData(bytes32,string) should be declared external:\n\t- [DocumentRegistry.getAttributeData(bytes32,string)]()\n",
        "first_markdown_element": "",
        "id": "54de5ce3356020af7e2bc4934f58ca5c41b842e7a1f518f15b278ed9432a2c24",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      }
    ]
  }
}