{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "function",
            "name": "getCodeSize",
            "source_mapping": {
              "start": 6362,
              "length": 150,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "getCodeSize(address)"
            }
          }
        ],
        "description": "usingOraclize.getCodeSize(address) () is declared view but contains assembly code\n",
        "markdown": "[usingOraclize.getCodeSize(address)]() is declared view but contains assembly code\n",
        "first_markdown_element": "",
        "id": "16bc519b263fbe20f07d3e662621a5f73c505ffdf6a9ef4970d71f70faa21ef0",
        "additional_fields": {
          "contains_assembly": true
        },
        "check": "constant-function-asm",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "closeTurnByHand",
            "source_mapping": {
              "start": 15397,
              "length": 179,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "coinback",
                "source_mapping": {
                  "start": 10533,
                  "length": 5286,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "closeTurnByHand(uint32)"
            }
          },
          {
            "type": "node",
            "name": "address(this).balance == 0",
            "source_mapping": {
              "start": 15487,
              "length": 26,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "closeTurnByHand",
                "source_mapping": {
                  "start": 15397,
                  "length": 179,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "coinback",
                    "source_mapping": {
                      "start": 10533,
                      "length": 5286,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "closeTurnByHand(uint32)"
                }
              }
            }
          }
        ],
        "description": "coinback.closeTurnByHand(uint32) () uses a dangerous strict equality:\n\t- address(this).balance == 0 ()\n",
        "markdown": "[coinback.closeTurnByHand(uint32)]() uses a dangerous strict equality:\n\t- [address(this).balance == 0]()\n",
        "first_markdown_element": "",
        "id": "55b46021d18feb9c8ea678f67fd544b3c7e5fe03a722e8822d52c441a6213e66",
        "check": "incorrect-equality",
        "impact": "Medium",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "changeOwner",
            "source_mapping": {
              "start": 15736,
              "length": 81,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "coinback",
                "source_mapping": {
                  "start": 10533,
                  "length": 5286,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "changeOwner(address)"
            }
          },
          {
            "type": "node",
            "name": "owner = newOwner",
            "source_mapping": {
              "start": 15794,
              "length": 16,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeOwner",
                "source_mapping": {
                  "start": 15736,
                  "length": 81,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "coinback",
                    "source_mapping": {
                      "start": 10533,
                      "length": 5286,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeOwner(address)"
                }
              }
            }
          }
        ],
        "description": "coinback.changeOwner(address) () should emit an event for: \n\t- owner = newOwner () \n",
        "markdown": "[coinback.changeOwner(address)]() should emit an event for: \n\t- [owner = newOwner]() \n",
        "first_markdown_element": "",
        "id": "bd762a0bfe4417f041a3e857be844b78f630dc3bac403b31a219b0fb5f030e24",
        "check": "events-access",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "newOwner",
            "source_mapping": {
              "start": 15757,
              "length": 16,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeOwner",
                "source_mapping": {
                  "start": 15736,
                  "length": 81,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "coinback",
                    "source_mapping": {
                      "start": 10533,
                      "length": 5286,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeOwner(address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "owner = newOwner",
            "source_mapping": {
              "start": 15794,
              "length": 16,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeOwner",
                "source_mapping": {
                  "start": 15736,
                  "length": 81,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "coinback",
                    "source_mapping": {
                      "start": 10533,
                      "length": 5286,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeOwner(address)"
                }
              }
            }
          }
        ],
        "description": "coinback.changeOwner(address).newOwner () lacks a zero-check on :\n\t\t- owner = newOwner ()\n",
        "markdown": "[coinback.changeOwner(address).newOwner]() lacks a zero-check on :\n\t\t- [owner = newOwner]()\n",
        "first_markdown_element": "",
        "id": "9650d8dfd4d1ea72a818a3b54ba53820d81ff73e0697d4033b92cce8a241e9a2",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "getCodeSize",
            "source_mapping": {
              "start": 6362,
              "length": 150,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "getCodeSize(address)"
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 6446,
              "length": 66,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "getCodeSize",
                "source_mapping": {
                  "start": 6362,
                  "length": 150,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 934,
                      "length": 9578,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "getCodeSize(address)"
                }
              }
            }
          }
        ],
        "description": "usingOraclize.getCodeSize(address) () uses assembly\n\t- INLINE ASM ()\n",
        "markdown": "[usingOraclize.getCodeSize(address)]() uses assembly\n\t- [INLINE ASM]()\n",
        "first_markdown_element": "",
        "id": "7e5d41f62c2c212a13753087718c1c83601b562dbe02a125ed1b6cadeb32d75a",
        "check": "assembly",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "strConcat",
            "source_mapping": {
              "start": 8538,
              "length": 817,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "strConcat(string,string,string,string,string)"
            }
          }
        ],
        "description": "usingOraclize.strConcat(string,string,string,string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.strConcat(string,string,string,string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "02bccda8823598fc34194f454dae3f280b9461d6ec1ba6f8bc0616de61155d89",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 5605,
              "length": 378,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string,string,uint256)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(string,string,string,uint256) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_query(string,string,string,uint256)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "3a9ba80ddeeb41d7a063a72b2f54747b5c14c4b956a07721cbdd12f9399d0a64",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 4508,
              "length": 328,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string,string)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(string,string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_query(string,string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "40054756700f3045af800052736c1eee7232bb1485a66df3a6b8e58c259923e3",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_setProof",
            "source_mapping": {
              "start": 6105,
              "length": 114,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_setProof(bytes1)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_setProof(bytes1) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_setProof(bytes1)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "481aca295ce795a1524d6dbce51cce53333d2513e83e589481d6a5d37fd206ea",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "parseAddr",
            "source_mapping": {
              "start": 6519,
              "length": 590,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "parseAddr(string)"
            }
          }
        ],
        "description": "usingOraclize.parseAddr(string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.parseAddr(string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "4f626564b7e2b022bb1b91377e45cc01a4e7443ae60b2d0c0f0c4c6eb4061c30",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_setCustomGasPrice",
            "source_mapping": {
              "start": 6224,
              "length": 132,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_setCustomGasPrice(uint256)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_setCustomGasPrice(uint256) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_setCustomGasPrice(uint256)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "52f7a269a49b51da4eb16aeee255edd439016e5dcd357aace3abf49037e1e236",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "strConcat",
            "source_mapping": {
              "start": 9361,
              "length": 142,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "strConcat(string,string,string,string)"
            }
          }
        ],
        "description": "usingOraclize.strConcat(string,string,string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.strConcat(string,string,string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "624828dc68f34e0da8911b149b7f75362984c7b83bc6efde9be2137df284241b",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 3427,
              "length": 330,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(uint256,string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_query(uint256,string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "6c078a52d1b31d3bdf41c2f4fef697ea3c6f94dbbd022b75ef571ccdd4268d3e",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 4841,
              "length": 352,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string,string)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(uint256,string,string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_query(uint256,string,string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "6ff97cc5c8f08858e86abc1fd46209a6b609be89e5760dffa980d63f4bba636c",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 3762,
              "length": 380,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string,uint256)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(uint256,string,string,uint256) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_query(uint256,string,string,uint256)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "73e029d68cda46f97a1509bb8791a3e962d126ff11e225a745f44dcb125e2134",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 3116,
              "length": 306,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_query(string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "76e2c7b0dd1c26753359bd31ebd36f8d2ff3d5e7e2f1b2911e2c738f8aa48dc5",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "strConcat",
            "source_mapping": {
              "start": 9646,
              "length": 120,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "strConcat(string,string)"
            }
          }
        ],
        "description": "usingOraclize.strConcat(string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.strConcat(string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "8cff80c0d8ce354d63c6201689f28cc903370629959c02f442412125acb599e2",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 5198,
              "length": 402,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string,string,uint256)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(uint256,string,string,string,uint256) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_query(uint256,string,string,string,uint256)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "8e8132dac8e24f98880fb95bfdc5e8336a3d1e00e06329b801fbe92bf610ce5f",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "strConcat",
            "source_mapping": {
              "start": 9509,
              "length": 131,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "strConcat(string,string,string)"
            }
          }
        ],
        "description": "usingOraclize.strConcat(string,string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.strConcat(string,string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "9cbe09a4afa473093d19e2a4f281cf4cc6337f4beefabce2b567e5882ff5d104",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "strCompare",
            "source_mapping": {
              "start": 7116,
              "length": 547,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "strCompare(string,string)"
            }
          }
        ],
        "description": "usingOraclize.strCompare(string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.strCompare(string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "b03ccda235961726f89662bec71e81728ac465851316fa7a3ec2420c2ff70235",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "indexOf",
            "source_mapping": {
              "start": 7669,
              "length": 863,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "indexOf(string,string)"
            }
          }
        ],
        "description": "usingOraclize.indexOf(string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.indexOf(string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "d01b6f80ac7cad693f5b3e23453ca959866bbe5a177219a2a2cae02a9fd244bd",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 13420,
              "length": 5,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "__callback",
                "source_mapping": {
                  "start": 13321,
                  "length": 724,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "coinback",
                    "source_mapping": {
                      "start": 10533,
                      "length": 5286,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "__callback(bytes32,string)"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected THROW ():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "markdown": "Deprecated standard detected [THROW]():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "first_markdown_element": "",
        "id": "f5556cf1c70b64b9e4b1fc32044dd970b5f2c8b9fc21b7971fda01971033f2d5",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [],
        "description": "solc-0.4.0 is not recommended for deployment\n",
        "markdown": "solc-0.4.0 is not recommended for deployment\n",
        "first_markdown_element": "",
        "id": "e676d9e89e623fa7675baecce41eb7ab21d1d8ec9e856bc5b047e6cfb50b37ca",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "pragma",
            "name": "^0.4.0",
            "source_mapping": {
              "start": 0,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "directive": [
                "solidity",
                "^",
                "0.4",
                ".0"
              ]
            }
          }
        ],
        "description": "Pragma version^0.4.0 () allows old versions\n",
        "markdown": "Pragma version[^0.4.0]() allows old versions\n",
        "first_markdown_element": "",
        "id": "f4d0f96f990510a571c7ae954763f848d217d6f86fa5953d251f28f5221969e2",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_c",
            "source_mapping": {
              "start": 9402,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 9361,
                  "length": 142,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 934,
                      "length": 9578,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string,string)._c () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string,string)._c]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "0297d8ce4b74ef53be4b13e445c465611fab4a270b96bc56585b1132dedbe8df",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 5605,
              "length": 378,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string,string,uint256)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_query(string,string,string,uint256) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_query(string,string,string,uint256)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "0355ac2dd878572cdf2226829ecc27b042d6b998b720514b9409d71f0fc08d01",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 4508,
              "length": 328,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string,string)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_query(string,string,string) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_query(string,string,string)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "07e7db1bc757bec560c188cf286fc5a362e9c3524544eb1e30bcfcb7e33c3b67",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 9806,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "parseInt",
                "source_mapping": {
                  "start": 9788,
                  "length": 92,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 934,
                      "length": 9578,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "parseInt(string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.parseInt(string)._a () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.parseInt(string)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "0c07075992b1ccf274de61ec04f08ec1d92841f4b25fe1deeab308ebb2a12f41",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "LOG_LuckyPLayer",
            "source_mapping": {
              "start": 11854,
              "length": 70,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "coinback",
                "source_mapping": {
                  "start": 10533,
                  "length": 5286,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "LOG_LuckyPLayer(address,uint256,uint256)"
            },
            "additional_fields": {
              "target": "event",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Event coinback.LOG_LuckyPLayer(address,uint256,uint256) () is not in CapWords\n",
        "markdown": "Event [coinback.LOG_LuckyPLayer(address,uint256,uint256)]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "0ca38140e6e98a36cd0a5a62cabfafd0a8954a7858377b89d97b4699547f83b4",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "FREE_PERCENT",
            "source_mapping": {
              "start": 10724,
              "length": 30,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "coinback",
                "source_mapping": {
                  "start": 10533,
                  "length": 5286,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable coinback.FREE_PERCENT () is not in mixedCase\n",
        "markdown": "Variable [coinback.FREE_PERCENT]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "0d399e136668bbb78f20eab974da9a57ca0eb88e764a1e4a23b3be2106b7a1f7",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_b",
            "source_mapping": {
              "start": 9391,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 9361,
                  "length": 142,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 934,
                      "length": 9578,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string,string)._b () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string,string)._b]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "0dd455db537396a2d830f97a84264af9e123321e1acd0908050ac8432194f452",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_consensys",
            "source_mapping": {
              "start": 1368,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable usingOraclize.networkID_consensys () is not in mixedCase\n",
        "markdown": "Variable [usingOraclize.networkID_consensys]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "0e715024833b53f1d598506398b7809786829d042e39df5d1ca755e45bf845a0",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "__callback",
            "source_mapping": {
              "start": 13321,
              "length": 724,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "coinback",
                "source_mapping": {
                  "start": 10533,
                  "length": 5286,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "__callback(bytes32,string)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function coinback.__callback(bytes32,string) () is not in mixedCase\n",
        "markdown": "Function [coinback.__callback(bytes32,string)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "11bf5a5a435516c33c34f8976664d8f9b55a76f61f80458294d3c4d0ce13459d",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_setCustomGasPrice",
            "source_mapping": {
              "start": 6224,
              "length": 132,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_setCustomGasPrice(uint256)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_setCustomGasPrice(uint256) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_setCustomGasPrice(uint256)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "14a791f5083bd8e1ab5d29c695c6b1e035e7be7385d4a4e6cb80361fe24f4170",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 9380,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 9361,
                  "length": 142,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 934,
                      "length": 9578,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string,string)._a () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string,string)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "16572e724a6d96fbd6289a436ad4ce3c1217fd9263c9a0998cf5a09c1de685f6",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 3116,
              "length": 306,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_query(string,string) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_query(string,string)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "182939ac468801b45916f317f6de846e06252aaf9ad8dc907300d972141fc130",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_b",
            "source_mapping": {
              "start": 7147,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strCompare",
                "source_mapping": {
                  "start": 7116,
                  "length": 547,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 934,
                      "length": 9578,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strCompare(string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strCompare(string,string)._b () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strCompare(string,string)._b]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "203595b6031f1173a3d0859cb8782093fd630f05aa0625029cf8498533d170f2",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_haystack",
            "source_mapping": {
              "start": 7686,
              "length": 16,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "indexOf",
                "source_mapping": {
                  "start": 7669,
                  "length": 863,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 934,
                      "length": 9578,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "indexOf(string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.indexOf(string,string)._haystack () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.indexOf(string,string)._haystack]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "2d6b306069d60ef4b6ea5e9eaca715a69b42958bb0991b818b000b298bf664da",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "coinback",
            "source_mapping": {
              "start": 10533,
              "length": 5286,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "additional_fields": {
              "target": "contract",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Contract coinback () is not in CapWords\n",
        "markdown": "Contract [coinback]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "3965812acb2a8d2475f3ef333bfa26e6983ed705d90334320eb5cd990006934e",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_c",
            "source_mapping": {
              "start": 9550,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 9509,
                  "length": 131,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 934,
                      "length": 9578,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string)._c () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string)._c]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "3acd35d9eee9de104f9be3bcdc3ec0b416cb51824ba4240088dd1fec67a054fa",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "OAR",
            "source_mapping": {
              "start": 1415,
              "length": 25,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable usingOraclize.OAR () is not in mixedCase\n",
        "markdown": "Variable [usingOraclize.OAR]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "3fc2652416bd0c049f5740630d4de1e63de0c95c26521cfc9ed8dc8e6aaf1027",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_e",
            "source_mapping": {
              "start": 8601,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 8538,
                  "length": 817,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 934,
                      "length": 9578,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string,string,string)._e () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string,string,string)._e]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "40419806dcca834fc51223039f96e5f2ab87fdabfc1c27c2b417d8d633027c26",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "usingOraclize",
            "source_mapping": {
              "start": 934,
              "length": 9578,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "additional_fields": {
              "target": "contract",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Contract usingOraclize () is not in CapWords\n",
        "markdown": "Contract [usingOraclize]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "420b57e2612bc5bf3c105a488ede65d39993bf5272cace9e472f2bd7c6832eca",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 5198,
              "length": 402,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string,string,uint256)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_query(uint256,string,string,string,uint256) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_query(uint256,string,string,string,uint256)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "468a7e3fc0d5f78ef5b0d51e3525435c587be2eaed8120b52809984804c195bb",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_cbAddress",
            "source_mapping": {
              "start": 5988,
              "length": 112,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_cbAddress()"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_cbAddress() () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_cbAddress()]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "4b7e075f75a6c475fa1820455abef59bd0fefa72209045aa977070b4a1d0af6d",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 9938,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "parseInt",
                "source_mapping": {
                  "start": 9920,
                  "length": 588,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 934,
                      "length": 9578,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "parseInt(string,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.parseInt(string,uint256)._a () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.parseInt(string,uint256)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "5251d60a38eed6f14a390b9f471bf8a3ce3e4f3be2b8e0487cb4926fa9b12806",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 9665,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 9646,
                  "length": 120,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 934,
                      "length": 9578,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string)._a () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "5a798c8f8de8de5cc0e8db621e5d802e697874d964514db55ffe4138b8c1b58f",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_testnet",
            "source_mapping": {
              "start": 1285,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable usingOraclize.networkID_testnet () is not in mixedCase\n",
        "markdown": "Variable [usingOraclize.networkID_testnet]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "63fb3c93545f9e715e601e21ba6494c2da12407209f0519a762435ad2024ca0e",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_b",
            "source_mapping": {
              "start": 9949,
              "length": 7,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "parseInt",
                "source_mapping": {
                  "start": 9920,
                  "length": 588,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 934,
                      "length": 9578,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "parseInt(string,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.parseInt(string,uint256)._b () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.parseInt(string,uint256)._b]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "691c3ef346af826a974d5e7a1cc853c05c5293f315ab116e46e4162161238b71",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_setNetwork",
            "source_mapping": {
              "start": 1762,
              "length": 1348,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_setNetwork(uint8)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_setNetwork(uint8) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_setNetwork(uint8)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "6a7015444ddf266441dc7d33dcf6b5d6c550d73f30747262d959e7298d94fec2",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 3762,
              "length": 380,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string,uint256)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_query(uint256,string,string,uint256) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_query(uint256,string,string,uint256)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "6f78239649f465ee938014355116cc751940f47be305cba5227682499e2819f1",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 4841,
              "length": 352,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string,string)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_query(uint256,string,string,string) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_query(uint256,string,string,string)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "76cae6b4617bf837d03a7cbfa6721bd925b8b5ce6ee4380e9e77e50a14248d3e",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "query_withGasLimit",
            "source_mapping": {
              "start": 179,
              "length": 124,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "OraclizeI",
                "source_mapping": {
                  "start": 24,
                  "length": 823,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "query_withGasLimit(uint256,string,string,uint256)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function OraclizeI.query_withGasLimit(uint256,string,string,uint256) () is not in mixedCase\n",
        "markdown": "Function [OraclizeI.query_withGasLimit(uint256,string,string,uint256)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "76f8bb2829d7132eb11f5b0132b332152a63a76c64cbe7b4ebce8eb15341fed0",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 7136,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strCompare",
                "source_mapping": {
                  "start": 7116,
                  "length": 547,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 934,
                      "length": 9578,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strCompare(string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strCompare(string,string)._a () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strCompare(string,string)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "7c3aae1671f76dcdfd21f3a38d40994536117979a5756e1689676f223337d350",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 4147,
              "length": 356,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string,uint256)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_query(string,string,uint256) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_query(string,string,uint256)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "88daeed5c2be5e554d5fceece5daeb6dce6cbe53eba64f6fc4a9b78df5938482",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 6538,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "parseAddr",
                "source_mapping": {
                  "start": 6519,
                  "length": 590,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 934,
                      "length": 9578,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "parseAddr(string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.parseAddr(string)._a () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.parseAddr(string)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "88e01c1e054b5490854c09029663704da156e5a3de882a95ddf5d0741e963d37",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "LOG_NewTurn",
            "source_mapping": {
              "start": 11531,
              "length": 55,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "coinback",
                "source_mapping": {
                  "start": 10533,
                  "length": 5286,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "LOG_NewTurn(uint256,uint256,uint256)"
            },
            "additional_fields": {
              "target": "event",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Event coinback.LOG_NewTurn(uint256,uint256,uint256) () is not in CapWords\n",
        "markdown": "Event [coinback.LOG_NewTurn(uint256,uint256,uint256)]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "894a7504daca14e682c03ef530b415167b1bf8519cd4ec39f24ce8f1d19a06a9",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_b",
            "source_mapping": {
              "start": 8568,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 8538,
                  "length": 817,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 934,
                      "length": 9578,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string,string,string)._b () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string,string,string)._b]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "8ace4331b3043dcc6e28044be3541f13ca8f8c4e523e055236484e2f5bb2a614",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "MAX_RANDOM_NUM",
            "source_mapping": {
              "start": 10849,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "coinback",
                "source_mapping": {
                  "start": 10533,
                  "length": 5286,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable coinback.MAX_RANDOM_NUM () is not in mixedCase\n",
        "markdown": "Variable [coinback.MAX_RANDOM_NUM]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "8bebfed2607405b80ba6aee4b1028d8b1938157c33e566741929eacd3de481bb",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "query2_withGasLimit",
            "source_mapping": {
              "start": 424,
              "length": 140,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "OraclizeI",
                "source_mapping": {
                  "start": 24,
                  "length": 823,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "query2_withGasLimit(uint256,string,string,string,uint256)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function OraclizeI.query2_withGasLimit(uint256,string,string,string,uint256) () is not in mixedCase\n",
        "markdown": "Function [OraclizeI.query2_withGasLimit(uint256,string,string,string,uint256)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "8cab8387bbfe5ecbbdafb85915d067ccab5a541511da64de538c6a0dbf0b507b",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_c",
            "source_mapping": {
              "start": 8579,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 8538,
                  "length": 817,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 934,
                      "length": 9578,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string,string,string)._c () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string,string,string)._c]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "94c6eea5f0b161bd7e7c39e6a2da006de24c9ee4220b1d66c23235001f800d7c",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_d",
            "source_mapping": {
              "start": 9413,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 9361,
                  "length": 142,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 934,
                      "length": 9578,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string,string)._d () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string,string)._d]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "99ddd30a64dabc8213a5985828854bfe856140e3ad9b8cae48d379ccdd934f12",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_needle",
            "source_mapping": {
              "start": 7704,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "indexOf",
                "source_mapping": {
                  "start": 7669,
                  "length": 863,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 934,
                      "length": 9578,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "indexOf(string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.indexOf(string,string)._needle () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.indexOf(string,string)._needle]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "9d394dc0a86e7071c94eacba676655a265fb490bc0d7d035f22b041e4b8aac37",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_mainnet",
            "source_mapping": {
              "start": 1243,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable usingOraclize.networkID_mainnet () is not in mixedCase\n",
        "markdown": "Variable [usingOraclize.networkID_mainnet]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "a1c752d2b791ecf5d79750abcafeafee2b3ec17b74e7d2f8f568ba1fecf3b470",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 8557,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 8538,
                  "length": 817,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 934,
                      "length": 9578,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string,string,string)._a () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string,string,string)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "a79f70421fd937a6f1b016585faf8a3e7d1cf90ca2cb10f32e7cb4028828cfd5",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 9528,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 9509,
                  "length": 131,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 934,
                      "length": 9578,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string)._a () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "a841a03f172f3e2af7381284d79eeeb4a536a35b9e7d7ca85e9b4ce99d0d31c3",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_auto",
            "source_mapping": {
              "start": 1204,
              "length": 33,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable usingOraclize.networkID_auto () is not in mixedCase\n",
        "markdown": "Variable [usingOraclize.networkID_auto]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "ab19cbfcd051281f084ba84892ce605cc50efa56b3ce36f68a664e91e9fe76d0",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 3427,
              "length": 330,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_query(uint256,string,string) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_query(uint256,string,string)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "c0060136ce3d791852cebe29dbe67435cbfc99ec46c8bf938389d10317130152",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_b",
            "source_mapping": {
              "start": 9676,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 9646,
                  "length": 120,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 934,
                      "length": 9578,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string)._b () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string)._b]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "c96709e63500a426719bf2ab31063a69d7fbbeffab63d11d0100a0e2b2102d15",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_morden",
            "source_mapping": {
              "start": 1327,
              "length": 35,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable usingOraclize.networkID_morden () is not in mixedCase\n",
        "markdown": "Variable [usingOraclize.networkID_morden]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "d3c1056f7858dbe1588a1f9c65191e580356dbeb3f4aeab47bfa15b3c49b7e9f",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_d",
            "source_mapping": {
              "start": 8590,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 8538,
                  "length": 817,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 934,
                      "length": 9578,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string,string,string)._d () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string,string,string)._d]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "dd68cac6d3298d27c00d9a0a1f68811c5249075d7040b96eabb090bf6355d7fe",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_setProof",
            "source_mapping": {
              "start": 6105,
              "length": 114,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_setProof(bytes1)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_setProof(bytes1) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_setProof(bytes1)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "e7bf812b47645de4a94a597bdce9dcd1d2c54aab92fd8da20363f972cd450eff",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_b",
            "source_mapping": {
              "start": 9539,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 9509,
                  "length": 131,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 934,
                      "length": 9578,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string)._b () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string)._b]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "e890df7734f8e87a83d5a32145bcbe1a16dda0ea17b3822e4a175ce140c9677d",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "proofType_TLSNotary",
            "source_mapping": {
              "start": 1114,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable usingOraclize.proofType_TLSNotary () is not in mixedCase\n",
        "markdown": "Variable [usingOraclize.proofType_TLSNotary]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "ebe49ac9795d0f19c592850e2fb1abc132bbf1890eeffb09d6e9c78c64205e06",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "proofType_NONE",
            "source_mapping": {
              "start": 1073,
              "length": 35,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable usingOraclize.proofType_NONE () is not in mixedCase\n",
        "markdown": "Variable [usingOraclize.proofType_NONE]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "ecf0ce275dc6a2ae89cbb24a52f261a4f10da5f6449bd95f869bf532541041ad",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "LOG_PlayerBet",
            "source_mapping": {
              "start": 11677,
              "length": 88,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "coinback",
                "source_mapping": {
                  "start": 10533,
                  "length": 5286,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "LOG_PlayerBet(address,uint256,uint256,uint256,uint256)"
            },
            "additional_fields": {
              "target": "event",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Event coinback.LOG_PlayerBet(address,uint256,uint256,uint256,uint256) () is not in CapWords\n",
        "markdown": "Event [coinback.LOG_PlayerBet(address,uint256,uint256,uint256,uint256)]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "f024e81f796c1e32bac08bea5d6a142806880eb931080e7dd13db14737dddf62",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "struct",
            "name": "betInfo",
            "source_mapping": {
              "start": 10575,
              "length": 72,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "coinback",
                "source_mapping": {
                  "start": 10533,
                  "length": 5286,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "structure",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Struct coinback.betInfo () is not in CapWords\n",
        "markdown": "Struct [coinback.betInfo]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "f0b77bd7e78a20bb8fe4bce93069b53b7f042f695dd94b877bf3826b4850088b",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "proofStorage_IPFS",
            "source_mapping": {
              "start": 1160,
              "length": 38,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable usingOraclize.proofStorage_IPFS () is not in mixedCase\n",
        "markdown": "Variable [usingOraclize.proofStorage_IPFS]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "f0eb69f7996b4db7aedd94e1bc049b96d4da7686f0048ab30e14165ea7a67325",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "POOL_AWARD",
            "source_mapping": {
              "start": 10653,
              "length": 15,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "coinback",
                "source_mapping": {
                  "start": 10533,
                  "length": 5286,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable coinback.POOL_AWARD () is not in mixedCase\n",
        "markdown": "Variable [coinback.POOL_AWARD]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "fbf790a7eeec090fdd16c525388e3eced4a3766efa59d42d7297c7c10ca4c119",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "__callback",
            "source_mapping": {
              "start": 13321,
              "length": 724,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "coinback",
                "source_mapping": {
                  "start": 10533,
                  "length": 5286,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "__callback(bytes32,string)"
            }
          },
          {
            "type": "node",
            "name": "! betMap[index].srcAddress.send(winCoin)",
            "source_mapping": {
              "start": 13924,
              "length": 39,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "__callback",
                "source_mapping": {
                  "start": 13321,
                  "length": 724,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "coinback",
                    "source_mapping": {
                      "start": 10533,
                      "length": 5286,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "__callback(bytes32,string)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "! owner.send(waiterfree)",
            "source_mapping": {
              "start": 13983,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "__callback",
                "source_mapping": {
                  "start": 13321,
                  "length": 724,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "coinback",
                    "source_mapping": {
                      "start": 10533,
                      "length": 5286,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "__callback(bytes32,string)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "startNewTurn()",
            "source_mapping": {
              "start": 14024,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "__callback",
                "source_mapping": {
                  "start": 13321,
                  "length": 724,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "coinback",
                    "source_mapping": {
                      "start": 10533,
                      "length": 5286,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "__callback(bytes32,string)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "beginTime"
            }
          },
          {
            "type": "node",
            "name": "beginTime = now",
            "source_mapping": {
              "start": 14631,
              "length": 15,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "startNewTurn",
                "source_mapping": {
                  "start": 14382,
                  "length": 390,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "coinback",
                    "source_mapping": {
                      "start": 10533,
                      "length": 5286,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "startNewTurn()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "beginTime"
            }
          },
          {
            "type": "node",
            "name": "startNewTurn()",
            "source_mapping": {
              "start": 14024,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "__callback",
                "source_mapping": {
                  "start": 13321,
                  "length": 724,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "coinback",
                    "source_mapping": {
                      "start": 10533,
                      "length": 5286,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "__callback(bytes32,string)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "betId"
            }
          },
          {
            "type": "node",
            "name": "betId = 0",
            "source_mapping": {
              "start": 14447,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "startNewTurn",
                "source_mapping": {
                  "start": 14382,
                  "length": 390,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "coinback",
                    "source_mapping": {
                      "start": 10533,
                      "length": 5286,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "startNewTurn()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "betId"
            }
          },
          {
            "type": "node",
            "name": "betId ++",
            "source_mapping": {
              "start": 14550,
              "length": 7,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "startNewTurn",
                "source_mapping": {
                  "start": 14382,
                  "length": 390,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "coinback",
                    "source_mapping": {
                      "start": 10533,
                      "length": 5286,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "startNewTurn()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "betId"
            }
          },
          {
            "type": "node",
            "name": "startNewTurn()",
            "source_mapping": {
              "start": 14024,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "__callback",
                "source_mapping": {
                  "start": 13321,
                  "length": 724,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "coinback",
                    "source_mapping": {
                      "start": 10533,
                      "length": 5286,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "__callback(bytes32,string)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "betMap"
            }
          },
          {
            "type": "node",
            "name": "betMap[betId] = overBetPlayer",
            "source_mapping": {
              "start": 14507,
              "length": 29,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "startNewTurn",
                "source_mapping": {
                  "start": 14382,
                  "length": 390,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "coinback",
                    "source_mapping": {
                      "start": 10533,
                      "length": 5286,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "startNewTurn()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "betMap"
            }
          },
          {
            "type": "node",
            "name": "delete betMap[i]",
            "source_mapping": {
              "start": 14859,
              "length": 16,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "clearBetMap",
                "source_mapping": {
                  "start": 14778,
                  "length": 114,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "coinback",
                    "source_mapping": {
                      "start": 10533,
                      "length": 5286,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "clearBetMap()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "betMap"
            }
          },
          {
            "type": "node",
            "name": "startNewTurn()",
            "source_mapping": {
              "start": 14024,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "__callback",
                "source_mapping": {
                  "start": 13321,
                  "length": 724,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "coinback",
                    "source_mapping": {
                      "start": 10533,
                      "length": 5286,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "__callback(bytes32,string)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "exitOverPlayer"
            }
          },
          {
            "type": "node",
            "name": "exitOverPlayer = false",
            "source_mapping": {
              "start": 14571,
              "length": 22,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "startNewTurn",
                "source_mapping": {
                  "start": 14382,
                  "length": 390,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "coinback",
                    "source_mapping": {
                      "start": 10533,
                      "length": 5286,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "startNewTurn()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "exitOverPlayer"
            }
          },
          {
            "type": "node",
            "name": "startNewTurn()",
            "source_mapping": {
              "start": 14024,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "__callback",
                "source_mapping": {
                  "start": 13321,
                  "length": 724,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "coinback",
                    "source_mapping": {
                      "start": 10533,
                      "length": 5286,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "__callback(bytes32,string)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "stopBet"
            }
          },
          {
            "type": "node",
            "name": "stopBet = false",
            "source_mapping": {
              "start": 14700,
              "length": 15,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "startNewTurn",
                "source_mapping": {
                  "start": 14382,
                  "length": 390,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "coinback",
                    "source_mapping": {
                      "start": 10533,
                      "length": 5286,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "startNewTurn()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "stopBet"
            }
          },
          {
            "type": "node",
            "name": "startNewTurn()",
            "source_mapping": {
              "start": 14024,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "__callback",
                "source_mapping": {
                  "start": 13321,
                  "length": 724,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "coinback",
                    "source_mapping": {
                      "start": 10533,
                      "length": 5286,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "__callback(bytes32,string)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "totalAward"
            }
          },
          {
            "type": "node",
            "name": "totalAward = address(this).balance",
            "source_mapping": {
              "start": 14656,
              "length": 34,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "startNewTurn",
                "source_mapping": {
                  "start": 14382,
                  "length": 390,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "coinback",
                    "source_mapping": {
                      "start": 10533,
                      "length": 5286,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "startNewTurn()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "totalAward"
            }
          },
          {
            "type": "node",
            "name": "startNewTurn()",
            "source_mapping": {
              "start": 14024,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "__callback",
                "source_mapping": {
                  "start": 13321,
                  "length": 724,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "coinback",
                    "source_mapping": {
                      "start": 10533,
                      "length": 5286,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "__callback(bytes32,string)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "turnId"
            }
          },
          {
            "type": "node",
            "name": "turnId ++",
            "source_mapping": {
              "start": 14613,
              "length": 8,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "startNewTurn",
                "source_mapping": {
                  "start": 14382,
                  "length": 390,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "coinback",
                    "source_mapping": {
                      "start": 10533,
                      "length": 5286,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "startNewTurn()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "turnId"
            }
          },
          {
            "type": "node",
            "name": "LOG_NewTurn(turnId,beginTime,totalAward)",
            "source_mapping": {
              "start": 14725,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "startNewTurn",
                "source_mapping": {
                  "start": 14382,
                  "length": 390,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "coinback",
                    "source_mapping": {
                      "start": 10533,
                      "length": 5286,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "startNewTurn()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          },
          {
            "type": "node",
            "name": "startNewTurn()",
            "source_mapping": {
              "start": 14024,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "__callback",
                "source_mapping": {
                  "start": 13321,
                  "length": 724,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "coinback",
                    "source_mapping": {
                      "start": 10533,
                      "length": 5286,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "__callback(bytes32,string)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          }
        ],
        "description": "Reentrancy in coinback.__callback(bytes32,string) ():\n\tExternal calls:\n\t- ! betMap[index].srcAddress.send(winCoin) ()\n\t- ! owner.send(waiterfree) ()\n\tState variables written after the call(s):\n\t- startNewTurn() ()\n\t\t- beginTime = now ()\n\t- startNewTurn() ()\n\t\t- betId = 0 ()\n\t\t- betId ++ ()\n\t- startNewTurn() ()\n\t\t- betMap[betId] = overBetPlayer ()\n\t\t- delete betMap[i] ()\n\t- startNewTurn() ()\n\t\t- exitOverPlayer = false ()\n\t- startNewTurn() ()\n\t\t- stopBet = false ()\n\t- startNewTurn() ()\n\t\t- totalAward = address(this).balance ()\n\t- startNewTurn() ()\n\t\t- turnId ++ ()\n\tEvent emitted after the call(s):\n\t- LOG_NewTurn(turnId,beginTime,totalAward) ()\n\t\t- startNewTurn() ()\n",
        "markdown": "Reentrancy in [coinback.__callback(bytes32,string)]():\n\tExternal calls:\n\t- [! betMap[index].srcAddress.send(winCoin)]()\n\t- [! owner.send(waiterfree)]()\n\tState variables written after the call(s):\n\t- [startNewTurn()]()\n\t\t- [beginTime = now]()\n\t- [startNewTurn()]()\n\t\t- [betId = 0]()\n\t\t- [betId ++]()\n\t- [startNewTurn()]()\n\t\t- [betMap[betId] = overBetPlayer]()\n\t\t- [delete betMap[i]]()\n\t- [startNewTurn()]()\n\t\t- [exitOverPlayer = false]()\n\t- [startNewTurn()]()\n\t\t- [stopBet = false]()\n\t- [startNewTurn()]()\n\t\t- [totalAward = address(this).balance]()\n\t- [startNewTurn()]()\n\t\t- [turnId ++]()\n\tEvent emitted after the call(s):\n\t- [LOG_NewTurn(turnId,beginTime,totalAward)]()\n\t\t- [startNewTurn()]()\n",
        "first_markdown_element": "",
        "id": "d3208636698c10108bd5c38e00c687ab3a4b999455fbb51a0a2167afaadd0658",
        "check": "reentrancy-unlimited-gas",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 4508,
              "length": 328,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string,string)"
            }
          },
          {
            "type": "node",
            "name": "price > 1000000000000000000 + tx.gasprice * 200000",
            "source_mapping": {
              "start": 4684,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "oraclize_query",
                "source_mapping": {
                  "start": 4508,
                  "length": 328,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 934,
                      "length": 9578,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "oraclize_query(string,string,string)"
                }
              }
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(string,string,string) () uses literals with too many digits:\n\t- price > 1000000000000000000 + tx.gasprice * 200000 ()\n",
        "markdown": "[usingOraclize.oraclize_query(string,string,string)]() uses literals with too many digits:\n\t- [price > 1000000000000000000 + tx.gasprice * 200000]()\n",
        "first_markdown_element": "",
        "id": "0bbe3689c023335dcdd6957f4fe8aaae2276f8c7e4217d92b71a080350ff0110",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "closeThisTurn",
            "source_mapping": {
              "start": 14898,
              "length": 190,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "coinback",
                "source_mapping": {
                  "start": 10533,
                  "length": 5286,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "closeThisTurn()"
            }
          },
          {
            "type": "node",
            "name": "oid = oraclize_query(URL,https://www.random.org/integers/?num=1&min=1&max=1000000&col=1&base=10&format=plain&rnd=new,oraclizeGas)",
            "source_mapping": {
              "start": 14940,
              "length": 141,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "closeThisTurn",
                "source_mapping": {
                  "start": 14898,
                  "length": 190,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "coinback",
                    "source_mapping": {
                      "start": 10533,
                      "length": 5286,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "closeThisTurn()"
                }
              }
            }
          }
        ],
        "description": "coinback.closeThisTurn() () uses literals with too many digits:\n\t- oid = oraclize_query(URL,https://www.random.org/integers/?num=1&min=1&max=1000000&col=1&base=10&format=plain&rnd=new,oraclizeGas) ()\n",
        "markdown": "[coinback.closeThisTurn()]() uses literals with too many digits:\n\t- [oid = oraclize_query(URL,https://www.random.org/integers/?num=1&min=1&max=1000000&col=1&base=10&format=plain&rnd=new,oraclizeGas)]()\n",
        "first_markdown_element": "",
        "id": "475fadff574552dbd4860ff89c7ee231cca48ba8d638f47a89e5ceab4742d549",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "slitherConstructorVariables",
            "source_mapping": {
              "start": 10533,
              "length": 5286,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "coinback",
                "source_mapping": {
                  "start": 10533,
                  "length": 5286,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "slitherConstructorVariables()"
            }
          },
          {
            "type": "node",
            "name": "oraclizeGas = 200000",
            "source_mapping": {
              "start": 10809,
              "length": 34,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "slitherConstructorVariables",
                "source_mapping": {
                  "start": 10533,
                  "length": 5286,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "coinback",
                    "source_mapping": {
                      "start": 10533,
                      "length": 5286,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "slitherConstructorVariables()"
                }
              }
            }
          }
        ],
        "description": "coinback.slitherConstructorVariables() () uses literals with too many digits:\n\t- oraclizeGas = 200000 ()\n",
        "markdown": "[coinback.slitherConstructorVariables()]() uses literals with too many digits:\n\t- [oraclizeGas = 200000]()\n",
        "first_markdown_element": "",
        "id": "502b1fe2300c9e0104300915347d400cb413bf769efb1b9a8d1cc4d523d1cba9",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 3427,
              "length": 330,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string)"
            }
          },
          {
            "type": "node",
            "name": "price > 1000000000000000000 + tx.gasprice * 200000",
            "source_mapping": {
              "start": 3605,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "oraclize_query",
                "source_mapping": {
                  "start": 3427,
                  "length": 330,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 934,
                      "length": 9578,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "oraclize_query(uint256,string,string)"
                }
              }
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(uint256,string,string) () uses literals with too many digits:\n\t- price > 1000000000000000000 + tx.gasprice * 200000 ()\n",
        "markdown": "[usingOraclize.oraclize_query(uint256,string,string)]() uses literals with too many digits:\n\t- [price > 1000000000000000000 + tx.gasprice * 200000]()\n",
        "first_markdown_element": "",
        "id": "6f1d34d280b7fa6cce7a08ce45c32c12d51421c655e3c5ea0962d94d65abf281",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 4841,
              "length": 352,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string,string)"
            }
          },
          {
            "type": "node",
            "name": "price > 1000000000000000000 + tx.gasprice * 200000",
            "source_mapping": {
              "start": 5033,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "oraclize_query",
                "source_mapping": {
                  "start": 4841,
                  "length": 352,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 934,
                      "length": 9578,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "oraclize_query(uint256,string,string,string)"
                }
              }
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(uint256,string,string,string) () uses literals with too many digits:\n\t- price > 1000000000000000000 + tx.gasprice * 200000 ()\n",
        "markdown": "[usingOraclize.oraclize_query(uint256,string,string,string)]() uses literals with too many digits:\n\t- [price > 1000000000000000000 + tx.gasprice * 200000]()\n",
        "first_markdown_element": "",
        "id": "801bcaa4ba72bbdfe7de41cd50f7335527828f82ee7bea6b66e7160b93f73b3d",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 3116,
              "length": 306,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string)"
            }
          },
          {
            "type": "node",
            "name": "price > 1000000000000000000 + tx.gasprice * 200000",
            "source_mapping": {
              "start": 3278,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "oraclize_query",
                "source_mapping": {
                  "start": 3116,
                  "length": 306,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 934,
                      "length": 9578,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "oraclize_query(string,string)"
                }
              }
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(string,string) () uses literals with too many digits:\n\t- price > 1000000000000000000 + tx.gasprice * 200000 ()\n",
        "markdown": "[usingOraclize.oraclize_query(string,string)]() uses literals with too many digits:\n\t- [price > 1000000000000000000 + tx.gasprice * 200000]()\n",
        "first_markdown_element": "",
        "id": "a7c2cda403487bb1cae2af93db016b373452de4ca4b18f164a0d7b38708b9ca4",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "slitherConstructorVariables",
            "source_mapping": {
              "start": 10533,
              "length": 5286,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "coinback",
                "source_mapping": {
                  "start": 10533,
                  "length": 5286,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "slitherConstructorVariables()"
            }
          },
          {
            "type": "node",
            "name": "MAX_RANDOM_NUM = 1000000",
            "source_mapping": {
              "start": 10849,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "slitherConstructorVariables",
                "source_mapping": {
                  "start": 10533,
                  "length": 5286,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "coinback",
                    "source_mapping": {
                      "start": 10533,
                      "length": 5286,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "slitherConstructorVariables()"
                }
              }
            }
          }
        ],
        "description": "coinback.slitherConstructorVariables() () uses literals with too many digits:\n\t- MAX_RANDOM_NUM = 1000000 ()\n",
        "markdown": "[coinback.slitherConstructorVariables()]() uses literals with too many digits:\n\t- [MAX_RANDOM_NUM = 1000000]()\n",
        "first_markdown_element": "",
        "id": "c9913d364bb02db227ec75109065ffc36be02211f1cbf21d2df14ce0789acedd",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "proofType_TLSNotary",
            "source_mapping": {
              "start": 1114,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "coinback",
            "source_mapping": {
              "start": 10533,
              "length": 5286,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "usingOraclize.proofType_TLSNotary () is never used in coinback ()\n",
        "markdown": "[usingOraclize.proofType_TLSNotary]() is never used in [coinback]()\n",
        "first_markdown_element": "",
        "id": "05b3a80f8f5e601e46736005a1bb86c721d5ddc8e3c9dce4df3283b0d1202365",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_consensys",
            "source_mapping": {
              "start": 1368,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "coinback",
            "source_mapping": {
              "start": 10533,
              "length": 5286,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "usingOraclize.networkID_consensys () is never used in coinback ()\n",
        "markdown": "[usingOraclize.networkID_consensys]() is never used in [coinback]()\n",
        "first_markdown_element": "",
        "id": "290fba69a56e4af01fabf09be5e051c11f1171f73f680a9e1aba3742a1369494",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "proofStorage_IPFS",
            "source_mapping": {
              "start": 1160,
              "length": 38,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "coinback",
            "source_mapping": {
              "start": 10533,
              "length": 5286,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "usingOraclize.proofStorage_IPFS () is never used in coinback ()\n",
        "markdown": "[usingOraclize.proofStorage_IPFS]() is never used in [coinback]()\n",
        "first_markdown_element": "",
        "id": "5547abb8acde4af1ad9f59954a2bc19fc283b8a687808574e9ef4905e81f1d6f",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_testnet",
            "source_mapping": {
              "start": 1285,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "coinback",
            "source_mapping": {
              "start": 10533,
              "length": 5286,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "usingOraclize.networkID_testnet () is never used in coinback ()\n",
        "markdown": "[usingOraclize.networkID_testnet]() is never used in [coinback]()\n",
        "first_markdown_element": "",
        "id": "7c63b258ab59b485f50bfb423b2d07018785008efc2574b75f741499642d6369",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "proofType_NONE",
            "source_mapping": {
              "start": 1073,
              "length": 35,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "coinback",
            "source_mapping": {
              "start": 10533,
              "length": 5286,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "usingOraclize.proofType_NONE () is never used in coinback ()\n",
        "markdown": "[usingOraclize.proofType_NONE]() is never used in [coinback]()\n",
        "first_markdown_element": "",
        "id": "9453d6d47e644cce77d52b02b9cc4fe590146bb99dea3a1fbea88362a9d0cbac",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "month",
            "source_mapping": {
              "start": 1034,
              "length": 33,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "coinback",
            "source_mapping": {
              "start": 10533,
              "length": 5286,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "usingOraclize.month () is never used in coinback ()\n",
        "markdown": "[usingOraclize.month]() is never used in [coinback]()\n",
        "first_markdown_element": "",
        "id": "9be6a4a282146e57f19fa9e766b49db68c9dd10fda1021a335a6f2b0f5f2b9f5",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_morden",
            "source_mapping": {
              "start": 1327,
              "length": 35,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "coinback",
            "source_mapping": {
              "start": 10533,
              "length": 5286,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "usingOraclize.networkID_morden () is never used in coinback ()\n",
        "markdown": "[usingOraclize.networkID_morden]() is never used in [coinback]()\n",
        "first_markdown_element": "",
        "id": "a1b391b90bb110477e12ba87809c22da74994cbb71b1b1357b3d3f80d67c4220",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_mainnet",
            "source_mapping": {
              "start": 1243,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "coinback",
            "source_mapping": {
              "start": 10533,
              "length": 5286,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "usingOraclize.networkID_mainnet () is never used in coinback ()\n",
        "markdown": "[usingOraclize.networkID_mainnet]() is never used in [coinback]()\n",
        "first_markdown_element": "",
        "id": "d42620d0837286cc4cea859163bc9eb1b0dfbb9e54761bfdb6d84b51cf82c65d",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "week",
            "source_mapping": {
              "start": 997,
              "length": 31,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "coinback",
            "source_mapping": {
              "start": 10533,
              "length": 5286,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "usingOraclize.week () is never used in coinback ()\n",
        "markdown": "[usingOraclize.week]() is never used in [coinback]()\n",
        "first_markdown_element": "",
        "id": "da7684ebf740d8f37d6dacd734051e4cafecdb62d3d54459516a9d339f454e90",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "day",
            "source_mapping": {
              "start": 963,
              "length": 28,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "coinback",
            "source_mapping": {
              "start": 10533,
              "length": 5286,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "usingOraclize.day () is never used in coinback ()\n",
        "markdown": "[usingOraclize.day]() is never used in [coinback]()\n",
        "first_markdown_element": "",
        "id": "e9d9f2a81dc2ef4890aec529bfaf8bfdfe2ad979b31df88c90728bc81b21dd8c",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "MAX_RANDOM_NUM",
            "source_mapping": {
              "start": 10849,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "coinback",
                "source_mapping": {
                  "start": 10533,
                  "length": 5286,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "coinback.MAX_RANDOM_NUM () should be constant \n",
        "markdown": "[coinback.MAX_RANDOM_NUM]() should be constant \n",
        "first_markdown_element": "",
        "id": "0cffc74edcc9001735cdee80a7f9ca986839fe5525b118e5633a1b4db49a6327",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_mainnet",
            "source_mapping": {
              "start": 1243,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.networkID_mainnet () should be constant \n",
        "markdown": "[usingOraclize.networkID_mainnet]() should be constant \n",
        "first_markdown_element": "",
        "id": "1295c8e74108aa302a5995aa7979024aa89ec9a717e5f3b7b1c99b072bd19e0e",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "proofStorage_IPFS",
            "source_mapping": {
              "start": 1160,
              "length": 38,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.proofStorage_IPFS () should be constant \n",
        "markdown": "[usingOraclize.proofStorage_IPFS]() should be constant \n",
        "first_markdown_element": "",
        "id": "23c351e28291aae5fc02534ecb401deab14074e4107021e7f6b38b2c8ef122ae",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "week",
            "source_mapping": {
              "start": 997,
              "length": 31,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.week () should be constant \n",
        "markdown": "[usingOraclize.week]() should be constant \n",
        "first_markdown_element": "",
        "id": "282b0634cdadfc7747123ec514eeb7caf0c0f63efb0a723cd98d3663f7850df4",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "day",
            "source_mapping": {
              "start": 963,
              "length": 28,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.day () should be constant \n",
        "markdown": "[usingOraclize.day]() should be constant \n",
        "first_markdown_element": "",
        "id": "6b82a7d9c0a40a08e6e4871a717bfcbe2e5b01b764214921e0944a4f413081fa",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_consensys",
            "source_mapping": {
              "start": 1368,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.networkID_consensys () should be constant \n",
        "markdown": "[usingOraclize.networkID_consensys]() should be constant \n",
        "first_markdown_element": "",
        "id": "711a7a2d86087739d78a8a516109c67d1c61de4fea0f195574f91b9737b39d01",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_auto",
            "source_mapping": {
              "start": 1204,
              "length": 33,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.networkID_auto () should be constant \n",
        "markdown": "[usingOraclize.networkID_auto]() should be constant \n",
        "first_markdown_element": "",
        "id": "8836d8a69b190a37d4d84e90c1311ba8f574768b50cd6ab959fac6c7611481d1",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "month",
            "source_mapping": {
              "start": 1034,
              "length": 33,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.month () should be constant \n",
        "markdown": "[usingOraclize.month]() should be constant \n",
        "first_markdown_element": "",
        "id": "90ff36e0248e6a44e3b6239468125e20c133147576a09f8897cb145a1d9e594d",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "proofType_TLSNotary",
            "source_mapping": {
              "start": 1114,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.proofType_TLSNotary () should be constant \n",
        "markdown": "[usingOraclize.proofType_TLSNotary]() should be constant \n",
        "first_markdown_element": "",
        "id": "94426cf10179edb4b2487e6e14b432b61ef56fd85be70557aa3a94dc6b71a125",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "proofType_NONE",
            "source_mapping": {
              "start": 1073,
              "length": 35,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.proofType_NONE () should be constant \n",
        "markdown": "[usingOraclize.proofType_NONE]() should be constant \n",
        "first_markdown_element": "",
        "id": "94a11fbf538cb37121c80b299541faac5233b5f96139f0e49a17f0117972e7fa",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "oraclizeGas",
            "source_mapping": {
              "start": 10809,
              "length": 34,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "coinback",
                "source_mapping": {
                  "start": 10533,
                  "length": 5286,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "coinback.oraclizeGas () should be constant \n",
        "markdown": "[coinback.oraclizeGas]() should be constant \n",
        "first_markdown_element": "",
        "id": "962b06d866842af09a77ce9bfeb312c7cbb8e6bf107bbaea4eda7bebac643963",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_morden",
            "source_mapping": {
              "start": 1327,
              "length": 35,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.networkID_morden () should be constant \n",
        "markdown": "[usingOraclize.networkID_morden]() should be constant \n",
        "first_markdown_element": "",
        "id": "98966137672e0a006be030f02a3bb7779624566e6e6e2c82b82362df5f96323c",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "FREE_PERCENT",
            "source_mapping": {
              "start": 10724,
              "length": 30,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "coinback",
                "source_mapping": {
                  "start": 10533,
                  "length": 5286,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "coinback.FREE_PERCENT () should be constant \n",
        "markdown": "[coinback.FREE_PERCENT]() should be constant \n",
        "first_markdown_element": "",
        "id": "c2dbe06db93883d257f73b4a33e30bddffd6070c02f774ec2dabc879a2df81af",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_testnet",
            "source_mapping": {
              "start": 1285,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 934,
                  "length": 9578,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.networkID_testnet () should be constant \n",
        "markdown": "[usingOraclize.networkID_testnet]() should be constant \n",
        "first_markdown_element": "",
        "id": "d45f51fa43198e778f111a7f4ab2ddc0eb537637be02b351089673ed8551f0be",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "getPrice",
            "source_mapping": {
              "start": 636,
              "length": 77,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "OraclizeI",
                "source_mapping": {
                  "start": 24,
                  "length": 823,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "getPrice(string,uint256)"
            }
          }
        ],
        "description": "getPrice(string,uint256) should be declared external:\n\t- OraclizeI.getPrice(string,uint256) ()\n",
        "markdown": "getPrice(string,uint256) should be declared external:\n\t- [OraclizeI.getPrice(string,uint256)]()\n",
        "first_markdown_element": "",
        "id": "0928ff40a2cd5c6bb7e7c4db46ce8527361a50c7bc66ebd8f2b364438c7287c0",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "query2_withGasLimit",
            "source_mapping": {
              "start": 424,
              "length": 140,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "OraclizeI",
                "source_mapping": {
                  "start": 24,
                  "length": 823,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "query2_withGasLimit(uint256,string,string,string,uint256)"
            }
          }
        ],
        "description": "query2_withGasLimit(uint256,string,string,string,uint256) should be declared external:\n\t- OraclizeI.query2_withGasLimit(uint256,string,string,string,uint256) ()\n",
        "markdown": "query2_withGasLimit(uint256,string,string,string,uint256) should be declared external:\n\t- [OraclizeI.query2_withGasLimit(uint256,string,string,string,uint256)]()\n",
        "first_markdown_element": "",
        "id": "177b2e93f959a814233f43d5450222d4551c2259c8c7835b69114994d567cdfb",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "query2",
            "source_mapping": {
              "start": 308,
              "length": 111,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "OraclizeI",
                "source_mapping": {
                  "start": 24,
                  "length": 823,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "query2(uint256,string,string,string)"
            }
          }
        ],
        "description": "query2(uint256,string,string,string) should be declared external:\n\t- OraclizeI.query2(uint256,string,string,string) ()\n",
        "markdown": "query2(uint256,string,string,string) should be declared external:\n\t- [OraclizeI.query2(uint256,string,string,string)]()\n",
        "first_markdown_element": "",
        "id": "28c47db3b2fd58e0e00bf259b88b0e5c16563822a9cbba15f8538faff05dcb58",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "__callback",
            "source_mapping": {
              "start": 13321,
              "length": 724,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "coinback",
                "source_mapping": {
                  "start": 10533,
                  "length": 5286,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "__callback(bytes32,string)"
            }
          }
        ],
        "description": "__callback(bytes32,string) should be declared external:\n\t- coinback.__callback(bytes32,string) ()\n",
        "markdown": "__callback(bytes32,string) should be declared external:\n\t- [coinback.__callback(bytes32,string)]()\n",
        "first_markdown_element": "",
        "id": "3ca6238ee15494cf3a1b4cfc01bf1053285a84257e95e504f34e53a0f2287fb8",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "getPrice",
            "source_mapping": {
              "start": 569,
              "length": 62,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "OraclizeI",
                "source_mapping": {
                  "start": 24,
                  "length": 823,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "getPrice(string)"
            }
          }
        ],
        "description": "getPrice(string) should be declared external:\n\t- OraclizeI.getPrice(string) ()\n",
        "markdown": "getPrice(string) should be declared external:\n\t- [OraclizeI.getPrice(string)]()\n",
        "first_markdown_element": "",
        "id": "7131bdae44c630bd349534321f508a4c6e6ee9be4b178ffe4370403a1e805c5f",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "query",
            "source_mapping": {
              "start": 79,
              "length": 95,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "OraclizeI",
                "source_mapping": {
                  "start": 24,
                  "length": 823,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "query(uint256,string,string)"
            }
          }
        ],
        "description": "query(uint256,string,string) should be declared external:\n\t- OraclizeI.query(uint256,string,string) ()\n",
        "markdown": "query(uint256,string,string) should be declared external:\n\t- [OraclizeI.query(uint256,string,string)]()\n",
        "first_markdown_element": "",
        "id": "7fbbe34ad8e213ffe5099a5bdf0c24b8a73edf078eda1e75416d510cc2f4fe2b",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "useCoupon",
            "source_mapping": {
              "start": 718,
              "length": 35,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "OraclizeI",
                "source_mapping": {
                  "start": 24,
                  "length": 823,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "useCoupon(string)"
            }
          }
        ],
        "description": "useCoupon(string) should be declared external:\n\t- OraclizeI.useCoupon(string) ()\n",
        "markdown": "useCoupon(string) should be declared external:\n\t- [OraclizeI.useCoupon(string)]()\n",
        "first_markdown_element": "",
        "id": "9d58ae755cfc2d61463ccac1e5542293b98a29ee026191cb1e013619244920a1",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "query_withGasLimit",
            "source_mapping": {
              "start": 179,
              "length": 124,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "OraclizeI",
                "source_mapping": {
                  "start": 24,
                  "length": 823,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "query_withGasLimit(uint256,string,string,uint256)"
            }
          }
        ],
        "description": "query_withGasLimit(uint256,string,string,uint256) should be declared external:\n\t- OraclizeI.query_withGasLimit(uint256,string,string,uint256) ()\n",
        "markdown": "query_withGasLimit(uint256,string,string,uint256) should be declared external:\n\t- [OraclizeI.query_withGasLimit(uint256,string,string,uint256)]()\n",
        "first_markdown_element": "",
        "id": "fdc72c39990c24160abb0ce91adcccfa1954d5d26c36d1ae059fbe0d5d8b525a",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      }
    ]
  }
}