{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 485,
              "length": 5,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "registerNewPubKeyForHash",
                "source_mapping": {
                  "start": 386,
                  "length": 183,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Sylence",
                    "source_mapping": {
                      "start": 25,
                      "length": 547,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "registerNewPubKeyForHash(string,string)"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected THROW ():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "markdown": "Deprecated standard detected [THROW]():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "first_markdown_element": "",
        "id": "f5556cf1c70b64b9e4b1fc32044dd970b5f2c8b9fc21b7971fda01971033f2d5",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "pragma",
            "name": "^0.4.8",
            "source_mapping": {
              "start": 0,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "directive": [
                "solidity",
                "^",
                "0.4",
                ".8"
              ]
            }
          }
        ],
        "description": "Pragma version^0.4.8 () allows old versions\n",
        "markdown": "Pragma version[^0.4.8]() allows old versions\n",
        "first_markdown_element": "",
        "id": "dd43bca9b08bc1fa7b94a3e619671f3c2c98a72b8b3bf0caf1e1f86665ec4569",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [],
        "description": "solc-0.4.8 is not recommended for deployment\n",
        "markdown": "solc-0.4.8 is not recommended for deployment\n",
        "first_markdown_element": "",
        "id": "ebbd8e423b3c73a93e118f8daed7c9ac33b0d525351f79b5ea41076caa3c1bc5",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "getPubKeyByHash",
            "source_mapping": {
              "start": 230,
              "length": 152,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Sylence",
                "source_mapping": {
                  "start": 25,
                  "length": 547,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "getPubKeyByHash(string)"
            }
          }
        ],
        "description": "getPubKeyByHash(string) should be declared external:\n\t- Sylence.getPubKeyByHash(string) ()\n",
        "markdown": "getPubKeyByHash(string) should be declared external:\n\t- [Sylence.getPubKeyByHash(string)]()\n",
        "first_markdown_element": "",
        "id": "272246003abc9144972b0df6cc635f428a73189a6a4c40481e7d0bc185467561",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "registerNewPubKeyForHash",
            "source_mapping": {
              "start": 386,
              "length": 183,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Sylence",
                "source_mapping": {
                  "start": 25,
                  "length": 547,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "registerNewPubKeyForHash(string,string)"
            }
          }
        ],
        "description": "registerNewPubKeyForHash(string,string) should be declared external:\n\t- Sylence.registerNewPubKeyForHash(string,string) ()\n",
        "markdown": "registerNewPubKeyForHash(string,string) should be declared external:\n\t- [Sylence.registerNewPubKeyForHash(string,string)]()\n",
        "first_markdown_element": "",
        "id": "4243face8a528baa8f89ca8f0069d17a47eac4cd8cb7c6448a1326d0d0f95cf9",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      }
    ]
  }
}