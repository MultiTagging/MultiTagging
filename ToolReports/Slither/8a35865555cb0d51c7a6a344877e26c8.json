{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "contract",
            "name": "SwarmRedistribution",
            "source_mapping": {
              "start": 1888,
              "length": 4290,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "node",
            "name": "dividendPathways[_to].push(dividendPathway(msg.sender,_value,now))",
            "source_mapping": {
              "start": 3310,
              "length": 185,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "transfer",
                "source_mapping": {
                  "start": 2720,
                  "length": 1361,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SwarmRedistribution",
                    "source_mapping": {
                      "start": 1888,
                      "length": 4290,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "transfer(address,uint256)"
                }
              }
            }
          }
        ],
        "description": "SwarmRedistribution () contract sets array length with a user-controlled value:\n\t- dividendPathways[_to].push(dividendPathway(msg.sender,_value,now)) ()\n",
        "markdown": "[SwarmRedistribution]() contract sets array length with a user-controlled value:\n\t- [dividendPathways[_to].push(dividendPathway(msg.sender,_value,now))]()\n",
        "first_markdown_element": "",
        "id": "438cac618346c31c9f85f74a6b106d43901cb1f6a58e3a0c77a3bcddc17fc198",
        "check": "controlled-array-length",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "CampaignBeneficiary",
            "source_mapping": {
              "start": 6180,
              "length": 756,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "node",
            "name": "dividendPathways[msg.sender].push(dividendPathway(JohanNygren,msg.value,now))",
            "source_mapping": {
              "start": 6655,
              "length": 196,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "simulatePathwayFromBeneficiary",
                "source_mapping": {
                  "start": 6428,
                  "length": 505,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "CampaignBeneficiary",
                    "source_mapping": {
                      "start": 6180,
                      "length": 756,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "simulatePathwayFromBeneficiary()"
                }
              }
            }
          }
        ],
        "description": "CampaignBeneficiary () contract sets array length with a user-controlled value:\n\t- dividendPathways[msg.sender].push(dividendPathway(JohanNygren,msg.value,now)) ()\n",
        "markdown": "[CampaignBeneficiary]() contract sets array length with a user-controlled value:\n\t- [dividendPathways[msg.sender].push(dividendPathway(JohanNygren,msg.value,now))]()\n",
        "first_markdown_element": "",
        "id": "a0e0b2f777ef4efbb46f3eb318af0fc2c0b4a1a2c7c35655c1c60f28a9ea1bf1",
        "check": "controlled-array-length",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "CampaignBeneficiary",
            "source_mapping": {
              "start": 6180,
              "length": 756,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "function",
            "name": "transfer",
            "source_mapping": {
              "start": 2720,
              "length": 1361,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SwarmRedistribution",
                "source_mapping": {
                  "start": 1888,
                  "length": 4290,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "transfer(address,uint256)"
            }
          }
        ],
        "description": "CampaignBeneficiary () has incorrect ERC20 function interface:SwarmRedistribution.transfer(address,uint256) ()\n",
        "markdown": "[CampaignBeneficiary]() has incorrect ERC20 function interface:[SwarmRedistribution.transfer(address,uint256)]()\n",
        "first_markdown_element": "",
        "id": "4a568421493362d1c5a75fe1c4b8f7e9fdf2e856bfb35468507ae4713aa35ce1",
        "check": "erc20-interface",
        "impact": "Medium",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "iterateThroughSwarm",
            "source_mapping": {
              "start": 4092,
              "length": 1140,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SwarmRedistribution",
                "source_mapping": {
                  "start": 1888,
                  "length": 4290,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "iterateThroughSwarm(address,uint256,uint256)"
            }
          },
          {
            "type": "node",
            "name": "timeStamp <= _timeStamp",
            "source_mapping": {
              "start": 4368,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "iterateThroughSwarm",
                "source_mapping": {
                  "start": 4092,
                  "length": 1140,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SwarmRedistribution",
                    "source_mapping": {
                      "start": 1888,
                      "length": 4290,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "iterateThroughSwarm(address,uint256,uint256)"
                }
              }
            }
          }
        ],
        "description": "SwarmRedistribution.iterateThroughSwarm(address,uint256,uint256) () uses timestamp for comparisons\n\tDangerous comparisons:\n\t- timeStamp <= _timeStamp ()\n",
        "markdown": "[SwarmRedistribution.iterateThroughSwarm(address,uint256,uint256)]() uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [timeStamp <= _timeStamp]()\n",
        "first_markdown_element": "",
        "id": "905440adbb8b4bbd41a0ae87dd4bc1734f8bb92e4c3692c5ef7a2067eb0ed6de",
        "check": "timestamp",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "iterateThroughSwarm",
            "source_mapping": {
              "start": 4092,
              "length": 1140,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SwarmRedistribution",
                "source_mapping": {
                  "start": 1888,
                  "length": 4290,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "iterateThroughSwarm(address,uint256,uint256)"
            }
          },
          {
            "type": "node",
            "name": "isHuman[node] == true && inHumans[node] == false",
            "source_mapping": {
              "start": 4554,
              "length": 88,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "iterateThroughSwarm",
                "source_mapping": {
                  "start": 4092,
                  "length": 1140,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SwarmRedistribution",
                    "source_mapping": {
                      "start": 1888,
                      "length": 4290,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "iterateThroughSwarm(address,uint256,uint256)"
                }
              }
            }
          }
        ],
        "description": "SwarmRedistribution.iterateThroughSwarm(address,uint256,uint256) () compares to a boolean constant:\n\t-isHuman[node] == true && inHumans[node] == false ()\n",
        "markdown": "[SwarmRedistribution.iterateThroughSwarm(address,uint256,uint256)]() compares to a boolean constant:\n\t-[isHuman[node] == true && inHumans[node] == false]()\n",
        "first_markdown_element": "",
        "id": "56cc9d8a3bc990a43e8d40eac05ec421b6cce92b208e02694b47d7be09f044d3",
        "check": "boolean-equal",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "isOpen",
            "source_mapping": {
              "start": 390,
              "length": 95,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Campaign",
                "source_mapping": {
                  "start": 25,
                  "length": 557,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "isOpen()"
            }
          },
          {
            "type": "node",
            "name": "campaignOpen != true",
            "source_mapping": {
              "start": 428,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "isOpen",
                "source_mapping": {
                  "start": 390,
                  "length": 95,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Campaign",
                    "source_mapping": {
                      "start": 25,
                      "length": 557,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "isOpen()"
                }
              }
            }
          }
        ],
        "description": "Campaign.isOpen() () compares to a boolean constant:\n\t-campaignOpen != true ()\n",
        "markdown": "[Campaign.isOpen()]() compares to a boolean constant:\n\t-[campaignOpen != true]()\n",
        "first_markdown_element": "",
        "id": "f6f8ae52e2ea86da4d303e7dec9ee39be768a88ba7135c367c0398f229ce2353",
        "check": "boolean-equal",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 345,
              "length": 5,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "onlyJohan",
                "source_mapping": {
                  "start": 277,
                  "length": 103,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Campaign",
                    "source_mapping": {
                      "start": 25,
                      "length": 557,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "onlyJohan()"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected THROW ():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "markdown": "Deprecated standard detected [THROW]():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "first_markdown_element": "",
        "id": "f5556cf1c70b64b9e4b1fc32044dd970b5f2c8b9fc21b7971fda01971033f2d5",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "pragma",
            "name": "^0.4.6",
            "source_mapping": {
              "start": 0,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "directive": [
                "solidity",
                "^",
                "0.4",
                ".6"
              ]
            }
          }
        ],
        "description": "Pragma version^0.4.6 () allows old versions\n",
        "markdown": "Pragma version[^0.4.6]() allows old versions\n",
        "first_markdown_element": "",
        "id": "54eae9514d5e93f8fb467cb6e12380204cb269720316b950ba80b399a769bf71",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [],
        "description": "solc-0.4.6 is not recommended for deployment\n",
        "markdown": "solc-0.4.6 is not recommended for deployment\n",
        "first_markdown_element": "",
        "id": "b2e09ce9c0c37029707bd5645a9a2972adb1c4c04948009825bacc17fa383ec8",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_value",
            "source_mapping": {
              "start": 2751,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "transfer",
                "source_mapping": {
                  "start": 2720,
                  "length": 1361,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SwarmRedistribution",
                    "source_mapping": {
                      "start": 1888,
                      "length": 4290,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "transfer(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter SwarmRedistribution.transfer(address,uint256)._value () is not in mixedCase\n",
        "markdown": "Parameter [SwarmRedistribution.transfer(address,uint256)._value]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "37a3e132c5a4fe6feadcf1b163ab990517743ffe47722091e63786c52a11610a",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_value",
            "source_mapping": {
              "start": 1604,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "sell",
                "source_mapping": {
                  "start": 1590,
                  "length": 293,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "RES",
                    "source_mapping": {
                      "start": 586,
                      "length": 1300,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "sell(uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter RES.sell(uint256)._value () is not in mixedCase\n",
        "markdown": "Parameter [RES.sell(uint256)._value]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "6f2e0aabde187ff7fdb7e3b51c046a91f365b89a6d4cdbdb3e3eee227aa0e313",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_timeStamp",
            "source_mapping": {
              "start": 4136,
              "length": 15,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "iterateThroughSwarm",
                "source_mapping": {
                  "start": 4092,
                  "length": 1140,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SwarmRedistribution",
                    "source_mapping": {
                      "start": 1888,
                      "length": 4290,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "iterateThroughSwarm(address,uint256,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter SwarmRedistribution.iterateThroughSwarm(address,uint256,uint256)._timeStamp () is not in mixedCase\n",
        "markdown": "Parameter [SwarmRedistribution.iterateThroughSwarm(address,uint256,uint256)._timeStamp]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "75edc895c9151e59907c5f1cf6bcd9eef641342249ec39ec80a690a785097a2e",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_taxCollected",
            "source_mapping": {
              "start": 5274,
              "length": 21,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "doSwarm",
                "source_mapping": {
                  "start": 5242,
                  "length": 559,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SwarmRedistribution",
                    "source_mapping": {
                      "start": 1888,
                      "length": 4290,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "doSwarm(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter SwarmRedistribution.doSwarm(address,uint256)._taxCollected () is not in mixedCase\n",
        "markdown": "Parameter [SwarmRedistribution.doSwarm(address,uint256)._taxCollected]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "81286f0ac07f6f79ffc11accf2624d8b3f71e6503a44e08005f1cd212b53f334",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_to",
            "source_mapping": {
              "start": 2738,
              "length": 11,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "transfer",
                "source_mapping": {
                  "start": 2720,
                  "length": 1361,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SwarmRedistribution",
                    "source_mapping": {
                      "start": 1888,
                      "length": 4290,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "transfer(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter SwarmRedistribution.transfer(address,uint256)._to () is not in mixedCase\n",
        "markdown": "Parameter [SwarmRedistribution.transfer(address,uint256)._to]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "8adbcb2f749c2ec35e125bc50abb42e5fd8a05164d3b08a4bb905bf4d056bda9",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "JohanNygren",
            "source_mapping": {
              "start": 54,
              "length": 26,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Campaign",
                "source_mapping": {
                  "start": 25,
                  "length": 557,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable Campaign.JohanNygren () is not in mixedCase\n",
        "markdown": "Variable [Campaign.JohanNygren]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "ace50631c04f64571f457a0e6ca246bac62a2f280ab26ca6d5214ab2856c9fb8",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_taxCollected",
            "source_mapping": {
              "start": 4153,
              "length": 18,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "iterateThroughSwarm",
                "source_mapping": {
                  "start": 4092,
                  "length": 1140,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SwarmRedistribution",
                    "source_mapping": {
                      "start": 1888,
                      "length": 4290,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "iterateThroughSwarm(address,uint256,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter SwarmRedistribution.iterateThroughSwarm(address,uint256,uint256)._taxCollected () is not in mixedCase\n",
        "markdown": "Parameter [SwarmRedistribution.iterateThroughSwarm(address,uint256,uint256)._taxCollected]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "c4392f1f4bd66bfa1d0e34f5c560ee086c29399faac8476c0cabbca4b33f69ac",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_leaf",
            "source_mapping": {
              "start": 5259,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "doSwarm",
                "source_mapping": {
                  "start": 5242,
                  "length": 559,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SwarmRedistribution",
                    "source_mapping": {
                      "start": 1888,
                      "length": 4290,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "doSwarm(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter SwarmRedistribution.doSwarm(address,uint256)._leaf () is not in mixedCase\n",
        "markdown": "Parameter [SwarmRedistribution.doSwarm(address,uint256)._leaf]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "c643402659488cf82bc11d70e2098e9b3b78d2819e6e668afbc3be135ab82c3b",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "struct",
            "name": "dividendPathway",
            "source_mapping": {
              "start": 1945,
              "length": 125,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SwarmRedistribution",
                "source_mapping": {
                  "start": 1888,
                  "length": 4290,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "structure",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Struct SwarmRedistribution.dividendPathway () is not in CapWords\n",
        "markdown": "Struct [SwarmRedistribution.dividendPathway]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "d11dfaa2e44e0f15348377142c02c9f2ca7667be59078a280f5f668862a34bc8",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_node",
            "source_mapping": {
              "start": 4121,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "iterateThroughSwarm",
                "source_mapping": {
                  "start": 4092,
                  "length": 1140,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SwarmRedistribution",
                    "source_mapping": {
                      "start": 1888,
                      "length": 4290,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "iterateThroughSwarm(address,uint256,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter SwarmRedistribution.iterateThroughSwarm(address,uint256,uint256)._node () is not in mixedCase\n",
        "markdown": "Parameter [SwarmRedistribution.iterateThroughSwarm(address,uint256,uint256)._node]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "d2b0ff9e9440ff213aef10cdb1b255ee2345a62dff546b87d2bc70cacaae07c4",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "sell",
            "source_mapping": {
              "start": 1590,
              "length": 293,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RES",
                "source_mapping": {
                  "start": 586,
                  "length": 1300,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "sell(uint256)"
            }
          },
          {
            "type": "node",
            "name": "! msg.sender.send(_value)",
            "source_mapping": {
              "start": 1758,
              "length": 24,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "sell",
                "source_mapping": {
                  "start": 1590,
                  "length": 293,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "RES",
                    "source_mapping": {
                      "start": 586,
                      "length": 1300,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "sell(uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "totalSupply -= _value",
            "source_mapping": {
              "start": 1808,
              "length": 21,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "sell",
                "source_mapping": {
                  "start": 1590,
                  "length": 293,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "RES",
                    "source_mapping": {
                      "start": 586,
                      "length": 1300,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "sell(uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "totalSupply"
            }
          },
          {
            "type": "node",
            "name": "Sold(msg.sender,_value)",
            "source_mapping": {
              "start": 1847,
              "length": 24,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "sell",
                "source_mapping": {
                  "start": 1590,
                  "length": 293,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "RES",
                    "source_mapping": {
                      "start": 586,
                      "length": 1300,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "sell(uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          }
        ],
        "description": "Reentrancy in RES.sell(uint256) ():\n\tExternal calls:\n\t- ! msg.sender.send(_value) ()\n\tState variables written after the call(s):\n\t- totalSupply -= _value ()\n\tEvent emitted after the call(s):\n\t- Sold(msg.sender,_value) ()\n",
        "markdown": "Reentrancy in [RES.sell(uint256)]():\n\tExternal calls:\n\t- [! msg.sender.send(_value)]()\n\tState variables written after the call(s):\n\t- [totalSupply -= _value]()\n\tEvent emitted after the call(s):\n\t- [Sold(msg.sender,_value)]()\n",
        "first_markdown_element": "",
        "id": "f58dcd464f5de65f08508dd5afc095e03c06b28b442a05e0f42c1bfe2584a3d8",
        "check": "reentrancy-unlimited-gas",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "i < humans.length",
            "source_mapping": {
              "start": 5406,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "doSwarm",
                "source_mapping": {
                  "start": 5242,
                  "length": 559,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SwarmRedistribution",
                    "source_mapping": {
                      "start": 1888,
                      "length": 4290,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "doSwarm(address,uint256)"
                }
              }
            }
          }
        ],
        "description": "Loop condition i < humans.length () should use cached array length instead of referencing `length` member of the storage array.\n ",
        "markdown": "Loop condition [i < humans.length]() should use cached array length instead of referencing `length` member of the storage array.\n ",
        "first_markdown_element": "",
        "id": "9ae41d2cdcabf5aceecd6f4e1b747f0ad0c50f250cf5088fafcd26f7f9950662",
        "check": "cache-array-length",
        "impact": "Optimization",
        "confidence": "High"
      }
    ]
  }
}