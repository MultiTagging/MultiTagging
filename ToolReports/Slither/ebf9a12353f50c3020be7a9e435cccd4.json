{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 1535,
              "length": 5,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "addContractToBounty",
                "source_mapping": {
                  "start": 1373,
                  "length": 409,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "AttestationManager",
                    "source_mapping": {
                      "start": 83,
                      "length": 2582,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "addContractToBounty(uint256,uint256)"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected THROW ():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "markdown": "Deprecated standard detected [THROW]():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "first_markdown_element": "",
        "id": "f5556cf1c70b64b9e4b1fc32044dd970b5f2c8b9fc21b7971fda01971033f2d5",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [],
        "description": "solc-0.4.0 is not recommended for deployment\n",
        "markdown": "solc-0.4.0 is not recommended for deployment\n",
        "first_markdown_element": "",
        "id": "e676d9e89e623fa7675baecce41eb7ab21d1d8ec9e856bc5b047e6cfb50b37ca",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "pragma",
            "name": "^0.4.0",
            "source_mapping": {
              "start": 0,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "directive": [
                "solidity",
                "^",
                "0.4",
                ".0"
              ]
            }
          }
        ],
        "description": "Pragma version^0.4.0 () allows old versions\n",
        "markdown": "Pragma version[^0.4.0]() allows old versions\n",
        "first_markdown_element": "",
        "id": "f4d0f96f990510a571c7ae954763f848d217d6f86fa5953d251f28f5221969e2",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_contractHash",
            "source_mapping": {
              "start": 894,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "addContractWithInfo",
                "source_mapping": {
                  "start": 865,
                  "length": 236,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "AttestationManager",
                    "source_mapping": {
                      "start": 83,
                      "length": 2582,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "addContractWithInfo(string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter AttestationManager.addContractWithInfo(string)._contractHash () is not in mixedCase\n",
        "markdown": "Parameter [AttestationManager.addContractWithInfo(string)._contractHash]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "121f2ef218051cee383cdd1354755179183792654ac0fd079c0f6017458767ca",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_title",
            "source_mapping": {
              "start": 1134,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "addBugBountyWithInfo",
                "source_mapping": {
                  "start": 1104,
                  "length": 266,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "AttestationManager",
                    "source_mapping": {
                      "start": 83,
                      "length": 2582,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "addBugBountyWithInfo(string,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter AttestationManager.addBugBountyWithInfo(string,uint256)._title () is not in mixedCase\n",
        "markdown": "Parameter [AttestationManager.addBugBountyWithInfo(string,uint256)._title]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "3649bb67731655b39a2d39c0604ba29fd37161773de34af3b06cd65d4ba3d3fe",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_attestationType",
            "source_mapping": {
              "start": 1840,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "attestToContract",
                "source_mapping": {
                  "start": 1786,
                  "length": 359,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "AttestationManager",
                    "source_mapping": {
                      "start": 83,
                      "length": 2582,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "attestToContract(uint256,bool,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter AttestationManager.attestToContract(uint256,bool,string)._attestationType () is not in mixedCase\n",
        "markdown": "Parameter [AttestationManager.attestToContract(uint256,bool,string)._attestationType]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "5309268b05048b588c5f17d889373a573750d493400fa0e7cb1591c5c7a18598",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_amount",
            "source_mapping": {
              "start": 1149,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "addBugBountyWithInfo",
                "source_mapping": {
                  "start": 1104,
                  "length": 266,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "AttestationManager",
                    "source_mapping": {
                      "start": 83,
                      "length": 2582,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "addBugBountyWithInfo(string,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter AttestationManager.addBugBountyWithInfo(string,uint256)._amount () is not in mixedCase\n",
        "markdown": "Parameter [AttestationManager.addBugBountyWithInfo(string,uint256)._amount]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "8616a8228f9fd756b183e7178ec026f65017cc1773a813f287d0a58b90703a06",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_attestation",
            "source_mapping": {
              "start": 1821,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "attestToContract",
                "source_mapping": {
                  "start": 1786,
                  "length": 359,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "AttestationManager",
                    "source_mapping": {
                      "start": 83,
                      "length": 2582,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "attestToContract(uint256,bool,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter AttestationManager.attestToContract(uint256,bool,string)._attestation () is not in mixedCase\n",
        "markdown": "Parameter [AttestationManager.attestToContract(uint256,bool,string)._attestation]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "c1c692abed78bf5206b783e84f7ad3d08adb4297e96f0ab7ef2a2294a1d4da5c",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "attestToContract",
            "source_mapping": {
              "start": 1786,
              "length": 359,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "AttestationManager",
                "source_mapping": {
                  "start": 83,
                  "length": 2582,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "attestToContract(uint256,bool,string)"
            }
          }
        ],
        "description": "attestToContract(uint256,bool,string) should be declared external:\n\t- AttestationManager.attestToContract(uint256,bool,string) ()\n",
        "markdown": "attestToContract(uint256,bool,string) should be declared external:\n\t- [AttestationManager.attestToContract(uint256,bool,string)]()\n",
        "first_markdown_element": "",
        "id": "173d82a1b1e5478b0d03514f71437ea596767075563e66fa378e2d8b60aded72",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "addContractWithInfo",
            "source_mapping": {
              "start": 865,
              "length": 236,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "AttestationManager",
                "source_mapping": {
                  "start": 83,
                  "length": 2582,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "addContractWithInfo(string)"
            }
          }
        ],
        "description": "addContractWithInfo(string) should be declared external:\n\t- AttestationManager.addContractWithInfo(string) ()\n",
        "markdown": "addContractWithInfo(string) should be declared external:\n\t- [AttestationManager.addContractWithInfo(string)]()\n",
        "first_markdown_element": "",
        "id": "b45c23dc9ec6216049d786b00b54938b14864f11c025c666db3099e561eea5fe",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "addBugBountyWithInfo",
            "source_mapping": {
              "start": 1104,
              "length": 266,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "AttestationManager",
                "source_mapping": {
                  "start": 83,
                  "length": 2582,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "addBugBountyWithInfo(string,uint256)"
            }
          }
        ],
        "description": "addBugBountyWithInfo(string,uint256) should be declared external:\n\t- AttestationManager.addBugBountyWithInfo(string,uint256) ()\n",
        "markdown": "addBugBountyWithInfo(string,uint256) should be declared external:\n\t- [AttestationManager.addBugBountyWithInfo(string,uint256)]()\n",
        "first_markdown_element": "",
        "id": "d734a9dde44cda85fa0d6f32d078b020c359142858ae5526e0fa094666e73752",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      }
    ]
  }
}