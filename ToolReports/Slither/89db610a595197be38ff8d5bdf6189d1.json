{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "function",
            "name": "setOwner",
            "source_mapping": {
              "start": 3305,
              "length": 81,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "TimeStamp",
                "source_mapping": {
                  "start": 25,
                  "length": 3950,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "setOwner(address)"
            }
          },
          {
            "type": "node",
            "name": "owner = _newOwner",
            "source_mapping": {
              "start": 3362,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setOwner",
                "source_mapping": {
                  "start": 3305,
                  "length": 81,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TimeStamp",
                    "source_mapping": {
                      "start": 25,
                      "length": 3950,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setOwner(address)"
                }
              }
            }
          }
        ],
        "description": "TimeStamp.setOwner(address) () should emit an event for: \n\t- owner = _newOwner () \n",
        "markdown": "[TimeStamp.setOwner(address)]() should emit an event for: \n\t- [owner = _newOwner]() \n",
        "first_markdown_element": "",
        "id": "38a23128ea36275d1880f26427c669f43527a0a2d61ac42b331f6cd21d3c16ed",
        "check": "events-access",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_newContract",
            "source_mapping": {
              "start": 3417,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setNewContract",
                "source_mapping": {
                  "start": 3393,
                  "length": 99,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TimeStamp",
                    "source_mapping": {
                      "start": 25,
                      "length": 3950,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setNewContract(address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "newContract = _newContract",
            "source_mapping": {
              "start": 3459,
              "length": 26,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setNewContract",
                "source_mapping": {
                  "start": 3393,
                  "length": 99,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TimeStamp",
                    "source_mapping": {
                      "start": 25,
                      "length": 3950,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setNewContract(address)"
                }
              }
            }
          }
        ],
        "description": "TimeStamp.setNewContract(address)._newContract () lacks a zero-check on :\n\t\t- newContract = _newContract ()\n",
        "markdown": "[TimeStamp.setNewContract(address)._newContract]() lacks a zero-check on :\n\t\t- [newContract = _newContract]()\n",
        "first_markdown_element": "",
        "id": "351e2123b4f2418980544ac569bf6912990cc17b61d99c86f3ea580ce7ebaac8",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_newOwner",
            "source_mapping": {
              "start": 3323,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setOwner",
                "source_mapping": {
                  "start": 3305,
                  "length": 81,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TimeStamp",
                    "source_mapping": {
                      "start": 25,
                      "length": 3950,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setOwner(address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "owner = _newOwner",
            "source_mapping": {
              "start": 3362,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setOwner",
                "source_mapping": {
                  "start": 3305,
                  "length": 81,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TimeStamp",
                    "source_mapping": {
                      "start": 25,
                      "length": 3950,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setOwner(address)"
                }
              }
            }
          }
        ],
        "description": "TimeStamp.setOwner(address)._newOwner () lacks a zero-check on :\n\t\t- owner = _newOwner ()\n",
        "markdown": "[TimeStamp.setOwner(address)._newOwner]() lacks a zero-check on :\n\t\t- [owner = _newOwner]()\n",
        "first_markdown_element": "",
        "id": "8b4c0c2897bd36c7166e172eedcda261fbdd56ae56209c7c4970b40efbc680ba",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_oldContract",
            "source_mapping": {
              "start": 3523,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setOldContract",
                "source_mapping": {
                  "start": 3499,
                  "length": 99,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TimeStamp",
                    "source_mapping": {
                      "start": 25,
                      "length": 3950,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setOldContract(address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "oldContract = _oldContract",
            "source_mapping": {
              "start": 3565,
              "length": 26,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setOldContract",
                "source_mapping": {
                  "start": 3499,
                  "length": 99,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TimeStamp",
                    "source_mapping": {
                      "start": 25,
                      "length": 3950,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setOldContract(address)"
                }
              }
            }
          }
        ],
        "description": "TimeStamp.setOldContract(address)._oldContract () lacks a zero-check on :\n\t\t- oldContract = _oldContract ()\n",
        "markdown": "[TimeStamp.setOldContract(address)._oldContract]() lacks a zero-check on :\n\t\t- [oldContract = _oldContract]()\n",
        "first_markdown_element": "",
        "id": "c4b6725282c9a43210f3b875adb8eca9403b0b5d9bb26aad0665edb22dd3f26f",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "onlyowner",
            "source_mapping": {
              "start": 644,
              "length": 48,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "TimeStamp",
                "source_mapping": {
                  "start": 25,
                  "length": 3950,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "onlyowner()"
            }
          }
        ],
        "description": "Modifier TimeStamp.onlyowner() () does not always execute _; or revert",
        "markdown": "Modifier [TimeStamp.onlyowner()]() does not always execute _; or revert",
        "first_markdown_element": "",
        "id": "da1576f1c3688a07e79fa09277acfab4be505f9549b4057ebcb6120f70e12294",
        "check": "incorrect-modifier",
        "impact": "Low",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "suicide(address)(owner)",
            "source_mapping": {
              "start": 3758,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "destroy",
                "source_mapping": {
                  "start": 3719,
                  "length": 83,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TimeStamp",
                    "source_mapping": {
                      "start": 25,
                      "length": 3950,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "destroy()"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected suicide(address)(owner) ():\n\t- Usage of \"suicide()\" should be replaced with \"selfdestruct()\"\n",
        "markdown": "Deprecated standard detected [suicide(address)(owner)]():\n\t- Usage of \"suicide()\" should be replaced with \"selfdestruct()\"\n",
        "first_markdown_element": "",
        "id": "af38f120e2d6ce3d7567404eb936f0124e2e9b2e954f0ddc56088aa4c884e377",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 982,
              "length": 5,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "getDocumentRecord",
                "source_mapping": {
                  "start": 770,
                  "length": 435,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TimeStamp",
                    "source_mapping": {
                      "start": 25,
                      "length": 3950,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "getDocumentRecord(uint256)"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected THROW ():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "markdown": "Deprecated standard detected [THROW]():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "first_markdown_element": "",
        "id": "f5556cf1c70b64b9e4b1fc32044dd970b5f2c8b9fc21b7971fda01971033f2d5",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "pragma",
            "name": "^0.4.8",
            "source_mapping": {
              "start": 0,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "directive": [
                "solidity",
                "^",
                "0.4",
                ".8"
              ]
            }
          }
        ],
        "description": "Pragma version^0.4.8 () allows old versions\n",
        "markdown": "Pragma version[^0.4.8]() allows old versions\n",
        "first_markdown_element": "",
        "id": "dd43bca9b08bc1fa7b94a3e619671f3c2c98a72b8b3bf0caf1e1f86665ec4569",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [],
        "description": "solc-0.4.8 is not recommended for deployment\n",
        "markdown": "solc-0.4.8 is not recommended for deployment\n",
        "first_markdown_element": "",
        "id": "ebbd8e423b3c73a93e118f8daed7c9ac33b0d525351f79b5ea41076caa3c1bc5",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_documentId",
            "source_mapping": {
              "start": 2729,
              "length": 18,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "addSharedDocument",
                "source_mapping": {
                  "start": 2702,
                  "length": 596,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TimeStamp",
                    "source_mapping": {
                      "start": 25,
                      "length": 3950,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "addSharedDocument(string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TimeStamp.addSharedDocument(string,string,string,string)._documentId () is not in mixedCase\n",
        "markdown": "Parameter [TimeStamp.addSharedDocument(string,string,string,string)._documentId]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "00d5816b96a136ae5ffd2745e0a8e657f2d973ed7d464a3778e58d84fb2fc02e",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_sharedLogin",
            "source_mapping": {
              "start": 2795,
              "length": 19,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "addSharedDocument",
                "source_mapping": {
                  "start": 2702,
                  "length": 596,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TimeStamp",
                    "source_mapping": {
                      "start": 25,
                      "length": 3950,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "addSharedDocument(string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TimeStamp.addSharedDocument(string,string,string,string)._sharedLogin () is not in mixedCase\n",
        "markdown": "Parameter [TimeStamp.addSharedDocument(string,string,string,string)._sharedLogin]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "06457a23cf9599912b4f75e747b2326f441c9d691e28ab9a897141163510266a",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_newContract",
            "source_mapping": {
              "start": 3417,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setNewContract",
                "source_mapping": {
                  "start": 3393,
                  "length": 99,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TimeStamp",
                    "source_mapping": {
                      "start": 25,
                      "length": 3950,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setNewContract(address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TimeStamp.setNewContract(address)._newContract () is not in mixedCase\n",
        "markdown": "Parameter [TimeStamp.setNewContract(address)._newContract]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "0e7408fb8bb37213101caa3491ed555f1975efbb09248b7c16fa95fd0a2d23d2",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_index",
            "source_mapping": {
              "start": 797,
              "length": 11,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "getDocumentRecord",
                "source_mapping": {
                  "start": 770,
                  "length": 435,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TimeStamp",
                    "source_mapping": {
                      "start": 25,
                      "length": 3950,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "getDocumentRecord(uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TimeStamp.getDocumentRecord(uint256)._index () is not in mixedCase\n",
        "markdown": "Parameter [TimeStamp.getDocumentRecord(uint256)._index]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "2fad2240970aafd0e21649bc7e35fc2c8d59a312eb16dca579d44c7ea26a8863",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_oldContract",
            "source_mapping": {
              "start": 3523,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setOldContract",
                "source_mapping": {
                  "start": 3499,
                  "length": 99,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TimeStamp",
                    "source_mapping": {
                      "start": 25,
                      "length": 3950,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setOldContract(address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TimeStamp.setOldContract(address)._oldContract () is not in mixedCase\n",
        "markdown": "Parameter [TimeStamp.setOldContract(address)._oldContract]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "3056d3703e6342327577e7378d5b6d44bac39d841fc98f0c425c926fe7e5e1c7",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_sharedDocumentId",
            "source_mapping": {
              "start": 2769,
              "length": 24,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "addSharedDocument",
                "source_mapping": {
                  "start": 2702,
                  "length": 596,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TimeStamp",
                    "source_mapping": {
                      "start": 25,
                      "length": 3950,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "addSharedDocument(string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TimeStamp.addSharedDocument(string,string,string,string)._sharedDocumentId () is not in mixedCase\n",
        "markdown": "Parameter [TimeStamp.addSharedDocument(string,string,string,string)._sharedDocumentId]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "5cc64c4b3d81290981eaea7f95759feb8b32727311a1ccb722744e24052521de",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_sharedDocumentIndex",
            "source_mapping": {
              "start": 1592,
              "length": 25,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "getSharedDocument",
                "source_mapping": {
                  "start": 1545,
                  "length": 408,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TimeStamp",
                    "source_mapping": {
                      "start": 25,
                      "length": 3950,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "getSharedDocument(string,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TimeStamp.getSharedDocument(string,uint256)._sharedDocumentIndex () is not in mixedCase\n",
        "markdown": "Parameter [TimeStamp.getSharedDocument(string,uint256)._sharedDocumentIndex]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "a1686660b0cdd968e19e0e8cb6e2df098d5d507e652b04c648116a90daaf9900",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_dateUploaded",
            "source_mapping": {
              "start": 2126,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "addDocumentRecord",
                "source_mapping": {
                  "start": 2079,
                  "length": 616,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TimeStamp",
                    "source_mapping": {
                      "start": 25,
                      "length": 3950,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "addDocumentRecord(string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TimeStamp.addDocumentRecord(string,string,string,string)._dateUploaded () is not in mixedCase\n",
        "markdown": "Parameter [TimeStamp.addDocumentRecord(string,string,string,string)._dateUploaded]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "b4a0bff522cf351c7d18110625dc986967e084b87aa5e8c1d630dcc5506a0611",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_documentId",
            "source_mapping": {
              "start": 1243,
              "length": 18,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "getDocumentRecordById",
                "source_mapping": {
                  "start": 1212,
                  "length": 326,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TimeStamp",
                    "source_mapping": {
                      "start": 25,
                      "length": 3950,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "getDocumentRecordById(string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TimeStamp.getDocumentRecordById(string)._documentId () is not in mixedCase\n",
        "markdown": "Parameter [TimeStamp.getDocumentRecordById(string)._documentId]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "b811193f5c17dbd19552236aecd5209f7839fa2079fd481c5c324cf9744486a7",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_documentId",
            "source_mapping": {
              "start": 2106,
              "length": 18,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "addDocumentRecord",
                "source_mapping": {
                  "start": 2079,
                  "length": 616,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TimeStamp",
                    "source_mapping": {
                      "start": 25,
                      "length": 3950,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "addDocumentRecord(string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TimeStamp.addDocumentRecord(string,string,string,string)._documentId () is not in mixedCase\n",
        "markdown": "Parameter [TimeStamp.addDocumentRecord(string,string,string,string)._documentId]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "c9ac97ff96185d5e2b334660849e47278c70963b3e97743ab804779f57b45db5",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_documentId",
            "source_mapping": {
              "start": 1572,
              "length": 18,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "getSharedDocument",
                "source_mapping": {
                  "start": 1545,
                  "length": 408,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TimeStamp",
                    "source_mapping": {
                      "start": 25,
                      "length": 3950,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "getSharedDocument(string,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TimeStamp.getSharedDocument(string,uint256)._documentId () is not in mixedCase\n",
        "markdown": "Parameter [TimeStamp.getSharedDocument(string,uint256)._documentId]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "cb9733b5070172ec0273cf5105fed80c1523bd42a6b7fe450a1c30f7487c1bdb",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_ownerLogin",
            "source_mapping": {
              "start": 2170,
              "length": 18,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "addDocumentRecord",
                "source_mapping": {
                  "start": 2079,
                  "length": 616,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TimeStamp",
                    "source_mapping": {
                      "start": 25,
                      "length": 3950,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "addDocumentRecord(string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TimeStamp.addDocumentRecord(string,string,string,string)._ownerLogin () is not in mixedCase\n",
        "markdown": "Parameter [TimeStamp.addDocumentRecord(string,string,string,string)._ownerLogin]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "d5d7567db85d29e3bcf8b0804dfe6eda9fa76b317e2e192b1a7dceea88a74b8a",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_documentHash",
            "source_mapping": {
              "start": 2148,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "addDocumentRecord",
                "source_mapping": {
                  "start": 2079,
                  "length": 616,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TimeStamp",
                    "source_mapping": {
                      "start": 25,
                      "length": 3950,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "addDocumentRecord(string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TimeStamp.addDocumentRecord(string,string,string,string)._documentHash () is not in mixedCase\n",
        "markdown": "Parameter [TimeStamp.addDocumentRecord(string,string,string,string)._documentHash]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "e72e832eb0345871f008989c73d6197862422725fced2b726e1e7164631515fb",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_dateShared",
            "source_mapping": {
              "start": 2749,
              "length": 18,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "addSharedDocument",
                "source_mapping": {
                  "start": 2702,
                  "length": 596,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TimeStamp",
                    "source_mapping": {
                      "start": 25,
                      "length": 3950,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "addSharedDocument(string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TimeStamp.addSharedDocument(string,string,string,string)._dateShared () is not in mixedCase\n",
        "markdown": "Parameter [TimeStamp.addSharedDocument(string,string,string,string)._dateShared]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "f4aaac9adff8481b4248a51ef7f1ca15102b132d9ea92026a67daf58e54b4352",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_newOwner",
            "source_mapping": {
              "start": 3323,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setOwner",
                "source_mapping": {
                  "start": 3305,
                  "length": 81,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TimeStamp",
                    "source_mapping": {
                      "start": 25,
                      "length": 3950,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setOwner(address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TimeStamp.setOwner(address)._newOwner () is not in mixedCase\n",
        "markdown": "Parameter [TimeStamp.setOwner(address)._newOwner]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "f7a08123410055c35a7d3230472d8bcb74ca15dae92b4e45655122d24936af96",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_documentId",
            "source_mapping": {
              "start": 1243,
              "length": 18,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "getDocumentRecordById",
                "source_mapping": {
                  "start": 1212,
                  "length": 326,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TimeStamp",
                    "source_mapping": {
                      "start": 25,
                      "length": 3950,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "getDocumentRecordById(string)"
                }
              }
            }
          },
          {
            "type": "variable",
            "name": "documentIds",
            "source_mapping": {
              "start": 528,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "TimeStamp",
                "source_mapping": {
                  "start": 25,
                  "length": 3950,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "Variable TimeStamp.getDocumentRecordById(string)._documentId () is too similar to TimeStamp.documentIds ()\n",
        "markdown": "Variable [TimeStamp.getDocumentRecordById(string)._documentId]() is too similar to [TimeStamp.documentIds]()\n",
        "first_markdown_element": "",
        "id": "1983a895f6dd1b08e61912383ad6ca425a97b926b1b2b24166c184fb2c9f9ad7",
        "check": "similar-names",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_documentId",
            "source_mapping": {
              "start": 2106,
              "length": 18,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "addDocumentRecord",
                "source_mapping": {
                  "start": 2079,
                  "length": 616,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TimeStamp",
                    "source_mapping": {
                      "start": 25,
                      "length": 3950,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "addDocumentRecord(string,string,string,string)"
                }
              }
            }
          },
          {
            "type": "variable",
            "name": "documentIds",
            "source_mapping": {
              "start": 528,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "TimeStamp",
                "source_mapping": {
                  "start": 25,
                  "length": 3950,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "Variable TimeStamp.addDocumentRecord(string,string,string,string)._documentId () is too similar to TimeStamp.documentIds ()\n",
        "markdown": "Variable [TimeStamp.addDocumentRecord(string,string,string,string)._documentId]() is too similar to [TimeStamp.documentIds]()\n",
        "first_markdown_element": "",
        "id": "aeaed9a0a37db7d72a5cdc6f66b2ed3a83e5cbe18450b4bbc4acd91901564d93",
        "check": "similar-names",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_documentId",
            "source_mapping": {
              "start": 2729,
              "length": 18,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "addSharedDocument",
                "source_mapping": {
                  "start": 2702,
                  "length": 596,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TimeStamp",
                    "source_mapping": {
                      "start": 25,
                      "length": 3950,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "addSharedDocument(string,string,string,string)"
                }
              }
            }
          },
          {
            "type": "variable",
            "name": "documentIds",
            "source_mapping": {
              "start": 528,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "TimeStamp",
                "source_mapping": {
                  "start": 25,
                  "length": 3950,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "Variable TimeStamp.addSharedDocument(string,string,string,string)._documentId () is too similar to TimeStamp.documentIds ()\n",
        "markdown": "Variable [TimeStamp.addSharedDocument(string,string,string,string)._documentId]() is too similar to [TimeStamp.documentIds]()\n",
        "first_markdown_element": "",
        "id": "e96e353afc54fb449c4ef78f5b76272cc1d8f139e00255531f38ee20b9f39e50",
        "check": "similar-names",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_documentId",
            "source_mapping": {
              "start": 1572,
              "length": 18,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "getSharedDocument",
                "source_mapping": {
                  "start": 1545,
                  "length": 408,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TimeStamp",
                    "source_mapping": {
                      "start": 25,
                      "length": 3950,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "getSharedDocument(string,uint256)"
                }
              }
            }
          },
          {
            "type": "variable",
            "name": "documentIds",
            "source_mapping": {
              "start": 528,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "TimeStamp",
                "source_mapping": {
                  "start": 25,
                  "length": 3950,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "Variable TimeStamp.getSharedDocument(string,uint256)._documentId () is too similar to TimeStamp.documentIds ()\n",
        "markdown": "Variable [TimeStamp.getSharedDocument(string,uint256)._documentId]() is too similar to [TimeStamp.documentIds]()\n",
        "first_markdown_element": "",
        "id": "feef0130787913a18a45b5899f379fa55e592722baa598d23921dd8c2cc2e0c5",
        "check": "similar-names",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "addDocumentRecord",
            "source_mapping": {
              "start": 2079,
              "length": 616,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "TimeStamp",
                "source_mapping": {
                  "start": 25,
                  "length": 3950,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "addDocumentRecord(string,string,string,string)"
            }
          }
        ],
        "description": "addDocumentRecord(string,string,string,string) should be declared external:\n\t- TimeStamp.addDocumentRecord(string,string,string,string) ()\n",
        "markdown": "addDocumentRecord(string,string,string,string) should be declared external:\n\t- [TimeStamp.addDocumentRecord(string,string,string,string)]()\n",
        "first_markdown_element": "",
        "id": "459a6d43abe6419dccb809a7ca0c334941d6db15bab54818abae8eb0e0cdf8f3",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "getDocumentRecordById",
            "source_mapping": {
              "start": 1212,
              "length": 326,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "TimeStamp",
                "source_mapping": {
                  "start": 25,
                  "length": 3950,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "getDocumentRecordById(string)"
            }
          }
        ],
        "description": "getDocumentRecordById(string) should be declared external:\n\t- TimeStamp.getDocumentRecordById(string) ()\n",
        "markdown": "getDocumentRecordById(string) should be declared external:\n\t- [TimeStamp.getDocumentRecordById(string)]()\n",
        "first_markdown_element": "",
        "id": "5b907fda1aa85a3886358fb69fd8a7c4046cc51f0f09588097dba295be2a79d5",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "getSharedDocument",
            "source_mapping": {
              "start": 1545,
              "length": 408,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "TimeStamp",
                "source_mapping": {
                  "start": 25,
                  "length": 3950,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "getSharedDocument(string,uint256)"
            }
          }
        ],
        "description": "getSharedDocument(string,uint256) should be declared external:\n\t- TimeStamp.getSharedDocument(string,uint256) ()\n",
        "markdown": "getSharedDocument(string,uint256) should be declared external:\n\t- [TimeStamp.getSharedDocument(string,uint256)]()\n",
        "first_markdown_element": "",
        "id": "71af6ecc1273a5cd19be619cc16b497f99d4552d8a81f607c3490e99fcfc0a8f",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "addSharedDocument",
            "source_mapping": {
              "start": 2702,
              "length": 596,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "TimeStamp",
                "source_mapping": {
                  "start": 25,
                  "length": 3950,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "addSharedDocument(string,string,string,string)"
            }
          }
        ],
        "description": "addSharedDocument(string,string,string,string) should be declared external:\n\t- TimeStamp.addSharedDocument(string,string,string,string) ()\n",
        "markdown": "addSharedDocument(string,string,string,string) should be declared external:\n\t- [TimeStamp.addSharedDocument(string,string,string,string)]()\n",
        "first_markdown_element": "",
        "id": "cfe1cbeb39c3b9ecef2ecca9f8448dfa0585d5bad2f483f3a1126789f88ebdac",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      }
    ]
  }
}