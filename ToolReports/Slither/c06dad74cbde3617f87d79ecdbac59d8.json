{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "function",
            "name": "agreeToTrade",
            "source_mapping": {
              "start": 889,
              "length": 417,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "testingToken",
                "source_mapping": {
                  "start": 25,
                  "length": 1283,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "agreeToTrade(address)"
            }
          },
          {
            "type": "node",
            "name": "! _from.send((msg.value / 100) * 100)",
            "source_mapping": {
              "start": 1130,
              "length": 32,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "agreeToTrade",
                "source_mapping": {
                  "start": 889,
                  "length": 417,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "testingToken",
                    "source_mapping": {
                      "start": 25,
                      "length": 1283,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "agreeToTrade(address)"
                }
              }
            }
          }
        ],
        "description": "testingToken.agreeToTrade(address) () performs a multiplication on the result of a division:\n\t- ! _from.send((msg.value / 100) * 100) ()\n",
        "markdown": "[testingToken.agreeToTrade(address)]() performs a multiplication on the result of a division:\n\t- [! _from.send((msg.value / 100) * 100)]()\n",
        "first_markdown_element": "",
        "id": "1fc802014a81f03bd384839c6073d3646591a177323a58d5e93f17a5fa1ca66a",
        "check": "divide-before-multiply",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "send",
            "source_mapping": {
              "start": 358,
              "length": 262,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "testingToken",
                "source_mapping": {
                  "start": 25,
                  "length": 1283,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "send(address,uint256)"
            }
          },
          {
            "type": "node",
            "name": "balanceOf[_to] += (_value / 100) * 100",
            "source_mapping": {
              "start": 582,
              "length": 34,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "send",
                "source_mapping": {
                  "start": 358,
                  "length": 262,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "testingToken",
                    "source_mapping": {
                      "start": 25,
                      "length": 1283,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "send(address,uint256)"
                }
              }
            }
          }
        ],
        "description": "testingToken.send(address,uint256) () performs a multiplication on the result of a division:\n\t- balanceOf[_to] += (_value / 100) * 100 ()\n",
        "markdown": "[testingToken.send(address,uint256)]() performs a multiplication on the result of a division:\n\t- [balanceOf[_to] += (_value / 100) * 100]()\n",
        "first_markdown_element": "",
        "id": "4f0d0d7b95fa5d8bff66d36ac3cc2941be6490f0c7970ba22cdf11da2abae973",
        "check": "divide-before-multiply",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "send",
            "source_mapping": {
              "start": 358,
              "length": 262,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "testingToken",
                "source_mapping": {
                  "start": 25,
                  "length": 1283,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "send(address,uint256)"
            }
          },
          {
            "type": "node",
            "name": "_value < 0",
            "source_mapping": {
              "start": 528,
              "length": 8,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "send",
                "source_mapping": {
                  "start": 358,
                  "length": 262,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "testingToken",
                    "source_mapping": {
                      "start": 25,
                      "length": 1283,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "send(address,uint256)"
                }
              }
            }
          }
        ],
        "description": "testingToken.send(address,uint256) () contains a tautology or contradiction:\n\t- _value < 0 ()\n",
        "markdown": "[testingToken.send(address,uint256)]() contains a tautology or contradiction:\n\t- [_value < 0]()\n",
        "first_markdown_element": "",
        "id": "bbd832545cfc238564510d6404a6b7a1c176a3fd89163dba72148d29c481d7e2",
        "check": "tautology",
        "impact": "Medium",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 464,
              "length": 5,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "send",
                "source_mapping": {
                  "start": 358,
                  "length": 262,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "testingToken",
                    "source_mapping": {
                      "start": 25,
                      "length": 1283,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "send(address,uint256)"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected THROW ():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "markdown": "Deprecated standard detected [THROW]():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "first_markdown_element": "",
        "id": "f5556cf1c70b64b9e4b1fc32044dd970b5f2c8b9fc21b7971fda01971033f2d5",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "pragma",
            "name": "^0.4.8",
            "source_mapping": {
              "start": 0,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "directive": [
                "solidity",
                "^",
                "0.4",
                ".8"
              ]
            }
          }
        ],
        "description": "Pragma version^0.4.8 () allows old versions\n",
        "markdown": "Pragma version[^0.4.8]() allows old versions\n",
        "first_markdown_element": "",
        "id": "dd43bca9b08bc1fa7b94a3e619671f3c2c98a72b8b3bf0caf1e1f86665ec4569",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [],
        "description": "solc-0.4.8 is not recommended for deployment\n",
        "markdown": "solc-0.4.8 is not recommended for deployment\n",
        "first_markdown_element": "",
        "id": "ebbd8e423b3c73a93e118f8daed7c9ac33b0d525351f79b5ea41076caa3c1bc5",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_weiWanted",
            "source_mapping": {
              "start": 642,
              "length": 18,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "offerTrade",
                "source_mapping": {
                  "start": 622,
                  "length": 265,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "testingToken",
                    "source_mapping": {
                      "start": 25,
                      "length": 1283,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "offerTrade(uint256,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter testingToken.offerTrade(uint256,uint256)._weiWanted () is not in mixedCase\n",
        "markdown": "Parameter [testingToken.offerTrade(uint256,uint256)._weiWanted]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "0909f8c80991c7abbe87e5eccc1b6377d24bf928a7bca7b84f968e8fdb821db7",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "testingToken",
            "source_mapping": {
              "start": 25,
              "length": 1283,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "additional_fields": {
              "target": "contract",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Contract testingToken () is not in CapWords\n",
        "markdown": "Contract [testingToken]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "24a6701252f85bf892e90386c62ddf0185d21c0e41b340f4a667d83ffa8b5033",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_from",
            "source_mapping": {
              "start": 911,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "agreeToTrade",
                "source_mapping": {
                  "start": 889,
                  "length": 417,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "testingToken",
                    "source_mapping": {
                      "start": 25,
                      "length": 1283,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "agreeToTrade(address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter testingToken.agreeToTrade(address)._from () is not in mixedCase\n",
        "markdown": "Parameter [testingToken.agreeToTrade(address)._from]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "84ff0e30b4203b9783371b31b36792bdff6711e4b3da2ce191101d39518cc73a",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_to",
            "source_mapping": {
              "start": 372,
              "length": 11,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "send",
                "source_mapping": {
                  "start": 358,
                  "length": 262,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "testingToken",
                    "source_mapping": {
                      "start": 25,
                      "length": 1283,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "send(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter testingToken.send(address,uint256)._to () is not in mixedCase\n",
        "markdown": "Parameter [testingToken.send(address,uint256)._to]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "c0ae1e6195a288bd214794beb7a538a48c65ce9d669b6edecc3754d844eebeca",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_value",
            "source_mapping": {
              "start": 385,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "send",
                "source_mapping": {
                  "start": 358,
                  "length": 262,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "testingToken",
                    "source_mapping": {
                      "start": 25,
                      "length": 1283,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "send(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter testingToken.send(address,uint256)._value () is not in mixedCase\n",
        "markdown": "Parameter [testingToken.send(address,uint256)._value]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "caae542b24d839f6149758d57379cb672634ec34caab9425b6bd1ad7d7945649",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_tokensOffered",
            "source_mapping": {
              "start": 662,
              "length": 22,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "offerTrade",
                "source_mapping": {
                  "start": 622,
                  "length": 265,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "testingToken",
                    "source_mapping": {
                      "start": 25,
                      "length": 1283,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "offerTrade(uint256,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter testingToken.offerTrade(uint256,uint256)._tokensOffered () is not in mixedCase\n",
        "markdown": "Parameter [testingToken.offerTrade(uint256,uint256)._tokensOffered]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "e133ac9c14d2bb1d3127e062d65e02ff8c6ebb3162494cd7ac06da16c87c8c24",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "agreeToTrade",
            "source_mapping": {
              "start": 889,
              "length": 417,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "testingToken",
                "source_mapping": {
                  "start": 25,
                  "length": 1283,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "agreeToTrade(address)"
            }
          },
          {
            "type": "node",
            "name": "! _from.send((msg.value / 100) * 100)",
            "source_mapping": {
              "start": 1130,
              "length": 32,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "agreeToTrade",
                "source_mapping": {
                  "start": 889,
                  "length": 417,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "testingToken",
                    "source_mapping": {
                      "start": 25,
                      "length": 1283,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "agreeToTrade(address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "balanceOf[_from] -= tokensOfferedOf[_from]",
            "source_mapping": {
              "start": 1176,
              "length": 42,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "agreeToTrade",
                "source_mapping": {
                  "start": 889,
                  "length": 417,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "testingToken",
                    "source_mapping": {
                      "start": 25,
                      "length": 1283,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "agreeToTrade(address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "balanceOf"
            }
          },
          {
            "type": "node",
            "name": "balanceOf[msg.sender] += tokensOfferedOf[_from]",
            "source_mapping": {
              "start": 1225,
              "length": 47,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "agreeToTrade",
                "source_mapping": {
                  "start": 889,
                  "length": 417,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "testingToken",
                    "source_mapping": {
                      "start": 25,
                      "length": 1283,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "agreeToTrade(address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "balanceOf"
            }
          },
          {
            "type": "node",
            "name": "tradeActive[_from] = false",
            "source_mapping": {
              "start": 1276,
              "length": 26,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "agreeToTrade",
                "source_mapping": {
                  "start": 889,
                  "length": 417,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "testingToken",
                    "source_mapping": {
                      "start": 25,
                      "length": 1283,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "agreeToTrade(address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "tradeActive"
            }
          }
        ],
        "description": "Reentrancy in testingToken.agreeToTrade(address) ():\n\tExternal calls:\n\t- ! _from.send((msg.value / 100) * 100) ()\n\tState variables written after the call(s):\n\t- balanceOf[_from] -= tokensOfferedOf[_from] ()\n\t- balanceOf[msg.sender] += tokensOfferedOf[_from] ()\n\t- tradeActive[_from] = false ()\n",
        "markdown": "Reentrancy in [testingToken.agreeToTrade(address)]():\n\tExternal calls:\n\t- [! _from.send((msg.value / 100) * 100)]()\n\tState variables written after the call(s):\n\t- [balanceOf[_from] -= tokensOfferedOf[_from]]()\n\t- [balanceOf[msg.sender] += tokensOfferedOf[_from]]()\n\t- [tradeActive[_from] = false]()\n",
        "first_markdown_element": "",
        "id": "883a007f9134589c7e3fb36583e152dd87cf9fb72d696a59a53bc6516e541ca9",
        "check": "reentrancy-unlimited-gas",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "testingToken",
            "source_mapping": {
              "start": 272,
              "length": 84,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "testingToken",
                "source_mapping": {
                  "start": 25,
                  "length": 1283,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "testingToken()"
            }
          },
          {
            "type": "node",
            "name": "balanceOf[msg.sender] = 100000",
            "source_mapping": {
              "start": 322,
              "length": 30,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "testingToken",
                "source_mapping": {
                  "start": 272,
                  "length": 84,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "testingToken",
                    "source_mapping": {
                      "start": 25,
                      "length": 1283,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "testingToken()"
                }
              }
            }
          }
        ],
        "description": "testingToken.testingToken() () uses literals with too many digits:\n\t- balanceOf[msg.sender] = 100000 ()\n",
        "markdown": "[testingToken.testingToken()]() uses literals with too many digits:\n\t- [balanceOf[msg.sender] = 100000]()\n",
        "first_markdown_element": "",
        "id": "eca58d57c8b5b49e0ca7d330fb1c7d9e1825b4f3e0b1de27fff22faf8eeb96dd",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      }
    ]
  }
}