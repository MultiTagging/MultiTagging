{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "variable",
            "name": "result",
            "source_mapping": {
              "start": 5621,
              "length": 7,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "sponge",
                "source_mapping": {
                  "start": 4979,
                  "length": 1241,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SHA3_512",
                    "source_mapping": {
                      "start": 24,
                      "length": 6199,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "sponge(uint256[])"
                }
              }
            }
          }
        ],
        "description": "SHA3_512.sponge(uint256[]).result () is a local variable never initialized\n",
        "markdown": "[SHA3_512.sponge(uint256[]).result]() is a local variable never initialized\n",
        "first_markdown_element": "",
        "id": "4231a793cbd0ef7a7027d6ab6df7ad62506c51c169f30f1db3bbe34201591ac4",
        "check": "uninitialized-local",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 5068,
              "length": 5,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "sponge",
                "source_mapping": {
                  "start": 4979,
                  "length": 1241,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SHA3_512",
                    "source_mapping": {
                      "start": 24,
                      "length": 6199,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "sponge(uint256[])"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected THROW ():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "markdown": "Deprecated standard detected [THROW]():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "first_markdown_element": "",
        "id": "f5556cf1c70b64b9e4b1fc32044dd970b5f2c8b9fc21b7971fda01971033f2d5",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [],
        "description": "solc-0.4.1 is not recommended for deployment\n",
        "markdown": "solc-0.4.1 is not recommended for deployment\n",
        "first_markdown_element": "",
        "id": "5f358785dc4df92a048a5fc84402e36cf62b579fef6cf958ffdcbfbb1adaec9e",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "pragma",
            "name": "^0.4.1",
            "source_mapping": {
              "start": 0,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "directive": [
                "solidity",
                "^",
                "0.4",
                ".1"
              ]
            }
          }
        ],
        "description": "Pragma version^0.4.1 () allows old versions\n",
        "markdown": "Pragma version[^0.4.1]() allows old versions\n",
        "first_markdown_element": "",
        "id": "7e5f39572985ae5b079b47280cf47e2c2ce61d305c41927c88e2763b6317d832",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "M",
            "source_mapping": {
              "start": 4995,
              "length": 8,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "sponge",
                "source_mapping": {
                  "start": 4979,
                  "length": 1241,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SHA3_512",
                    "source_mapping": {
                      "start": 24,
                      "length": 6199,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "sponge(uint256[])"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter SHA3_512.sponge(uint256[]).M () is not in mixedCase\n",
        "markdown": "Parameter [SHA3_512.sponge(uint256[]).M]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "1362eb8ce2b101e816eb458d32459e04b4dbdf3b0439ccda56d20bf1f79e7d23",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "A",
            "source_mapping": {
              "start": 131,
              "length": 10,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "keccak_f",
                "source_mapping": {
                  "start": 113,
                  "length": 4854,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SHA3_512",
                    "source_mapping": {
                      "start": 24,
                      "length": 6199,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "keccak_f(uint256[25])"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter SHA3_512.keccak_f(uint256[25]).A () is not in mixedCase\n",
        "markdown": "Parameter [SHA3_512.keccak_f(uint256[25]).A]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "76ec074ea90df38275ec9db0e0a2cd6802d8ea668f01f6918cefaa7a871127b2",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "SHA3_512",
            "source_mapping": {
              "start": 24,
              "length": 6199,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "additional_fields": {
              "target": "contract",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Contract SHA3_512 () is not in CapWords\n",
        "markdown": "Contract [SHA3_512]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "e3c11792d58b57a460479b7e8a0ba6509e7925d0e1ff298231e655aebc8c20aa",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "keccak_f",
            "source_mapping": {
              "start": 113,
              "length": 4854,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SHA3_512",
                "source_mapping": {
                  "start": 24,
                  "length": 6199,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "keccak_f(uint256[25])"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function SHA3_512.keccak_f(uint256[25]) () is not in mixedCase\n",
        "markdown": "Function [SHA3_512.keccak_f(uint256[25])]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "e5c2ce954106c371934c44911b34c8284ca403c3b4f7add5c464921574f84fb6",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "keccak_f",
            "source_mapping": {
              "start": 113,
              "length": 4854,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SHA3_512",
                "source_mapping": {
                  "start": 24,
                  "length": 6199,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "keccak_f(uint256[25])"
            }
          },
          {
            "type": "node",
            "name": "RC = (uint256(0x0000000000000001),0x0000000000008082,0x800000000000808A,0x8000000080008000,0x000000000000808B,0x0000000080000001,0x8000000080008081,0x8000000000008009,0x000000000000008A,0x0000000000000088,0x0000000080008009,0x000000008000000A,0x000000008000808B,0x800000000000008B,0x8000000000008089,0x8000000000008003,0x8000000000008002,0x8000000000000080,0x000000000000800A,0x800000008000000A,0x8000000080008081,0x8000000000008080,0x0000000080000001,0x8000000080008008)",
            "source_mapping": {
              "start": 300,
              "length": 826,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "keccak_f",
                "source_mapping": {
                  "start": 113,
                  "length": 4854,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SHA3_512",
                    "source_mapping": {
                      "start": 24,
                      "length": 6199,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "keccak_f(uint256[25])"
                }
              }
            }
          }
        ],
        "description": "SHA3_512.keccak_f(uint256[25]) () uses literals with too many digits:\n\t- RC = (uint256(0x0000000000000001),0x0000000000008082,0x800000000000808A,0x8000000080008000,0x000000000000808B,0x0000000080000001,0x8000000080008081,0x8000000000008009,0x000000000000008A,0x0000000000000088,0x0000000080008009,0x000000008000000A,0x000000008000808B,0x800000000000008B,0x8000000000008089,0x8000000000008003,0x8000000000008002,0x8000000000000080,0x000000000000800A,0x800000008000000A,0x8000000080008081,0x8000000000008080,0x0000000080000001,0x8000000080008008) ()\n",
        "markdown": "[SHA3_512.keccak_f(uint256[25])]() uses literals with too many digits:\n\t- [RC = (uint256(0x0000000000000001),0x0000000000008082,0x800000000000808A,0x8000000080008000,0x000000000000808B,0x0000000080000001,0x8000000080008081,0x8000000000008009,0x000000000000008A,0x0000000000000088,0x0000000080008009,0x000000008000000A,0x000000008000808B,0x800000000000008B,0x8000000000008089,0x8000000000008003,0x8000000000008002,0x8000000000000080,0x000000000000800A,0x800000008000000A,0x8000000080008081,0x8000000000008080,0x0000000080000001,0x8000000080008008)]()\n",
        "first_markdown_element": "",
        "id": "ca41d88590b5df0d5d4a2424bfd3370545d5c97dc8a49a9b84280e2d455ae44c",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "sponge",
            "source_mapping": {
              "start": 4979,
              "length": 1241,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SHA3_512",
                "source_mapping": {
                  "start": 24,
                  "length": 6199,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "sponge(uint256[])"
            }
          }
        ],
        "description": "sponge(uint256[]) should be declared external:\n\t- SHA3_512.sponge(uint256[]) ()\n",
        "markdown": "sponge(uint256[]) should be declared external:\n\t- [SHA3_512.sponge(uint256[])]()\n",
        "first_markdown_element": "",
        "id": "8488c7662231feaf466535f2c1bca3d365559d1edca8c205dd59c93b4e18af60",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      }
    ]
  }
}