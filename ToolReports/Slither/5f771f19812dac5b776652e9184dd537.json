{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "variable",
            "name": "Signer",
            "source_mapping": {
              "start": 1610,
              "length": 15,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "VerifCert",
                "source_mapping": {
                  "start": 1290,
                  "length": 610,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Sign",
                    "source_mapping": {
                      "start": 24,
                      "length": 1880,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "VerifCert(uint32,bool,bytes,bytes)"
                }
              }
            }
          },
          {
            "type": "function",
            "name": "VerifCert",
            "source_mapping": {
              "start": 1290,
              "length": 610,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Sign",
                "source_mapping": {
                  "start": 24,
                  "length": 1880,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "VerifCert(uint32,bool,bytes,bytes)"
            }
          },
          {
            "type": "node",
            "name": "EventNotarise(Signer,_Signature,_Reste)",
            "source_mapping": {
              "start": 1803,
              "length": 42,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "VerifCert",
                "source_mapping": {
                  "start": 1290,
                  "length": 610,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Sign",
                    "source_mapping": {
                      "start": 24,
                      "length": 1880,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "VerifCert(uint32,bool,bytes,bytes)"
                }
              }
            }
          }
        ],
        "description": "Variable 'Sign.VerifCert(uint32,bool,bytes,bytes).Signer ()' in Sign.VerifCert(uint32,bool,bytes,bytes) () potentially used before declaration: EventNotarise(Signer,_Signature,_Reste) ()\n",
        "markdown": "Variable '[Sign.VerifCert(uint32,bool,bytes,bytes).Signer]()' in [Sign.VerifCert(uint32,bool,bytes,bytes)]() potentially used before declaration: [EventNotarise(Signer,_Signature,_Reste)]()\n",
        "first_markdown_element": "",
        "id": "4b78e38f5af08791aaf05e829eddf63b2de1b8a9f684a535aa5f4224e21705b1",
        "check": "variable-scope",
        "impact": "Low",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "VerifCert",
            "source_mapping": {
              "start": 1290,
              "length": 610,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Sign",
                "source_mapping": {
                  "start": 24,
                  "length": 1880,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "VerifCert(uint32,bool,bytes,bytes)"
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 1630,
              "length": 50,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "VerifCert",
                "source_mapping": {
                  "start": 1290,
                  "length": 610,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Sign",
                    "source_mapping": {
                      "start": 24,
                      "length": 1880,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "VerifCert(uint32,bool,bytes,bytes)"
                }
              }
            }
          }
        ],
        "description": "Sign.VerifCert(uint32,bool,bytes,bytes) () uses assembly\n\t- INLINE ASM ()\n",
        "markdown": "[Sign.VerifCert(uint32,bool,bytes,bytes)]() uses assembly\n\t- [INLINE ASM]()\n",
        "first_markdown_element": "",
        "id": "5844645aeb27018abae988ccbad28b9d39ba8130da50e4af51e7c8fa35e7bf9c",
        "check": "assembly",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "VerifSignature",
            "source_mapping": {
              "start": 675,
              "length": 611,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Sign",
                "source_mapping": {
                  "start": 24,
                  "length": 1880,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "VerifSignature(bytes,bytes)"
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 930,
              "length": 317,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "VerifSignature",
                "source_mapping": {
                  "start": 675,
                  "length": 611,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Sign",
                    "source_mapping": {
                      "start": 24,
                      "length": 1880,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "VerifSignature(bytes,bytes)"
                }
              }
            }
          }
        ],
        "description": "Sign.VerifSignature(bytes,bytes) () uses assembly\n\t- INLINE ASM ()\n",
        "markdown": "[Sign.VerifSignature(bytes,bytes)]() uses assembly\n\t- [INLINE ASM]()\n",
        "first_markdown_element": "",
        "id": "e82221a8d5fe704489befccdb8214bf713cf28d5d35cc9649fc416cc29e0d79b",
        "check": "assembly",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 317,
              "length": 5,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "fallback",
                "source_mapping": {
                  "start": 304,
                  "length": 20,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Sign",
                    "source_mapping": {
                      "start": 24,
                      "length": 1880,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "fallback()"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected THROW ():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "markdown": "Deprecated standard detected [THROW]():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "first_markdown_element": "",
        "id": "f5556cf1c70b64b9e4b1fc32044dd970b5f2c8b9fc21b7971fda01971033f2d5",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "pragma",
            "name": "^0.4.2",
            "source_mapping": {
              "start": 0,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "directive": [
                "solidity",
                "^",
                "0.4",
                ".2"
              ]
            }
          }
        ],
        "description": "Pragma version^0.4.2 () allows old versions\n",
        "markdown": "Pragma version[^0.4.2]() allows old versions\n",
        "first_markdown_element": "",
        "id": "684a56cd27e54ff2efdccacdc31c1f9807e03d1014a0a136c00240d60a2f3a67",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [],
        "description": "solc-0.4.2 is not recommended for deployment\n",
        "markdown": "solc-0.4.2 is not recommended for deployment\n",
        "first_markdown_element": "",
        "id": "707dbfcfdf84b6816d84949bbe947a3701cd8aa49952e3db1879e122f1f0990d",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "AddAuthority",
            "source_mapping": {
              "start": 42,
              "length": 27,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Sign",
                "source_mapping": {
                  "start": 24,
                  "length": 1880,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable Sign.AddAuthority () is not in mixedCase\n",
        "markdown": "Variable [Sign.AddAuthority]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "0775c48da2775be92607357a5f267c2bc365ff5e06843eca83b90709afb51575",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_log",
            "source_mapping": {
              "start": 1331,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "VerifCert",
                "source_mapping": {
                  "start": 1290,
                  "length": 610,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Sign",
                    "source_mapping": {
                      "start": 24,
                      "length": 1880,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "VerifCert(uint32,bool,bytes,bytes)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Sign.VerifCert(uint32,bool,bytes,bytes)._log () is not in mixedCase\n",
        "markdown": "Parameter [Sign.VerifCert(uint32,bool,bytes,bytes)._log]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "11ba25500e26a9e54c455800fec4e29206c1291b82d27bd8e087e6b3a997c9ba",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_IndiceIndex",
            "source_mapping": {
              "start": 1310,
              "length": 19,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "VerifCert",
                "source_mapping": {
                  "start": 1290,
                  "length": 610,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Sign",
                    "source_mapping": {
                      "start": 24,
                      "length": 1880,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "VerifCert(uint32,bool,bytes,bytes)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Sign.VerifCert(uint32,bool,bytes,bytes)._IndiceIndex () is not in mixedCase\n",
        "markdown": "Parameter [Sign.VerifCert(uint32,bool,bytes,bytes)._IndiceIndex]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "5ccb16c4cc3d6ee05a2fd455487a5010ecd3f1b637b6985ee3852c5df257d551",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_Reste",
            "source_mapping": {
              "start": 718,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "VerifSignature",
                "source_mapping": {
                  "start": 675,
                  "length": 611,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Sign",
                    "source_mapping": {
                      "start": 24,
                      "length": 1880,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "VerifSignature(bytes,bytes)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Sign.VerifSignature(bytes,bytes)._Reste () is not in mixedCase\n",
        "markdown": "Parameter [Sign.VerifSignature(bytes,bytes)._Reste]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "60a4fe445568f0514f87688cd23e4209c151f9ced604a2d16b09c91b62b5c54c",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_Reste",
            "source_mapping": {
              "start": 1360,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "VerifCert",
                "source_mapping": {
                  "start": 1290,
                  "length": 610,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Sign",
                    "source_mapping": {
                      "start": 24,
                      "length": 1880,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "VerifCert(uint32,bool,bytes,bytes)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Sign.VerifCert(uint32,bool,bytes,bytes)._Reste () is not in mixedCase\n",
        "markdown": "Parameter [Sign.VerifCert(uint32,bool,bytes,bytes)._Reste]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "7839cb9f9888ce0df22e9d8e50a5724c9692dea4677241cfb67e06243474b9c8",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "GetCert",
            "source_mapping": {
              "start": 522,
              "length": 103,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Sign",
                "source_mapping": {
                  "start": 24,
                  "length": 1880,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "GetCert(uint32)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function Sign.GetCert(uint32) () is not in mixedCase\n",
        "markdown": "Function [Sign.GetCert(uint32)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "87b53d397ffd74e9a21de34b4a64cce741c96cebd62c5c232db86f85ca3ff20b",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_Signature",
            "source_mapping": {
              "start": 1342,
              "length": 16,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "VerifCert",
                "source_mapping": {
                  "start": 1290,
                  "length": 610,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Sign",
                    "source_mapping": {
                      "start": 24,
                      "length": 1880,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "VerifCert(uint32,bool,bytes,bytes)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Sign.VerifCert(uint32,bool,bytes,bytes)._Signature () is not in mixedCase\n",
        "markdown": "Parameter [Sign.VerifCert(uint32,bool,bytes,bytes)._Signature]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "880a13775fa4d23a615033f9e1932a0b08b6033056b07177380183d89b27c79e",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "VerifCert",
            "source_mapping": {
              "start": 1290,
              "length": 610,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Sign",
                "source_mapping": {
                  "start": 24,
                  "length": 1880,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "VerifCert(uint32,bool,bytes,bytes)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function Sign.VerifCert(uint32,bool,bytes,bytes) () is not in mixedCase\n",
        "markdown": "Function [Sign.VerifCert(uint32,bool,bytes,bytes)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "9e69471658e1d249578f08d85075c21201290400d16a61733dc649f509a332e8",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "Cert",
            "source_mapping": {
              "start": 73,
              "length": 32,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Sign",
                "source_mapping": {
                  "start": 24,
                  "length": 1880,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable Sign.Cert () is not in mixedCase\n",
        "markdown": "Variable [Sign.Cert]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "b30646bbecff538e13c7e6ce4f9f96eb10dc5b28ef77b7131bb289712764bcaa",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_Signature",
            "source_mapping": {
              "start": 700,
              "length": 16,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "VerifSignature",
                "source_mapping": {
                  "start": 675,
                  "length": 611,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Sign",
                    "source_mapping": {
                      "start": 24,
                      "length": 1880,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "VerifSignature(bytes,bytes)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Sign.VerifSignature(bytes,bytes)._Signature () is not in mixedCase\n",
        "markdown": "Parameter [Sign.VerifSignature(bytes,bytes)._Signature]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "b964cdcabc7d7c6ea2ac26c231bc5793031522590650d7fef8da12cd0e766371",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "VerifSignature",
            "source_mapping": {
              "start": 675,
              "length": 611,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Sign",
                "source_mapping": {
                  "start": 24,
                  "length": 1880,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "VerifSignature(bytes,bytes)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function Sign.VerifSignature(bytes,bytes) () is not in mixedCase\n",
        "markdown": "Function [Sign.VerifSignature(bytes,bytes)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "cf45300563d4a0c757dd4d9cf57bd843a849944bf5ec98e7e443c5eaa390cb14",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_IndiceIndex",
            "source_mapping": {
              "start": 540,
              "length": 19,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "GetCert",
                "source_mapping": {
                  "start": 522,
                  "length": 103,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Sign",
                    "source_mapping": {
                      "start": 24,
                      "length": 1880,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "GetCert(uint32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Sign.GetCert(uint32)._IndiceIndex () is not in mixedCase\n",
        "markdown": "Parameter [Sign.GetCert(uint32)._IndiceIndex]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "cffc8b5e049315c8442f38da3092a2aa336fc03bfd2b7c3db420020888aacef9",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_Cert",
            "source_mapping": {
              "start": 464,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "SetCert",
                "source_mapping": {
                  "start": 425,
                  "length": 89,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Sign",
                    "source_mapping": {
                      "start": 24,
                      "length": 1880,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "SetCert(uint32,bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Sign.SetCert(uint32,bytes32)._Cert () is not in mixedCase\n",
        "markdown": "Parameter [Sign.SetCert(uint32,bytes32)._Cert]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "d24c7d34410bdd8d93a59aa7f2a4b5919b026667ae2153c4c966226d9bd31bbd",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "SetCert",
            "source_mapping": {
              "start": 425,
              "length": 89,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Sign",
                "source_mapping": {
                  "start": 24,
                  "length": 1880,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "SetCert(uint32,bytes32)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function Sign.SetCert(uint32,bytes32) () is not in mixedCase\n",
        "markdown": "Function [Sign.SetCert(uint32,bytes32)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "f8292ba165e11663139a814e135ad725731c660768d443983ea2e10b935cc793",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_IndiceIndex",
            "source_mapping": {
              "start": 443,
              "length": 19,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "SetCert",
                "source_mapping": {
                  "start": 425,
                  "length": 89,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Sign",
                    "source_mapping": {
                      "start": 24,
                      "length": 1880,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "SetCert(uint32,bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Sign.SetCert(uint32,bytes32)._IndiceIndex () is not in mixedCase\n",
        "markdown": "Parameter [Sign.SetCert(uint32,bytes32)._IndiceIndex]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "f8b286e2a0a3f268176d3e4a76c542d9dada81f281615d7b88be22633b1dd278",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "VerifCert",
            "source_mapping": {
              "start": 1290,
              "length": 610,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Sign",
                "source_mapping": {
                  "start": 24,
                  "length": 1880,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "VerifCert(uint32,bool,bytes,bytes)"
            }
          }
        ],
        "description": "VerifCert(uint32,bool,bytes,bytes) should be declared external:\n\t- Sign.VerifCert(uint32,bool,bytes,bytes) ()\n",
        "markdown": "VerifCert(uint32,bool,bytes,bytes) should be declared external:\n\t- [Sign.VerifCert(uint32,bool,bytes,bytes)]()\n",
        "first_markdown_element": "",
        "id": "47dfb37c48f6749463d96f65a0a13737bad8bbeed0fa639647d1b43c41bced40",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      }
    ]
  }
}