{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "function",
            "name": "takeEtherProfits",
            "source_mapping": {
              "start": 15853,
              "length": 256,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ProfitContainerAdapter",
                "source_mapping": {
                  "start": 15061,
                  "length": 1689,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "takeEtherProfits()"
            }
          },
          {
            "type": "node",
            "name": "assert(profitContainerLocation.call.value(this.balance)())",
            "source_mapping": {
              "start": 16044,
              "length": 58,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "takeEtherProfits",
                "source_mapping": {
                  "start": 15853,
                  "length": 256,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProfitContainerAdapter",
                    "source_mapping": {
                      "start": 15061,
                      "length": 1689,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "takeEtherProfits()"
                }
              }
            }
          }
        ],
        "description": "ProfitContainerAdapter.takeEtherProfits() () sends eth to arbitrary user\n\tDangerous calls:\n\t- assert(profitContainerLocation.call.value(this.balance)()) ()\n",
        "markdown": "[ProfitContainerAdapter.takeEtherProfits()]() sends eth to arbitrary user\n\tDangerous calls:\n\t- [assert(profitContainerLocation.call.value(this.balance)())]()\n",
        "first_markdown_element": "",
        "id": "c7cbaa66b436dbd1376618276021f605e6b04dd7970861d7ab67cc7e0c0476df",
        "check": "arbitrary-send-eth",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "name",
            "source_mapping": {
              "start": 2386,
              "length": 21,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ValueToken",
                "source_mapping": {
                  "start": 2338,
                  "length": 2389,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "variable",
            "name": "name",
            "source_mapping": {
              "start": 2315,
              "length": 18,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Token",
                "source_mapping": {
                  "start": 495,
                  "length": 1841,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "ValueToken.name () shadows:\n\t- Token.name ()\n",
        "markdown": "[ValueToken.name]() shadows:\n\t- [Token.name]()\n",
        "first_markdown_element": "",
        "id": "e823db889bcbfdeaf8ee692212c67a60a6b85ee660ee666f08f3f2240c68adfd",
        "check": "shadowing-state",
        "impact": "High",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "decimals",
            "source_mapping": {
              "start": 2413,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ValueToken",
                "source_mapping": {
                  "start": 2338,
                  "length": 2389,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "variable",
            "name": "decimals",
            "source_mapping": {
              "start": 2291,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Token",
                "source_mapping": {
                  "start": 495,
                  "length": 1841,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "ValueToken.decimals () shadows:\n\t- Token.decimals ()\n",
        "markdown": "[ValueToken.decimals]() shadows:\n\t- [Token.decimals]()\n",
        "first_markdown_element": "",
        "id": "ff3d991d07d3222ed37a50b693d31082408604421ca5c95d9b187a7c9aa1cb8b",
        "check": "shadowing-state",
        "impact": "High",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "die",
            "source_mapping": {
              "start": 6312,
              "length": 132,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ValueTrader",
                "source_mapping": {
                  "start": 4785,
                  "length": 7475,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "die()"
            }
          }
        ],
        "description": "ValueTrader.die() () allows anyone to destruct the contract\n",
        "markdown": "[ValueTrader.die()]() allows anyone to destruct the contract\n",
        "first_markdown_element": "",
        "id": "78e154ede06c6399d189e10030da70fcc9531ca51d12f87ff42798f4b3b04995",
        "check": "suicidal",
        "impact": "High",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "safeMul",
            "source_mapping": {
              "start": 62,
              "length": 122,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SafeMath",
                "source_mapping": {
                  "start": 25,
                  "length": 468,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "safeMul(uint256,uint256)"
            }
          },
          {
            "type": "node",
            "name": "assert(a == 0 || c / a == b)",
            "source_mapping": {
              "start": 151,
              "length": 28,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "safeMul",
                "source_mapping": {
                  "start": 62,
                  "length": 122,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SafeMath",
                    "source_mapping": {
                      "start": 25,
                      "length": 468,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "safeMul(uint256,uint256)"
                }
              }
            }
          }
        ],
        "description": "SafeMath.safeMul(uint256,uint256) () uses a dangerous strict equality:\n\t- assert(a == 0 || c / a == b) ()\n",
        "markdown": "[SafeMath.safeMul(uint256,uint256)]() uses a dangerous strict equality:\n\t- [assert(a == 0 || c / a == b)]()\n",
        "first_markdown_element": "",
        "id": "0b52a8826da398318b7fd88ae8136be81c350486c0138d61a1d8a51626b9fe06",
        "check": "incorrect-equality",
        "impact": "Medium",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "changeOwner",
            "source_mapping": {
              "start": 14320,
              "length": 244,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ShopKeeper",
                "source_mapping": {
                  "start": 12398,
                  "length": 2599,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "changeOwner(address)"
            }
          },
          {
            "type": "node",
            "name": "shop.changeOwner(owner_)",
            "source_mapping": {
              "start": 14496,
              "length": 24,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeOwner",
                "source_mapping": {
                  "start": 14320,
                  "length": 244,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ShopKeeper",
                    "source_mapping": {
                      "start": 12398,
                      "length": 2599,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeOwner(address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "holderA = owner_",
            "source_mapping": {
              "start": 14541,
              "length": 16,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeOwner",
                "source_mapping": {
                  "start": 14320,
                  "length": 244,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ShopKeeper",
                    "source_mapping": {
                      "start": 12398,
                      "length": 2599,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeOwner(address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "holderA"
            }
          }
        ],
        "description": "Reentrancy in ShopKeeper.changeOwner(address) ():\n\tExternal calls:\n\t- shop.changeOwner(owner_) ()\n\tState variables written after the call(s):\n\t- holderA = owner_ ()\n\tShopKeeper.holderA () can be used in cross function reentrancies:\n\t- ShopKeeper.ShopKeeper(address) ()\n\t- ShopKeeper.changeOwner(address) ()\n\t- ShopKeeper.changeShop(address) ()\n\t- ShopKeeper.giveAwayOwnership(address) ()\n\t- ShopKeeper.onlyA() ()\n\t- ShopKeeper.onlyHolders() ()\n\t- ShopKeeper.splitProfits() ()\n",
        "markdown": "Reentrancy in [ShopKeeper.changeOwner(address)]():\n\tExternal calls:\n\t- [shop.changeOwner(owner_)]()\n\tState variables written after the call(s):\n\t- [holderA = owner_]()\n\t[ShopKeeper.holderA]() can be used in cross function reentrancies:\n\t- [ShopKeeper.ShopKeeper(address)]()\n\t- [ShopKeeper.changeOwner(address)]()\n\t- [ShopKeeper.changeShop(address)]()\n\t- [ShopKeeper.giveAwayOwnership(address)]()\n\t- [ShopKeeper.onlyA()]()\n\t- [ShopKeeper.onlyHolders()]()\n\t- [ShopKeeper.splitProfits()]()\n",
        "first_markdown_element": "",
        "id": "0a35760571bfc7265ccd9ede2333834db4dca47bc9884e73c2ec1d38033f25db",
        "check": "reentrancy-no-eth",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "buyToken",
            "source_mapping": {
              "start": 10168,
              "length": 317,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ValueTrader",
                "source_mapping": {
                  "start": 4785,
                  "length": 7475,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "buyToken(address,uint256)"
            }
          },
          {
            "type": "node",
            "name": "assert(! (valueToToken(token,balances[msg.sender]) < amount))",
            "source_mapping": {
              "start": 10227,
              "length": 60,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "buyToken",
                "source_mapping": {
                  "start": 10168,
                  "length": 317,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "buyToken(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "currentLiquidity = Token(token).balanceOf(this)",
            "source_mapping": {
              "start": 9102,
              "length": 47,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "currentPrice",
                "source_mapping": {
                  "start": 8587,
                  "length": 682,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "currentPrice(address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "assert(destroyValue(msg.sender,tokenToValue(token,amount)))",
            "source_mapping": {
              "start": 10297,
              "length": 60,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "buyToken",
                "source_mapping": {
                  "start": 10168,
                  "length": 317,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "buyToken(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "currentLiquidity = Token(token).balanceOf(this)",
            "source_mapping": {
              "start": 9102,
              "length": 47,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "currentPrice",
                "source_mapping": {
                  "start": 8587,
                  "length": 682,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "currentPrice(address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "assert(destroyValue(msg.sender,tokenToValue(token,amount)))",
            "source_mapping": {
              "start": 10297,
              "length": 60,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "buyToken",
                "source_mapping": {
                  "start": 10168,
                  "length": 317,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "buyToken(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "balances"
            }
          },
          {
            "type": "node",
            "name": "balances[_owner] = safeSub(balances[_owner],_value)",
            "source_mapping": {
              "start": 4461,
              "length": 52,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "destroyValue",
                "source_mapping": {
                  "start": 4366,
                  "length": 232,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueToken",
                    "source_mapping": {
                      "start": 2338,
                      "length": 2389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "destroyValue(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "balances"
            }
          }
        ],
        "description": "Reentrancy in ValueTrader.buyToken(address,uint256) ():\n\tExternal calls:\n\t- assert(! (valueToToken(token,balances[msg.sender]) < amount)) ()\n\t\t- currentLiquidity = Token(token).balanceOf(this) ()\n\t- assert(destroyValue(msg.sender,tokenToValue(token,amount))) ()\n\t\t- currentLiquidity = Token(token).balanceOf(this) ()\n\tState variables written after the call(s):\n\t- assert(destroyValue(msg.sender,tokenToValue(token,amount))) ()\n\t\t- balances[_owner] = safeSub(balances[_owner],_value) ()\n\tValueToken.balances () can be used in cross function reentrancies:\n\t- ValueToken.approve(address,uint256) ()\n\t- ValueToken.balanceOf(address) ()\n\t- ValueTrader.buyEther(uint256) ()\n\t- ValueTrader.buyToken(address,uint256) ()\n\t- ValueToken.createValue(address,uint256) ()\n\t- ValueToken.destroyValue(address,uint256) ()\n\t- ValueTrader.sellEther() ()\n\t- ValueTrader.sellToken(address,uint256) ()\n\t- ValueToken.transfer(address,uint256) ()\n\t- ValueToken.transferFrom(address,address,uint256) ()\n",
        "markdown": "Reentrancy in [ValueTrader.buyToken(address,uint256)]():\n\tExternal calls:\n\t- [assert(! (valueToToken(token,balances[msg.sender]) < amount))]()\n\t\t- [currentLiquidity = Token(token).balanceOf(this)]()\n\t- [assert(destroyValue(msg.sender,tokenToValue(token,amount)))]()\n\t\t- [currentLiquidity = Token(token).balanceOf(this)]()\n\tState variables written after the call(s):\n\t- [assert(destroyValue(msg.sender,tokenToValue(token,amount)))]()\n\t\t- [balances[_owner] = safeSub(balances[_owner],_value)]()\n\t[ValueToken.balances]() can be used in cross function reentrancies:\n\t- [ValueToken.approve(address,uint256)]()\n\t- [ValueToken.balanceOf(address)]()\n\t- [ValueTrader.buyEther(uint256)]()\n\t- [ValueTrader.buyToken(address,uint256)]()\n\t- [ValueToken.createValue(address,uint256)]()\n\t- [ValueToken.destroyValue(address,uint256)]()\n\t- [ValueTrader.sellEther()]()\n\t- [ValueTrader.sellToken(address,uint256)]()\n\t- [ValueToken.transfer(address,uint256)]()\n\t- [ValueToken.transferFrom(address,address,uint256)]()\n",
        "first_markdown_element": "",
        "id": "1260d679ff7191395cfb2d3ab6f3d41ff5011dd9790594b354fba4b7dd8fbee0",
        "check": "reentrancy-no-eth",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "buyEther",
            "source_mapping": {
              "start": 10706,
              "length": 314,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ValueTrader",
                "source_mapping": {
                  "start": 4785,
                  "length": 7475,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "buyEther(uint256)"
            }
          },
          {
            "type": "node",
            "name": "assert(valueToToken(etherContract,balances[msg.sender]) >= amount)",
            "source_mapping": {
              "start": 10750,
              "length": 66,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "buyEther",
                "source_mapping": {
                  "start": 10706,
                  "length": 314,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "buyEther(uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "currentLiquidity = Token(token).balanceOf(this)",
            "source_mapping": {
              "start": 9102,
              "length": 47,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "currentPrice",
                "source_mapping": {
                  "start": 8587,
                  "length": 682,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "currentPrice(address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "assert(destroyValue(msg.sender,tokenToValue(etherContract,amount)))",
            "source_mapping": {
              "start": 10826,
              "length": 68,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "buyEther",
                "source_mapping": {
                  "start": 10706,
                  "length": 314,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "buyEther(uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "currentLiquidity = Token(token).balanceOf(this)",
            "source_mapping": {
              "start": 9102,
              "length": 47,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "currentPrice",
                "source_mapping": {
                  "start": 8587,
                  "length": 682,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "currentPrice(address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "assert(destroyValue(msg.sender,tokenToValue(etherContract,amount)))",
            "source_mapping": {
              "start": 10826,
              "length": 68,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "buyEther",
                "source_mapping": {
                  "start": 10706,
                  "length": 314,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "buyEther(uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "balances"
            }
          },
          {
            "type": "node",
            "name": "balances[_owner] = safeSub(balances[_owner],_value)",
            "source_mapping": {
              "start": 4461,
              "length": 52,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "destroyValue",
                "source_mapping": {
                  "start": 4366,
                  "length": 232,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueToken",
                    "source_mapping": {
                      "start": 2338,
                      "length": 2389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "destroyValue(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "balances"
            }
          }
        ],
        "description": "Reentrancy in ValueTrader.buyEther(uint256) ():\n\tExternal calls:\n\t- assert(valueToToken(etherContract,balances[msg.sender]) >= amount) ()\n\t\t- currentLiquidity = Token(token).balanceOf(this) ()\n\t- assert(destroyValue(msg.sender,tokenToValue(etherContract,amount))) ()\n\t\t- currentLiquidity = Token(token).balanceOf(this) ()\n\tState variables written after the call(s):\n\t- assert(destroyValue(msg.sender,tokenToValue(etherContract,amount))) ()\n\t\t- balances[_owner] = safeSub(balances[_owner],_value) ()\n\tValueToken.balances () can be used in cross function reentrancies:\n\t- ValueToken.approve(address,uint256) ()\n\t- ValueToken.balanceOf(address) ()\n\t- ValueTrader.buyEther(uint256) ()\n\t- ValueTrader.buyToken(address,uint256) ()\n\t- ValueToken.createValue(address,uint256) ()\n\t- ValueToken.destroyValue(address,uint256) ()\n\t- ValueTrader.sellEther() ()\n\t- ValueTrader.sellToken(address,uint256) ()\n\t- ValueToken.transfer(address,uint256) ()\n\t- ValueToken.transferFrom(address,address,uint256) ()\n",
        "markdown": "Reentrancy in [ValueTrader.buyEther(uint256)]():\n\tExternal calls:\n\t- [assert(valueToToken(etherContract,balances[msg.sender]) >= amount)]()\n\t\t- [currentLiquidity = Token(token).balanceOf(this)]()\n\t- [assert(destroyValue(msg.sender,tokenToValue(etherContract,amount)))]()\n\t\t- [currentLiquidity = Token(token).balanceOf(this)]()\n\tState variables written after the call(s):\n\t- [assert(destroyValue(msg.sender,tokenToValue(etherContract,amount)))]()\n\t\t- [balances[_owner] = safeSub(balances[_owner],_value)]()\n\t[ValueToken.balances]() can be used in cross function reentrancies:\n\t- [ValueToken.approve(address,uint256)]()\n\t- [ValueToken.balanceOf(address)]()\n\t- [ValueTrader.buyEther(uint256)]()\n\t- [ValueTrader.buyToken(address,uint256)]()\n\t- [ValueToken.createValue(address,uint256)]()\n\t- [ValueToken.destroyValue(address,uint256)]()\n\t- [ValueTrader.sellEther()]()\n\t- [ValueTrader.sellToken(address,uint256)]()\n\t- [ValueToken.transfer(address,uint256)]()\n\t- [ValueToken.transferFrom(address,address,uint256)]()\n",
        "first_markdown_element": "",
        "id": "280166da717ee72adb6a3d81480f3c3562118ed77916bdcb92f6f47b3acdeabf",
        "check": "reentrancy-no-eth",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "assert",
            "source_mapping": {
              "start": 418,
              "length": 73,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SafeMath",
                "source_mapping": {
                  "start": 25,
                  "length": 468,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "assert(bool)"
            }
          }
        ],
        "description": "SafeMath.assert(bool) () (function) shadows built-in symbol\"\n",
        "markdown": "[SafeMath.assert(bool)]() (function) shadows built-in symbol\"\n",
        "first_markdown_element": "",
        "id": "2ed4a8d1ba6e312aa9e54b65a7bd9f8608ba30ae953b80c8ccaa4fae542dd23a",
        "check": "shadowing-builtin",
        "impact": "Low",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "totalSupply",
            "source_mapping": {
              "start": 2630,
              "length": 19,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "totalSupply",
                "source_mapping": {
                  "start": 2589,
                  "length": 94,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueToken",
                    "source_mapping": {
                      "start": 2338,
                      "length": 2389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "totalSupply()"
                }
              }
            }
          },
          {
            "type": "function",
            "name": "totalSupply",
            "source_mapping": {
              "start": 2589,
              "length": 94,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ValueToken",
                "source_mapping": {
                  "start": 2338,
                  "length": 2389,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "totalSupply()"
            }
          },
          {
            "type": "function",
            "name": "totalSupply",
            "source_mapping": {
              "start": 551,
              "length": 59,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Token",
                "source_mapping": {
                  "start": 495,
                  "length": 1841,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "totalSupply()"
            }
          }
        ],
        "description": "ValueToken.totalSupply().totalSupply () shadows:\n\t- ValueToken.totalSupply() () (function)\n\t- Token.totalSupply() () (function)\n",
        "markdown": "[ValueToken.totalSupply().totalSupply]() shadows:\n\t- [ValueToken.totalSupply()]() (function)\n\t- [Token.totalSupply()]() (function)\n",
        "first_markdown_element": "",
        "id": "88de5aae462cfa45907e717094ed6457c95e8d56d45ecdc2b1dc75c44496addd",
        "check": "shadowing-local",
        "impact": "Low",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "currentLiquidity",
            "source_mapping": {
              "start": 8968,
              "length": 25,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "currentPrice",
                "source_mapping": {
                  "start": 8587,
                  "length": 682,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "currentPrice(address)"
                }
              }
            }
          },
          {
            "type": "function",
            "name": "currentLiquidity",
            "source_mapping": {
              "start": 9279,
              "length": 134,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ValueTrader",
                "source_mapping": {
                  "start": 4785,
                  "length": 7475,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "currentLiquidity(address)"
            }
          }
        ],
        "description": "ValueTrader.currentPrice(address).currentLiquidity () shadows:\n\t- ValueTrader.currentLiquidity(address) () (function)\n",
        "markdown": "[ValueTrader.currentPrice(address).currentLiquidity]() shadows:\n\t- [ValueTrader.currentLiquidity(address)]() (function)\n",
        "first_markdown_element": "",
        "id": "950522d3b69148e76e473fdadb9db91b4e5a8224308800c5ccab90f47f1b470c",
        "check": "shadowing-local",
        "impact": "Low",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "giveAwayOwnership",
            "source_mapping": {
              "start": 13104,
              "length": 193,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ShopKeeper",
                "source_mapping": {
                  "start": 12398,
                  "length": 2599,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "giveAwayOwnership(address)"
            }
          },
          {
            "type": "node",
            "name": "holderB = newHolder",
            "source_mapping": {
              "start": 13211,
              "length": 19,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "giveAwayOwnership",
                "source_mapping": {
                  "start": 13104,
                  "length": 193,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ShopKeeper",
                    "source_mapping": {
                      "start": 12398,
                      "length": 2599,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "giveAwayOwnership(address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "holderA = newHolder",
            "source_mapping": {
              "start": 13261,
              "length": 19,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "giveAwayOwnership",
                "source_mapping": {
                  "start": 13104,
                  "length": 193,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ShopKeeper",
                    "source_mapping": {
                      "start": 12398,
                      "length": 2599,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "giveAwayOwnership(address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "holderA = newHolder",
            "source_mapping": {
              "start": 13261,
              "length": 19,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "giveAwayOwnership",
                "source_mapping": {
                  "start": 13104,
                  "length": 193,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ShopKeeper",
                    "source_mapping": {
                      "start": 12398,
                      "length": 2599,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "giveAwayOwnership(address)"
                }
              }
            }
          }
        ],
        "description": "ShopKeeper.giveAwayOwnership(address) () should emit an event for: \n\t- holderB = newHolder () \n\t- holderA = newHolder () \n\t- holderA = newHolder () \n",
        "markdown": "[ShopKeeper.giveAwayOwnership(address)]() should emit an event for: \n\t- [holderB = newHolder]() \n\t- [holderA = newHolder]() \n\t- [holderA = newHolder]() \n",
        "first_markdown_element": "",
        "id": "6e620dffcf52c4936f79f3d150d99ef5b66f1394ce34cb5acad90ce527078c72",
        "check": "events-access",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "sL",
            "source_mapping": {
              "start": 15671,
              "length": 10,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "ProfitContainerAdapter",
                "source_mapping": {
                  "start": 15639,
                  "length": 204,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProfitContainerAdapter",
                    "source_mapping": {
                      "start": 15061,
                      "length": 1689,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "ProfitContainerAdapter(address,address,address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "shopLocation = sL",
            "source_mapping": {
              "start": 15746,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "ProfitContainerAdapter",
                "source_mapping": {
                  "start": 15639,
                  "length": 204,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProfitContainerAdapter",
                    "source_mapping": {
                      "start": 15061,
                      "length": 1689,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "ProfitContainerAdapter(address,address,address)"
                }
              }
            }
          }
        ],
        "description": "ProfitContainerAdapter.ProfitContainerAdapter(address,address,address).sL () lacks a zero-check on :\n\t\t- shopLocation = sL ()\n",
        "markdown": "[ProfitContainerAdapter.ProfitContainerAdapter(address,address,address).sL]() lacks a zero-check on :\n\t\t- [shopLocation = sL]()\n",
        "first_markdown_element": "",
        "id": "01906a7037dc3e063d793a268887d73147e93c941b9291993df320edefba6fab",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "newOwner",
            "source_mapping": {
              "start": 16686,
              "length": 16,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "giveAwayOwnership",
                "source_mapping": {
                  "start": 16659,
                  "length": 84,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProfitContainerAdapter",
                    "source_mapping": {
                      "start": 15061,
                      "length": 1689,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "giveAwayOwnership(address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "owner = newOwner",
            "source_mapping": {
              "start": 16720,
              "length": 16,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "giveAwayOwnership",
                "source_mapping": {
                  "start": 16659,
                  "length": 84,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProfitContainerAdapter",
                    "source_mapping": {
                      "start": 15061,
                      "length": 1689,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "giveAwayOwnership(address)"
                }
              }
            }
          }
        ],
        "description": "ProfitContainerAdapter.giveAwayOwnership(address).newOwner () lacks a zero-check on :\n\t\t- owner = newOwner ()\n",
        "markdown": "[ProfitContainerAdapter.giveAwayOwnership(address).newOwner]() lacks a zero-check on :\n\t\t- [owner = newOwner]()\n",
        "first_markdown_element": "",
        "id": "0c4162dfa86fee987be285c31b87459069ed939d6db388f0f5c5c97a549e5a08",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "newShop",
            "source_mapping": {
              "start": 15335,
              "length": 15,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeShop",
                "source_mapping": {
                  "start": 15315,
                  "length": 82,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProfitContainerAdapter",
                    "source_mapping": {
                      "start": 15061,
                      "length": 1689,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeShop(address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "shopLocation = newShop",
            "source_mapping": {
              "start": 15368,
              "length": 22,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeShop",
                "source_mapping": {
                  "start": 15315,
                  "length": 82,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProfitContainerAdapter",
                    "source_mapping": {
                      "start": 15061,
                      "length": 1689,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeShop(address)"
                }
              }
            }
          }
        ],
        "description": "ProfitContainerAdapter.changeShop(address).newShop () lacks a zero-check on :\n\t\t- shopLocation = newShop ()\n",
        "markdown": "[ProfitContainerAdapter.changeShop(address).newShop]() lacks a zero-check on :\n\t\t- [shopLocation = newShop]()\n",
        "first_markdown_element": "",
        "id": "17892eed0c4ac7ff9b07c1346449f45c55db908688aa55d489d6e9d9d1a06f39",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "owner_",
            "source_mapping": {
              "start": 7619,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeOwner",
                "source_mapping": {
                  "start": 7598,
                  "length": 74,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeOwner(address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "owner = owner_",
            "source_mapping": {
              "start": 7651,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeOwner",
                "source_mapping": {
                  "start": 7598,
                  "length": 74,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeOwner(address)"
                }
              }
            }
          }
        ],
        "description": "ValueTrader.changeOwner(address).owner_ () lacks a zero-check on :\n\t\t- owner = owner_ ()\n",
        "markdown": "[ValueTrader.changeOwner(address).owner_]() lacks a zero-check on :\n\t\t- [owner = owner_]()\n",
        "first_markdown_element": "",
        "id": "228bd627652b80e68fea13414c549380d55e7aae90a0b20ca0d96d704042ee0d",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "token_",
            "source_mapping": {
              "start": 7039,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "callDividend",
                "source_mapping": {
                  "start": 7017,
                  "length": 462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "callDividend(address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "assert(tokenManage[token_].divContractAddress.call.value(0)(tokenManage[token_].divData))",
            "source_mapping": {
              "start": 7383,
              "length": 89,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "callDividend",
                "source_mapping": {
                  "start": 7017,
                  "length": 462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "callDividend(address)"
                }
              }
            }
          }
        ],
        "description": "ValueTrader.callDividend(address).token_ () lacks a zero-check on :\n\t\t- assert(tokenManage[token_].divContractAddress.call.value(0)(tokenManage[token_].divData)) ()\n",
        "markdown": "[ValueTrader.callDividend(address).token_]() lacks a zero-check on :\n\t\t- [assert(tokenManage[token_].divContractAddress.call.value(0)(tokenManage[token_].divData))]()\n",
        "first_markdown_element": "",
        "id": "2f97146712cac57b716594248bdc894955ff3d7714b1935a76fd4864bde95ed3",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "eC",
            "source_mapping": {
              "start": 7808,
              "length": 10,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeEtherContract",
                "source_mapping": {
                  "start": 7779,
                  "length": 82,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeEtherContract(address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "etherContract = eC",
            "source_mapping": {
              "start": 7836,
              "length": 18,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeEtherContract",
                "source_mapping": {
                  "start": 7779,
                  "length": 82,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeEtherContract(address)"
                }
              }
            }
          }
        ],
        "description": "ValueTrader.changeEtherContract(address).eC () lacks a zero-check on :\n\t\t- etherContract = eC ()\n",
        "markdown": "[ValueTrader.changeEtherContract(address).eC]() lacks a zero-check on :\n\t\t- [etherContract = eC]()\n",
        "first_markdown_element": "",
        "id": "3ae76b90d01d14cdad3caca135fb4738df39658e2991fc9ac4fddbf355504cb6",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "newContainer",
            "source_mapping": {
              "start": 15546,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeContainer",
                "source_mapping": {
                  "start": 15521,
                  "length": 108,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProfitContainerAdapter",
                    "source_mapping": {
                      "start": 15061,
                      "length": 1689,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeContainer(address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "profitContainerLocation = newContainer",
            "source_mapping": {
              "start": 15584,
              "length": 38,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeContainer",
                "source_mapping": {
                  "start": 15521,
                  "length": 108,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProfitContainerAdapter",
                    "source_mapping": {
                      "start": 15061,
                      "length": 1689,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeContainer(address)"
                }
              }
            }
          }
        ],
        "description": "ProfitContainerAdapter.changeContainer(address).newContainer () lacks a zero-check on :\n\t\t- profitContainerLocation = newContainer ()\n",
        "markdown": "[ProfitContainerAdapter.changeContainer(address).newContainer]() lacks a zero-check on :\n\t\t- [profitContainerLocation = newContainer]()\n",
        "first_markdown_element": "",
        "id": "4931f64731adc7c03f9750df478fdeaf317517f99130c33fd93025942f1aa0da",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "sKL",
            "source_mapping": {
              "start": 15683,
              "length": 11,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "ProfitContainerAdapter",
                "source_mapping": {
                  "start": 15639,
                  "length": 204,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProfitContainerAdapter",
                    "source_mapping": {
                      "start": 15061,
                      "length": 1689,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "ProfitContainerAdapter(address,address,address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "shopKeeperLocation = sKL",
            "source_mapping": {
              "start": 15773,
              "length": 24,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "ProfitContainerAdapter",
                "source_mapping": {
                  "start": 15639,
                  "length": 204,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProfitContainerAdapter",
                    "source_mapping": {
                      "start": 15061,
                      "length": 1689,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "ProfitContainerAdapter(address,address,address)"
                }
              }
            }
          }
        ],
        "description": "ProfitContainerAdapter.ProfitContainerAdapter(address,address,address).sKL () lacks a zero-check on :\n\t\t- shopKeeperLocation = sKL ()\n",
        "markdown": "[ProfitContainerAdapter.ProfitContainerAdapter(address,address,address).sKL]() lacks a zero-check on :\n\t\t- [shopKeeperLocation = sKL]()\n",
        "first_markdown_element": "",
        "id": "4b3bed14d81ca06570ec420ff42a81cb6526c2d2e25e4474a68fda90cdd3d66d",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "newKeeper",
            "source_mapping": {
              "start": 15434,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeKeeper",
                "source_mapping": {
                  "start": 15412,
                  "length": 94,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProfitContainerAdapter",
                    "source_mapping": {
                      "start": 15061,
                      "length": 1689,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeKeeper(address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "shopKeeperLocation = newKeeper",
            "source_mapping": {
              "start": 15469,
              "length": 30,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeKeeper",
                "source_mapping": {
                  "start": 15412,
                  "length": 94,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProfitContainerAdapter",
                    "source_mapping": {
                      "start": 15061,
                      "length": 1689,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeKeeper(address)"
                }
              }
            }
          }
        ],
        "description": "ProfitContainerAdapter.changeKeeper(address).newKeeper () lacks a zero-check on :\n\t\t- shopKeeperLocation = newKeeper ()\n",
        "markdown": "[ProfitContainerAdapter.changeKeeper(address).newKeeper]() lacks a zero-check on :\n\t\t- [shopKeeperLocation = newKeeper]()\n",
        "first_markdown_element": "",
        "id": "94c1b2925959057f4e088cdf8431b412f1d690dbdf7a708896ba2d8608af4002",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "newHolder",
            "source_mapping": {
              "start": 13131,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "giveAwayOwnership",
                "source_mapping": {
                  "start": 13104,
                  "length": 193,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ShopKeeper",
                    "source_mapping": {
                      "start": 12398,
                      "length": 2599,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "giveAwayOwnership(address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "holderB = newHolder",
            "source_mapping": {
              "start": 13211,
              "length": 19,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "giveAwayOwnership",
                "source_mapping": {
                  "start": 13104,
                  "length": 193,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ShopKeeper",
                    "source_mapping": {
                      "start": 12398,
                      "length": 2599,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "giveAwayOwnership(address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "holderA = newHolder",
            "source_mapping": {
              "start": 13261,
              "length": 19,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "giveAwayOwnership",
                "source_mapping": {
                  "start": 13104,
                  "length": 193,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ShopKeeper",
                    "source_mapping": {
                      "start": 12398,
                      "length": 2599,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "giveAwayOwnership(address)"
                }
              }
            }
          }
        ],
        "description": "ShopKeeper.giveAwayOwnership(address).newHolder () lacks a zero-check on :\n\t\t- holderB = newHolder ()\n\t\t- holderA = newHolder ()\n",
        "markdown": "[ShopKeeper.giveAwayOwnership(address).newHolder]() lacks a zero-check on :\n\t\t- [holderB = newHolder]()\n\t\t- [holderA = newHolder]()\n",
        "first_markdown_element": "",
        "id": "b64ab74e84b0ae21d8faa7c5619be1ea083f2b8e931796b09f6b8e3a74e9fa4b",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "pCL",
            "source_mapping": {
              "start": 15696,
              "length": 11,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "ProfitContainerAdapter",
                "source_mapping": {
                  "start": 15639,
                  "length": 204,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProfitContainerAdapter",
                    "source_mapping": {
                      "start": 15061,
                      "length": 1689,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "ProfitContainerAdapter(address,address,address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "profitContainerLocation = pCL",
            "source_mapping": {
              "start": 15807,
              "length": 29,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "ProfitContainerAdapter",
                "source_mapping": {
                  "start": 15639,
                  "length": 204,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProfitContainerAdapter",
                    "source_mapping": {
                      "start": 15061,
                      "length": 1689,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "ProfitContainerAdapter(address,address,address)"
                }
              }
            }
          }
        ],
        "description": "ProfitContainerAdapter.ProfitContainerAdapter(address,address,address).pCL () lacks a zero-check on :\n\t\t- profitContainerLocation = pCL ()\n",
        "markdown": "[ProfitContainerAdapter.ProfitContainerAdapter(address,address,address).pCL]() lacks a zero-check on :\n\t\t- [profitContainerLocation = pCL]()\n",
        "first_markdown_element": "",
        "id": "c9542a8fb6c82f771758610aa598eb60171b2e31984d62d177098baa8231cc9a",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "other",
            "source_mapping": {
              "start": 12984,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "ShopKeeper",
                "source_mapping": {
                  "start": 12964,
                  "length": 130,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ShopKeeper",
                    "source_mapping": {
                      "start": 12398,
                      "length": 2599,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "ShopKeeper(address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "holderB = other",
            "source_mapping": {
              "start": 13072,
              "length": 15,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "ShopKeeper",
                "source_mapping": {
                  "start": 12964,
                  "length": 130,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ShopKeeper",
                    "source_mapping": {
                      "start": 12398,
                      "length": 2599,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "ShopKeeper(address)"
                }
              }
            }
          }
        ],
        "description": "ShopKeeper.ShopKeeper(address).other () lacks a zero-check on :\n\t\t- holderB = other ()\n",
        "markdown": "[ShopKeeper.ShopKeeper(address).other]() lacks a zero-check on :\n\t\t- [holderB = other]()\n",
        "first_markdown_element": "",
        "id": "fbe330f45fd39a5599319fcfea4bd108c2377570db171401355afe962fe0351c",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "owner_",
            "source_mapping": {
              "start": 14341,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeOwner",
                "source_mapping": {
                  "start": 14320,
                  "length": 244,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ShopKeeper",
                    "source_mapping": {
                      "start": 12398,
                      "length": 2599,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeOwner(address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "holderA = owner_",
            "source_mapping": {
              "start": 14541,
              "length": 16,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeOwner",
                "source_mapping": {
                  "start": 14320,
                  "length": 244,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ShopKeeper",
                    "source_mapping": {
                      "start": 12398,
                      "length": 2599,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeOwner(address)"
                }
              }
            }
          }
        ],
        "description": "ShopKeeper.changeOwner(address).owner_ () lacks a zero-check on :\n\t\t- holderA = owner_ ()\n",
        "markdown": "[ShopKeeper.changeOwner(address).owner_]() lacks a zero-check on :\n\t\t- [holderA = owner_]()\n",
        "first_markdown_element": "",
        "id": "fd1c03667c2c15883c92fb7f1103a8c7afa1d083bc4ed7efe35218522e012ea6",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "quickTrade",
            "source_mapping": {
              "start": 11099,
              "length": 769,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ValueTrader",
                "source_mapping": {
                  "start": 4785,
                  "length": 7475,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "quickTrade(address,address,uint256)"
            }
          },
          {
            "type": "node",
            "name": "tempInValue = safeAdd(tokenToValue(etherContract,msg.value),tokenToValue(tokenFrom,input))",
            "source_mapping": {
              "start": 11365,
              "length": 107,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "quickTrade",
                "source_mapping": {
                  "start": 11099,
                  "length": 769,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "quickTrade(address,address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "currentLiquidity = Token(token).balanceOf(this)",
            "source_mapping": {
              "start": 9102,
              "length": 47,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "currentPrice",
                "source_mapping": {
                  "start": 8587,
                  "length": 682,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "currentPrice(address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "tempInValue = safeAdd(tokenToValue(etherContract,msg.value),tokenToValue(tokenFrom,input))",
            "source_mapping": {
              "start": 11365,
              "length": 107,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "quickTrade",
                "source_mapping": {
                  "start": 11099,
                  "length": 769,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "quickTrade(address,address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "currentLiquidity = Token(token).balanceOf(this)",
            "source_mapping": {
              "start": 9102,
              "length": 47,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "currentPrice",
                "source_mapping": {
                  "start": 8587,
                  "length": 682,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "currentPrice(address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "inValue = valueWithFee(tempInValue)",
            "source_mapping": {
              "start": 11482,
              "length": 35,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "quickTrade",
                "source_mapping": {
                  "start": 11099,
                  "length": 769,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "quickTrade(address,address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "balances"
            }
          },
          {
            "type": "node",
            "name": "balances[_owner] = safeAdd(balances[_owner],_value)",
            "source_mapping": {
              "start": 4219,
              "length": 52,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "createValue",
                "source_mapping": {
                  "start": 4125,
                  "length": 231,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueToken",
                    "source_mapping": {
                      "start": 2338,
                      "length": 2389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "createValue(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "balances"
            }
          },
          {
            "type": "node",
            "name": "inValue = valueWithFee(tempInValue)",
            "source_mapping": {
              "start": 11482,
              "length": 35,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "quickTrade",
                "source_mapping": {
                  "start": 11099,
                  "length": 769,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "quickTrade(address,address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "supplyNow"
            }
          },
          {
            "type": "node",
            "name": "supplyNow = safeAdd(supplyNow,_value)",
            "source_mapping": {
              "start": 4281,
              "length": 38,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "createValue",
                "source_mapping": {
                  "start": 4125,
                  "length": 231,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueToken",
                    "source_mapping": {
                      "start": 2338,
                      "length": 2389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "createValue(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "supplyNow"
            }
          }
        ],
        "description": "Reentrancy in ValueTrader.quickTrade(address,address,uint256) ():\n\tExternal calls:\n\t- tempInValue = safeAdd(tokenToValue(etherContract,msg.value),tokenToValue(tokenFrom,input)) ()\n\t\t- currentLiquidity = Token(token).balanceOf(this) ()\n\tState variables written after the call(s):\n\t- inValue = valueWithFee(tempInValue) ()\n\t\t- balances[_owner] = safeAdd(balances[_owner],_value) ()\n\t- inValue = valueWithFee(tempInValue) ()\n\t\t- supplyNow = safeAdd(supplyNow,_value) ()\n",
        "markdown": "Reentrancy in [ValueTrader.quickTrade(address,address,uint256)]():\n\tExternal calls:\n\t- [tempInValue = safeAdd(tokenToValue(etherContract,msg.value),tokenToValue(tokenFrom,input))]()\n\t\t- [currentLiquidity = Token(token).balanceOf(this)]()\n\tState variables written after the call(s):\n\t- [inValue = valueWithFee(tempInValue)]()\n\t\t- [balances[_owner] = safeAdd(balances[_owner],_value)]()\n\t- [inValue = valueWithFee(tempInValue)]()\n\t\t- [supplyNow = safeAdd(supplyNow,_value)]()\n",
        "first_markdown_element": "",
        "id": "a2a30127e2e4e259d5afe584d32710972f1147e4629e5d06e53ddae676807068",
        "check": "reentrancy-benign",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "quickTrade",
            "source_mapping": {
              "start": 11099,
              "length": 769,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ValueTrader",
                "source_mapping": {
                  "start": 4785,
                  "length": 7475,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "quickTrade(address,address,uint256)"
            }
          },
          {
            "type": "node",
            "name": "tempInValue = safeAdd(tokenToValue(etherContract,msg.value),tokenToValue(tokenFrom,input))",
            "source_mapping": {
              "start": 11365,
              "length": 107,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "quickTrade",
                "source_mapping": {
                  "start": 11099,
                  "length": 769,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "quickTrade(address,address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "currentLiquidity = Token(token).balanceOf(this)",
            "source_mapping": {
              "start": 9102,
              "length": 47,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "currentPrice",
                "source_mapping": {
                  "start": 8587,
                  "length": 682,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "currentPrice(address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "outValue = valueToToken(tokenTo,inValue)",
            "source_mapping": {
              "start": 11527,
              "length": 48,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "quickTrade",
                "source_mapping": {
                  "start": 11099,
                  "length": 769,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "quickTrade(address,address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "currentLiquidity = Token(token).balanceOf(this)",
            "source_mapping": {
              "start": 9102,
              "length": 47,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "currentPrice",
                "source_mapping": {
                  "start": 8587,
                  "length": 682,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "currentPrice(address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "assert(verifiedTransferFrom(tokenFrom,msg.sender,input))",
            "source_mapping": {
              "start": 11585,
              "length": 56,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "quickTrade",
                "source_mapping": {
                  "start": 11099,
                  "length": 769,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "quickTrade(address,address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "balanceBefore = Token(tokenFrom).balanceOf(this)",
            "source_mapping": {
              "start": 11999,
              "length": 56,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifiedTransferFrom",
                "source_mapping": {
                  "start": 11878,
                  "length": 374,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifiedTransferFrom(address,address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "success = Token(tokenFrom).transferFrom(senderAdd,this,amount)",
            "source_mapping": {
              "start": 12061,
              "length": 64,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifiedTransferFrom",
                "source_mapping": {
                  "start": 11878,
                  "length": 374,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifiedTransferFrom(address,address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "balanceAfter = Token(tokenFrom).balanceOf(this)",
            "source_mapping": {
              "start": 12131,
              "length": 55,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifiedTransferFrom",
                "source_mapping": {
                  "start": 11878,
                  "length": 374,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifiedTransferFrom(address,address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "assert(msg.sender.call.value(outValue)())",
            "source_mapping": {
              "start": 11692,
              "length": 41,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "quickTrade",
                "source_mapping": {
                  "start": 11099,
                  "length": 769,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "quickTrade(address,address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "assert(Token(tokenTo).transfer(msg.sender,outValue))",
            "source_mapping": {
              "start": 11752,
              "length": 53,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "quickTrade",
                "source_mapping": {
                  "start": 11099,
                  "length": 769,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "quickTrade(address,address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "assert(msg.sender.call.value(outValue)())",
            "source_mapping": {
              "start": 11692,
              "length": 41,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "quickTrade",
                "source_mapping": {
                  "start": 11099,
                  "length": 769,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "quickTrade(address,address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "Trade(tokenFrom,tokenTo,msg.sender,inValue)",
            "source_mapping": {
              "start": 11815,
              "length": 46,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "quickTrade",
                "source_mapping": {
                  "start": 11099,
                  "length": 769,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "quickTrade(address,address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          }
        ],
        "description": "Reentrancy in ValueTrader.quickTrade(address,address,uint256) ():\n\tExternal calls:\n\t- tempInValue = safeAdd(tokenToValue(etherContract,msg.value),tokenToValue(tokenFrom,input)) ()\n\t\t- currentLiquidity = Token(token).balanceOf(this) ()\n\t- outValue = valueToToken(tokenTo,inValue) ()\n\t\t- currentLiquidity = Token(token).balanceOf(this) ()\n\t- assert(verifiedTransferFrom(tokenFrom,msg.sender,input)) ()\n\t\t- balanceBefore = Token(tokenFrom).balanceOf(this) ()\n\t\t- success = Token(tokenFrom).transferFrom(senderAdd,this,amount) ()\n\t\t- balanceAfter = Token(tokenFrom).balanceOf(this) ()\n\t- assert(msg.sender.call.value(outValue)()) ()\n\t- assert(Token(tokenTo).transfer(msg.sender,outValue)) ()\n\tExternal calls sending eth:\n\t- assert(msg.sender.call.value(outValue)()) ()\n\tEvent emitted after the call(s):\n\t- Trade(tokenFrom,tokenTo,msg.sender,inValue) ()\n",
        "markdown": "Reentrancy in [ValueTrader.quickTrade(address,address,uint256)]():\n\tExternal calls:\n\t- [tempInValue = safeAdd(tokenToValue(etherContract,msg.value),tokenToValue(tokenFrom,input))]()\n\t\t- [currentLiquidity = Token(token).balanceOf(this)]()\n\t- [outValue = valueToToken(tokenTo,inValue)]()\n\t\t- [currentLiquidity = Token(token).balanceOf(this)]()\n\t- [assert(verifiedTransferFrom(tokenFrom,msg.sender,input))]()\n\t\t- [balanceBefore = Token(tokenFrom).balanceOf(this)]()\n\t\t- [success = Token(tokenFrom).transferFrom(senderAdd,this,amount)]()\n\t\t- [balanceAfter = Token(tokenFrom).balanceOf(this)]()\n\t- [assert(msg.sender.call.value(outValue)())]()\n\t- [assert(Token(tokenTo).transfer(msg.sender,outValue))]()\n\tExternal calls sending eth:\n\t- [assert(msg.sender.call.value(outValue)())]()\n\tEvent emitted after the call(s):\n\t- [Trade(tokenFrom,tokenTo,msg.sender,inValue)]()\n",
        "first_markdown_element": "",
        "id": "668d0b389c2b1cc3c188724bce6f1fc0584b2ca84602327c01d37443281a13d9",
        "check": "reentrancy-events",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "buyToken",
            "source_mapping": {
              "start": 10168,
              "length": 317,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ValueTrader",
                "source_mapping": {
                  "start": 4785,
                  "length": 7475,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "buyToken(address,uint256)"
            }
          },
          {
            "type": "node",
            "name": "assert(! (valueToToken(token,balances[msg.sender]) < amount))",
            "source_mapping": {
              "start": 10227,
              "length": 60,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "buyToken",
                "source_mapping": {
                  "start": 10168,
                  "length": 317,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "buyToken(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "currentLiquidity = Token(token).balanceOf(this)",
            "source_mapping": {
              "start": 9102,
              "length": 47,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "currentPrice",
                "source_mapping": {
                  "start": 8587,
                  "length": 682,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "currentPrice(address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "assert(destroyValue(msg.sender,tokenToValue(token,amount)))",
            "source_mapping": {
              "start": 10297,
              "length": 60,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "buyToken",
                "source_mapping": {
                  "start": 10168,
                  "length": 317,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "buyToken(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "currentLiquidity = Token(token).balanceOf(this)",
            "source_mapping": {
              "start": 9102,
              "length": 47,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "currentPrice",
                "source_mapping": {
                  "start": 8587,
                  "length": 682,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "currentPrice(address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "assert(Token(token).transfer(msg.sender,amount))",
            "source_mapping": {
              "start": 10367,
              "length": 49,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "buyToken",
                "source_mapping": {
                  "start": 10168,
                  "length": 317,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "buyToken(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "Buy(token,msg.sender,amount,balances[msg.sender])",
            "source_mapping": {
              "start": 10426,
              "length": 52,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "buyToken",
                "source_mapping": {
                  "start": 10168,
                  "length": 317,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "buyToken(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          }
        ],
        "description": "Reentrancy in ValueTrader.buyToken(address,uint256) ():\n\tExternal calls:\n\t- assert(! (valueToToken(token,balances[msg.sender]) < amount)) ()\n\t\t- currentLiquidity = Token(token).balanceOf(this) ()\n\t- assert(destroyValue(msg.sender,tokenToValue(token,amount))) ()\n\t\t- currentLiquidity = Token(token).balanceOf(this) ()\n\t- assert(Token(token).transfer(msg.sender,amount)) ()\n\tEvent emitted after the call(s):\n\t- Buy(token,msg.sender,amount,balances[msg.sender]) ()\n",
        "markdown": "Reentrancy in [ValueTrader.buyToken(address,uint256)]():\n\tExternal calls:\n\t- [assert(! (valueToToken(token,balances[msg.sender]) < amount))]()\n\t\t- [currentLiquidity = Token(token).balanceOf(this)]()\n\t- [assert(destroyValue(msg.sender,tokenToValue(token,amount)))]()\n\t\t- [currentLiquidity = Token(token).balanceOf(this)]()\n\t- [assert(Token(token).transfer(msg.sender,amount))]()\n\tEvent emitted after the call(s):\n\t- [Buy(token,msg.sender,amount,balances[msg.sender])]()\n",
        "first_markdown_element": "",
        "id": "7254431dc5e3c52821de9cfad8d648dcb13243b2bd53e4f9426987c0a7f7cf4b",
        "check": "reentrancy-events",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "quickTrade",
            "source_mapping": {
              "start": 11099,
              "length": 769,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ValueTrader",
                "source_mapping": {
                  "start": 4785,
                  "length": 7475,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "quickTrade(address,address,uint256)"
            }
          },
          {
            "type": "node",
            "name": "tempInValue = safeAdd(tokenToValue(etherContract,msg.value),tokenToValue(tokenFrom,input))",
            "source_mapping": {
              "start": 11365,
              "length": 107,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "quickTrade",
                "source_mapping": {
                  "start": 11099,
                  "length": 769,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "quickTrade(address,address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "currentLiquidity = Token(token).balanceOf(this)",
            "source_mapping": {
              "start": 9102,
              "length": 47,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "currentPrice",
                "source_mapping": {
                  "start": 8587,
                  "length": 682,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "currentPrice(address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "Mint(_owner,_value)",
            "source_mapping": {
              "start": 4329,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "createValue",
                "source_mapping": {
                  "start": 4125,
                  "length": 231,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueToken",
                    "source_mapping": {
                      "start": 2338,
                      "length": 2389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "createValue(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          },
          {
            "type": "node",
            "name": "inValue = valueWithFee(tempInValue)",
            "source_mapping": {
              "start": 11482,
              "length": 35,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "quickTrade",
                "source_mapping": {
                  "start": 11099,
                  "length": 769,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "quickTrade(address,address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          }
        ],
        "description": "Reentrancy in ValueTrader.quickTrade(address,address,uint256) ():\n\tExternal calls:\n\t- tempInValue = safeAdd(tokenToValue(etherContract,msg.value),tokenToValue(tokenFrom,input)) ()\n\t\t- currentLiquidity = Token(token).balanceOf(this) ()\n\tEvent emitted after the call(s):\n\t- Mint(_owner,_value) ()\n\t\t- inValue = valueWithFee(tempInValue) ()\n",
        "markdown": "Reentrancy in [ValueTrader.quickTrade(address,address,uint256)]():\n\tExternal calls:\n\t- [tempInValue = safeAdd(tokenToValue(etherContract,msg.value),tokenToValue(tokenFrom,input))]()\n\t\t- [currentLiquidity = Token(token).balanceOf(this)]()\n\tEvent emitted after the call(s):\n\t- [Mint(_owner,_value)]()\n\t\t- [inValue = valueWithFee(tempInValue)]()\n",
        "first_markdown_element": "",
        "id": "ca710e6d433c2095eac246160ecaadbec62164f95993f22422101923827978c5",
        "check": "reentrancy-events",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "sellEther",
            "source_mapping": {
              "start": 10495,
              "length": 201,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ValueTrader",
                "source_mapping": {
                  "start": 4785,
                  "length": 7475,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "sellEther()"
            }
          },
          {
            "type": "node",
            "name": "assert(createValue(msg.sender,tokenToValue(etherContract,msg.value)))",
            "source_mapping": {
              "start": 10545,
              "length": 70,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "sellEther",
                "source_mapping": {
                  "start": 10495,
                  "length": 201,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "sellEther()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "currentLiquidity = Token(token).balanceOf(this)",
            "source_mapping": {
              "start": 9102,
              "length": 47,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "currentPrice",
                "source_mapping": {
                  "start": 8587,
                  "length": 682,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "currentPrice(address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "Sell(etherContract,msg.sender,msg.value,balances[msg.sender])",
            "source_mapping": {
              "start": 10625,
              "length": 64,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "sellEther",
                "source_mapping": {
                  "start": 10495,
                  "length": 201,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "sellEther()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          }
        ],
        "description": "Reentrancy in ValueTrader.sellEther() ():\n\tExternal calls:\n\t- assert(createValue(msg.sender,tokenToValue(etherContract,msg.value))) ()\n\t\t- currentLiquidity = Token(token).balanceOf(this) ()\n\tEvent emitted after the call(s):\n\t- Sell(etherContract,msg.sender,msg.value,balances[msg.sender]) ()\n",
        "markdown": "Reentrancy in [ValueTrader.sellEther()]():\n\tExternal calls:\n\t- [assert(createValue(msg.sender,tokenToValue(etherContract,msg.value)))]()\n\t\t- [currentLiquidity = Token(token).balanceOf(this)]()\n\tEvent emitted after the call(s):\n\t- [Sell(etherContract,msg.sender,msg.value,balances[msg.sender])]()\n",
        "first_markdown_element": "",
        "id": "cbea2853060dd3366c0cba7abda11560a91e254a20a161ac8a87eb4b51f72b3f",
        "check": "reentrancy-events",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "buyEther",
            "source_mapping": {
              "start": 10706,
              "length": 314,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ValueTrader",
                "source_mapping": {
                  "start": 4785,
                  "length": 7475,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "buyEther(uint256)"
            }
          },
          {
            "type": "node",
            "name": "assert(valueToToken(etherContract,balances[msg.sender]) >= amount)",
            "source_mapping": {
              "start": 10750,
              "length": 66,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "buyEther",
                "source_mapping": {
                  "start": 10706,
                  "length": 314,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "buyEther(uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "currentLiquidity = Token(token).balanceOf(this)",
            "source_mapping": {
              "start": 9102,
              "length": 47,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "currentPrice",
                "source_mapping": {
                  "start": 8587,
                  "length": 682,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "currentPrice(address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "assert(destroyValue(msg.sender,tokenToValue(etherContract,amount)))",
            "source_mapping": {
              "start": 10826,
              "length": 68,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "buyEther",
                "source_mapping": {
                  "start": 10706,
                  "length": 314,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "buyEther(uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "currentLiquidity = Token(token).balanceOf(this)",
            "source_mapping": {
              "start": 9102,
              "length": 47,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "currentPrice",
                "source_mapping": {
                  "start": 8587,
                  "length": 682,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "currentPrice(address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "assert(msg.sender.call.value(amount)())",
            "source_mapping": {
              "start": 10904,
              "length": 39,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "buyEther",
                "source_mapping": {
                  "start": 10706,
                  "length": 314,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "buyEther(uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "assert(msg.sender.call.value(amount)())",
            "source_mapping": {
              "start": 10904,
              "length": 39,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "buyEther",
                "source_mapping": {
                  "start": 10706,
                  "length": 314,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "buyEther(uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "Buy(etherContract,msg.sender,amount,balances[msg.sender])",
            "source_mapping": {
              "start": 10953,
              "length": 60,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "buyEther",
                "source_mapping": {
                  "start": 10706,
                  "length": 314,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "buyEther(uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          }
        ],
        "description": "Reentrancy in ValueTrader.buyEther(uint256) ():\n\tExternal calls:\n\t- assert(valueToToken(etherContract,balances[msg.sender]) >= amount) ()\n\t\t- currentLiquidity = Token(token).balanceOf(this) ()\n\t- assert(destroyValue(msg.sender,tokenToValue(etherContract,amount))) ()\n\t\t- currentLiquidity = Token(token).balanceOf(this) ()\n\t- assert(msg.sender.call.value(amount)()) ()\n\tExternal calls sending eth:\n\t- assert(msg.sender.call.value(amount)()) ()\n\tEvent emitted after the call(s):\n\t- Buy(etherContract,msg.sender,amount,balances[msg.sender]) ()\n",
        "markdown": "Reentrancy in [ValueTrader.buyEther(uint256)]():\n\tExternal calls:\n\t- [assert(valueToToken(etherContract,balances[msg.sender]) >= amount)]()\n\t\t- [currentLiquidity = Token(token).balanceOf(this)]()\n\t- [assert(destroyValue(msg.sender,tokenToValue(etherContract,amount)))]()\n\t\t- [currentLiquidity = Token(token).balanceOf(this)]()\n\t- [assert(msg.sender.call.value(amount)())]()\n\tExternal calls sending eth:\n\t- [assert(msg.sender.call.value(amount)())]()\n\tEvent emitted after the call(s):\n\t- [Buy(etherContract,msg.sender,amount,balances[msg.sender])]()\n",
        "first_markdown_element": "",
        "id": "cd4c434767e4de34be0213dea5b395e0e86b5fa88dbee7c3d6e585bfcebec4c9",
        "check": "reentrancy-events",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "sellToken",
            "source_mapping": {
              "start": 9770,
              "length": 392,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ValueTrader",
                "source_mapping": {
                  "start": 4785,
                  "length": 7475,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "sellToken(address,uint256)"
            }
          },
          {
            "type": "node",
            "name": "assert(verifiedTransferFrom(token,msg.sender,amount))",
            "source_mapping": {
              "start": 9970,
              "length": 53,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "sellToken",
                "source_mapping": {
                  "start": 9770,
                  "length": 392,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "sellToken(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "balanceBefore = Token(tokenFrom).balanceOf(this)",
            "source_mapping": {
              "start": 11999,
              "length": 56,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifiedTransferFrom",
                "source_mapping": {
                  "start": 11878,
                  "length": 374,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifiedTransferFrom(address,address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "success = Token(tokenFrom).transferFrom(senderAdd,this,amount)",
            "source_mapping": {
              "start": 12061,
              "length": 64,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifiedTransferFrom",
                "source_mapping": {
                  "start": 11878,
                  "length": 374,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifiedTransferFrom(address,address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "balanceAfter = Token(tokenFrom).balanceOf(this)",
            "source_mapping": {
              "start": 12131,
              "length": 55,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "verifiedTransferFrom",
                "source_mapping": {
                  "start": 11878,
                  "length": 374,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "verifiedTransferFrom(address,address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "assert(createValue(msg.sender,tokenToValue(token,amount)))",
            "source_mapping": {
              "start": 10033,
              "length": 59,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "sellToken",
                "source_mapping": {
                  "start": 9770,
                  "length": 392,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "sellToken(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "currentLiquidity = Token(token).balanceOf(this)",
            "source_mapping": {
              "start": 9102,
              "length": 47,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "currentPrice",
                "source_mapping": {
                  "start": 8587,
                  "length": 682,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "currentPrice(address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "Mint(_owner,_value)",
            "source_mapping": {
              "start": 4329,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "createValue",
                "source_mapping": {
                  "start": 4125,
                  "length": 231,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueToken",
                    "source_mapping": {
                      "start": 2338,
                      "length": 2389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "createValue(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          },
          {
            "type": "node",
            "name": "assert(createValue(msg.sender,tokenToValue(token,amount)))",
            "source_mapping": {
              "start": 10033,
              "length": 59,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "sellToken",
                "source_mapping": {
                  "start": 9770,
                  "length": 392,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "sellToken(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          },
          {
            "type": "node",
            "name": "Sell(token,msg.sender,amount,balances[msg.sender])",
            "source_mapping": {
              "start": 10102,
              "length": 53,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "sellToken",
                "source_mapping": {
                  "start": 9770,
                  "length": 392,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "sellToken(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          }
        ],
        "description": "Reentrancy in ValueTrader.sellToken(address,uint256) ():\n\tExternal calls:\n\t- assert(verifiedTransferFrom(token,msg.sender,amount)) ()\n\t\t- balanceBefore = Token(tokenFrom).balanceOf(this) ()\n\t\t- success = Token(tokenFrom).transferFrom(senderAdd,this,amount) ()\n\t\t- balanceAfter = Token(tokenFrom).balanceOf(this) ()\n\t- assert(createValue(msg.sender,tokenToValue(token,amount))) ()\n\t\t- currentLiquidity = Token(token).balanceOf(this) ()\n\tEvent emitted after the call(s):\n\t- Mint(_owner,_value) ()\n\t\t- assert(createValue(msg.sender,tokenToValue(token,amount))) ()\n\t- Sell(token,msg.sender,amount,balances[msg.sender]) ()\n",
        "markdown": "Reentrancy in [ValueTrader.sellToken(address,uint256)]():\n\tExternal calls:\n\t- [assert(verifiedTransferFrom(token,msg.sender,amount))]()\n\t\t- [balanceBefore = Token(tokenFrom).balanceOf(this)]()\n\t\t- [success = Token(tokenFrom).transferFrom(senderAdd,this,amount)]()\n\t\t- [balanceAfter = Token(tokenFrom).balanceOf(this)]()\n\t- [assert(createValue(msg.sender,tokenToValue(token,amount)))]()\n\t\t- [currentLiquidity = Token(token).balanceOf(this)]()\n\tEvent emitted after the call(s):\n\t- [Mint(_owner,_value)]()\n\t\t- [assert(createValue(msg.sender,tokenToValue(token,amount)))]()\n\t- [Sell(token,msg.sender,amount,balances[msg.sender])]()\n",
        "first_markdown_element": "",
        "id": "db6c9bb5268b8c9debd61057c1b5b704a0705567537fbacc73ad23c5e1f185f0",
        "check": "reentrancy-events",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "buyEther",
            "source_mapping": {
              "start": 10706,
              "length": 314,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ValueTrader",
                "source_mapping": {
                  "start": 4785,
                  "length": 7475,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "buyEther(uint256)"
            }
          },
          {
            "type": "node",
            "name": "assert(valueToToken(etherContract,balances[msg.sender]) >= amount)",
            "source_mapping": {
              "start": 10750,
              "length": 66,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "buyEther",
                "source_mapping": {
                  "start": 10706,
                  "length": 314,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "buyEther(uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "currentLiquidity = Token(token).balanceOf(this)",
            "source_mapping": {
              "start": 9102,
              "length": 47,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "currentPrice",
                "source_mapping": {
                  "start": 8587,
                  "length": 682,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "currentPrice(address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "assert(destroyValue(msg.sender,tokenToValue(etherContract,amount)))",
            "source_mapping": {
              "start": 10826,
              "length": 68,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "buyEther",
                "source_mapping": {
                  "start": 10706,
                  "length": 314,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "buyEther(uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "currentLiquidity = Token(token).balanceOf(this)",
            "source_mapping": {
              "start": 9102,
              "length": 47,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "currentPrice",
                "source_mapping": {
                  "start": 8587,
                  "length": 682,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "currentPrice(address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "Burn(_owner,_value)",
            "source_mapping": {
              "start": 4571,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "destroyValue",
                "source_mapping": {
                  "start": 4366,
                  "length": 232,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueToken",
                    "source_mapping": {
                      "start": 2338,
                      "length": 2389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "destroyValue(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          },
          {
            "type": "node",
            "name": "assert(destroyValue(msg.sender,tokenToValue(etherContract,amount)))",
            "source_mapping": {
              "start": 10826,
              "length": 68,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "buyEther",
                "source_mapping": {
                  "start": 10706,
                  "length": 314,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "buyEther(uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          }
        ],
        "description": "Reentrancy in ValueTrader.buyEther(uint256) ():\n\tExternal calls:\n\t- assert(valueToToken(etherContract,balances[msg.sender]) >= amount) ()\n\t\t- currentLiquidity = Token(token).balanceOf(this) ()\n\t- assert(destroyValue(msg.sender,tokenToValue(etherContract,amount))) ()\n\t\t- currentLiquidity = Token(token).balanceOf(this) ()\n\tEvent emitted after the call(s):\n\t- Burn(_owner,_value) ()\n\t\t- assert(destroyValue(msg.sender,tokenToValue(etherContract,amount))) ()\n",
        "markdown": "Reentrancy in [ValueTrader.buyEther(uint256)]():\n\tExternal calls:\n\t- [assert(valueToToken(etherContract,balances[msg.sender]) >= amount)]()\n\t\t- [currentLiquidity = Token(token).balanceOf(this)]()\n\t- [assert(destroyValue(msg.sender,tokenToValue(etherContract,amount)))]()\n\t\t- [currentLiquidity = Token(token).balanceOf(this)]()\n\tEvent emitted after the call(s):\n\t- [Burn(_owner,_value)]()\n\t\t- [assert(destroyValue(msg.sender,tokenToValue(etherContract,amount)))]()\n",
        "first_markdown_element": "",
        "id": "ea686501df58b34e33362d764c5828543efafed4e032ba96a5f88c84ac23d1e3",
        "check": "reentrancy-events",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "buyToken",
            "source_mapping": {
              "start": 10168,
              "length": 317,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ValueTrader",
                "source_mapping": {
                  "start": 4785,
                  "length": 7475,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "buyToken(address,uint256)"
            }
          },
          {
            "type": "node",
            "name": "assert(! (valueToToken(token,balances[msg.sender]) < amount))",
            "source_mapping": {
              "start": 10227,
              "length": 60,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "buyToken",
                "source_mapping": {
                  "start": 10168,
                  "length": 317,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "buyToken(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "currentLiquidity = Token(token).balanceOf(this)",
            "source_mapping": {
              "start": 9102,
              "length": 47,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "currentPrice",
                "source_mapping": {
                  "start": 8587,
                  "length": 682,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "currentPrice(address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "assert(destroyValue(msg.sender,tokenToValue(token,amount)))",
            "source_mapping": {
              "start": 10297,
              "length": 60,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "buyToken",
                "source_mapping": {
                  "start": 10168,
                  "length": 317,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "buyToken(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "currentLiquidity = Token(token).balanceOf(this)",
            "source_mapping": {
              "start": 9102,
              "length": 47,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "currentPrice",
                "source_mapping": {
                  "start": 8587,
                  "length": 682,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "currentPrice(address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "Burn(_owner,_value)",
            "source_mapping": {
              "start": 4571,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "destroyValue",
                "source_mapping": {
                  "start": 4366,
                  "length": 232,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueToken",
                    "source_mapping": {
                      "start": 2338,
                      "length": 2389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "destroyValue(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          },
          {
            "type": "node",
            "name": "assert(destroyValue(msg.sender,tokenToValue(token,amount)))",
            "source_mapping": {
              "start": 10297,
              "length": 60,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "buyToken",
                "source_mapping": {
                  "start": 10168,
                  "length": 317,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "buyToken(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          }
        ],
        "description": "Reentrancy in ValueTrader.buyToken(address,uint256) ():\n\tExternal calls:\n\t- assert(! (valueToToken(token,balances[msg.sender]) < amount)) ()\n\t\t- currentLiquidity = Token(token).balanceOf(this) ()\n\t- assert(destroyValue(msg.sender,tokenToValue(token,amount))) ()\n\t\t- currentLiquidity = Token(token).balanceOf(this) ()\n\tEvent emitted after the call(s):\n\t- Burn(_owner,_value) ()\n\t\t- assert(destroyValue(msg.sender,tokenToValue(token,amount))) ()\n",
        "markdown": "Reentrancy in [ValueTrader.buyToken(address,uint256)]():\n\tExternal calls:\n\t- [assert(! (valueToToken(token,balances[msg.sender]) < amount))]()\n\t\t- [currentLiquidity = Token(token).balanceOf(this)]()\n\t- [assert(destroyValue(msg.sender,tokenToValue(token,amount)))]()\n\t\t- [currentLiquidity = Token(token).balanceOf(this)]()\n\tEvent emitted after the call(s):\n\t- [Burn(_owner,_value)]()\n\t\t- [assert(destroyValue(msg.sender,tokenToValue(token,amount)))]()\n",
        "first_markdown_element": "",
        "id": "fd71de5b1a59eee25889b06e747934bd36886312f1e806aeb783e73fd34ba41b",
        "check": "reentrancy-events",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 481,
              "length": 5,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "assert",
                "source_mapping": {
                  "start": 418,
                  "length": 73,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SafeMath",
                    "source_mapping": {
                      "start": 25,
                      "length": 468,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "assert(bool)"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected THROW ():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "markdown": "Deprecated standard detected [THROW]():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "first_markdown_element": "",
        "id": "f5556cf1c70b64b9e4b1fc32044dd970b5f2c8b9fc21b7971fda01971033f2d5",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [],
        "description": "solc-0.4.0 is not recommended for deployment\n",
        "markdown": "solc-0.4.0 is not recommended for deployment\n",
        "first_markdown_element": "",
        "id": "e676d9e89e623fa7675baecce41eb7ab21d1d8ec9e856bc5b047e6cfb50b37ca",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "pragma",
            "name": "^0.4.0",
            "source_mapping": {
              "start": 0,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "directive": [
                "solidity",
                "^",
                "0.4",
                ".0"
              ]
            }
          }
        ],
        "description": "Pragma version^0.4.0 () allows old versions\n",
        "markdown": "Pragma version[^0.4.0]() allows old versions\n",
        "first_markdown_element": "",
        "id": "f4d0f96f990510a571c7ae954763f848d217d6f86fa5953d251f28f5221969e2",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "callDividend",
            "source_mapping": {
              "start": 7017,
              "length": 462,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ValueTrader",
                "source_mapping": {
                  "start": 4785,
                  "length": 7475,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "callDividend(address)"
            }
          },
          {
            "type": "node",
            "name": "assert(tokenManage[token_].divContractAddress.call.value(0)(tokenManage[token_].divData))",
            "source_mapping": {
              "start": 7383,
              "length": 89,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "callDividend",
                "source_mapping": {
                  "start": 7017,
                  "length": 462,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "callDividend(address)"
                }
              }
            }
          }
        ],
        "description": "Low level call in ValueTrader.callDividend(address) ():\n\t- assert(tokenManage[token_].divContractAddress.call.value(0)(tokenManage[token_].divData)) ()\n",
        "markdown": "Low level call in [ValueTrader.callDividend(address)]():\n\t- [assert(tokenManage[token_].divContractAddress.call.value(0)(tokenManage[token_].divData))]()\n",
        "first_markdown_element": "",
        "id": "292e574b01d2d5800799417d0aca97b21d4ee6ce3ccfaa632ba5612f14f920a3",
        "check": "low-level-calls",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "buyEther",
            "source_mapping": {
              "start": 10706,
              "length": 314,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ValueTrader",
                "source_mapping": {
                  "start": 4785,
                  "length": 7475,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "buyEther(uint256)"
            }
          },
          {
            "type": "node",
            "name": "assert(msg.sender.call.value(amount)())",
            "source_mapping": {
              "start": 10904,
              "length": 39,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "buyEther",
                "source_mapping": {
                  "start": 10706,
                  "length": 314,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "buyEther(uint256)"
                }
              }
            }
          }
        ],
        "description": "Low level call in ValueTrader.buyEther(uint256) ():\n\t- assert(msg.sender.call.value(amount)()) ()\n",
        "markdown": "Low level call in [ValueTrader.buyEther(uint256)]():\n\t- [assert(msg.sender.call.value(amount)())]()\n",
        "first_markdown_element": "",
        "id": "9f5288f2b185b7e88add1ebb39933665e97e8756a2e477edf2b58842c7f16c66",
        "check": "low-level-calls",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "takeEtherProfits",
            "source_mapping": {
              "start": 15853,
              "length": 256,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ProfitContainerAdapter",
                "source_mapping": {
                  "start": 15061,
                  "length": 1689,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "takeEtherProfits()"
            }
          },
          {
            "type": "node",
            "name": "assert(profitContainerLocation.call.value(this.balance)())",
            "source_mapping": {
              "start": 16044,
              "length": 58,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "takeEtherProfits",
                "source_mapping": {
                  "start": 15853,
                  "length": 256,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProfitContainerAdapter",
                    "source_mapping": {
                      "start": 15061,
                      "length": 1689,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "takeEtherProfits()"
                }
              }
            }
          }
        ],
        "description": "Low level call in ProfitContainerAdapter.takeEtherProfits() ():\n\t- assert(profitContainerLocation.call.value(this.balance)()) ()\n",
        "markdown": "Low level call in [ProfitContainerAdapter.takeEtherProfits()]():\n\t- [assert(profitContainerLocation.call.value(this.balance)())]()\n",
        "first_markdown_element": "",
        "id": "a1801955c0ba4cb5c7e33015ccfb8a1350586e03628ff1d32ec0f9aeb5557f3c",
        "check": "low-level-calls",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "quickTrade",
            "source_mapping": {
              "start": 11099,
              "length": 769,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ValueTrader",
                "source_mapping": {
                  "start": 4785,
                  "length": 7475,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "quickTrade(address,address,uint256)"
            }
          },
          {
            "type": "node",
            "name": "assert(msg.sender.call.value(outValue)())",
            "source_mapping": {
              "start": 11692,
              "length": 41,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "quickTrade",
                "source_mapping": {
                  "start": 11099,
                  "length": 769,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueTrader",
                    "source_mapping": {
                      "start": 4785,
                      "length": 7475,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "quickTrade(address,address,uint256)"
                }
              }
            }
          }
        ],
        "description": "Low level call in ValueTrader.quickTrade(address,address,uint256) ():\n\t- assert(msg.sender.call.value(outValue)()) ()\n",
        "markdown": "Low level call in [ValueTrader.quickTrade(address,address,uint256)]():\n\t- [assert(msg.sender.call.value(outValue)())]()\n",
        "first_markdown_element": "",
        "id": "f68108b34b673b581cc886b9e37ced469b20ee4d5dcdfe1c23081601f7fc8bf1",
        "check": "low-level-calls",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_owner",
            "source_mapping": {
              "start": 4146,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "createValue",
                "source_mapping": {
                  "start": 4125,
                  "length": 231,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueToken",
                    "source_mapping": {
                      "start": 2338,
                      "length": 2389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "createValue(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter ValueToken.createValue(address,uint256)._owner () is not in mixedCase\n",
        "markdown": "Parameter [ValueToken.createValue(address,uint256)._owner]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "0649f8b74df0f41943eef901a4289c86c2bd51b87f18b7de143fc14b3e00da1b",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_value",
            "source_mapping": {
              "start": 3728,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "approve",
                "source_mapping": {
                  "start": 3693,
                  "length": 274,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueToken",
                    "source_mapping": {
                      "start": 2338,
                      "length": 2389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "approve(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter ValueToken.approve(address,uint256)._value () is not in mixedCase\n",
        "markdown": "Parameter [ValueToken.approve(address,uint256)._value]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "1f7975355b9868af26feeb11e5b5150d522a26c52603aafb57e918af05f67f90",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_owner",
            "source_mapping": {
              "start": 2712,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "balanceOf",
                "source_mapping": {
                  "start": 2693,
                  "length": 109,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueToken",
                    "source_mapping": {
                      "start": 2338,
                      "length": 2389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "balanceOf(address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter ValueToken.balanceOf(address)._owner () is not in mixedCase\n",
        "markdown": "Parameter [ValueToken.balanceOf(address)._owner]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "2a361e8de6b4ccd2b6302608a0da9350c726f42ebd5760153ab59df556fc7bd8",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_value",
            "source_mapping": {
              "start": 4162,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "createValue",
                "source_mapping": {
                  "start": 4125,
                  "length": 231,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueToken",
                    "source_mapping": {
                      "start": 2338,
                      "length": 2389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "createValue(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter ValueToken.createValue(address,uint256)._value () is not in mixedCase\n",
        "markdown": "Parameter [ValueToken.createValue(address,uint256)._value]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "6839d52e7cda0a7a6bc1e2aefa130357b6bcdacc512cb33b29550299ba392a20",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_value",
            "source_mapping": {
              "start": 2843,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "transfer",
                "source_mapping": {
                  "start": 2812,
                  "length": 373,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueToken",
                    "source_mapping": {
                      "start": 2338,
                      "length": 2389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "transfer(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter ValueToken.transfer(address,uint256)._value () is not in mixedCase\n",
        "markdown": "Parameter [ValueToken.transfer(address,uint256)._value]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "8553086db637becd2f8e2b28c03c765e95ce2f67fe6c9fba4259581bcd0d2276",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_to",
            "source_mapping": {
              "start": 2830,
              "length": 11,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "transfer",
                "source_mapping": {
                  "start": 2812,
                  "length": 373,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueToken",
                    "source_mapping": {
                      "start": 2338,
                      "length": 2389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "transfer(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter ValueToken.transfer(address,uint256)._to () is not in mixedCase\n",
        "markdown": "Parameter [ValueToken.transfer(address,uint256)._to]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "9ae2c9e8fdb1f5c3729b389f0d37d8486c1ccd849126affe29ebd2f461660c21",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_value",
            "source_mapping": {
              "start": 3245,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "transferFrom",
                "source_mapping": {
                  "start": 3195,
                  "length": 488,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueToken",
                    "source_mapping": {
                      "start": 2338,
                      "length": 2389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "transferFrom(address,address,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter ValueToken.transferFrom(address,address,uint256)._value () is not in mixedCase\n",
        "markdown": "Parameter [ValueToken.transferFrom(address,address,uint256)._value]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "a277ff1ec9e8bd8209dc2fbe45c709295b16510461dc24d6c8df816d5e04c6ae",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_spender",
            "source_mapping": {
              "start": 3710,
              "length": 16,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "approve",
                "source_mapping": {
                  "start": 3693,
                  "length": 274,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueToken",
                    "source_mapping": {
                      "start": 2338,
                      "length": 2389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "approve(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter ValueToken.approve(address,uint256)._spender () is not in mixedCase\n",
        "markdown": "Parameter [ValueToken.approve(address,uint256)._spender]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "a734ee94069aa68a5f3ac32ba5857a018209be9f4206b008f6f208d9d4c1c262",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_value",
            "source_mapping": {
              "start": 4404,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "destroyValue",
                "source_mapping": {
                  "start": 4366,
                  "length": 232,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueToken",
                    "source_mapping": {
                      "start": 2338,
                      "length": 2389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "destroyValue(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter ValueToken.destroyValue(address,uint256)._value () is not in mixedCase\n",
        "markdown": "Parameter [ValueToken.destroyValue(address,uint256)._value]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "d70f49916e56837cadada49a3822cd24eabc6a057889f0cf6fd59db3d2711e92",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_owner",
            "source_mapping": {
              "start": 3996,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "allowance",
                "source_mapping": {
                  "start": 3977,
                  "length": 138,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueToken",
                    "source_mapping": {
                      "start": 2338,
                      "length": 2389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "allowance(address,address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter ValueToken.allowance(address,address)._owner () is not in mixedCase\n",
        "markdown": "Parameter [ValueToken.allowance(address,address)._owner]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "dc1a3edd4af068b6e08938666cdbfe1e34fd44a890377dd17fa5b70f52206a32",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_to",
            "source_mapping": {
              "start": 3232,
              "length": 11,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "transferFrom",
                "source_mapping": {
                  "start": 3195,
                  "length": 488,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueToken",
                    "source_mapping": {
                      "start": 2338,
                      "length": 2389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "transferFrom(address,address,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter ValueToken.transferFrom(address,address,uint256)._to () is not in mixedCase\n",
        "markdown": "Parameter [ValueToken.transferFrom(address,address,uint256)._to]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "e75ee31c85433f96cf2139f7aa97091685bc80d2819636e224d9f9db543a267d",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_owner",
            "source_mapping": {
              "start": 4388,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "destroyValue",
                "source_mapping": {
                  "start": 4366,
                  "length": 232,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueToken",
                    "source_mapping": {
                      "start": 2338,
                      "length": 2389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "destroyValue(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter ValueToken.destroyValue(address,uint256)._owner () is not in mixedCase\n",
        "markdown": "Parameter [ValueToken.destroyValue(address,uint256)._owner]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "e8913d93624c58f593f6a4301b06da6da3741a6bf029d1a3c6864bf87543130e",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_spender",
            "source_mapping": {
              "start": 4012,
              "length": 16,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "allowance",
                "source_mapping": {
                  "start": 3977,
                  "length": 138,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueToken",
                    "source_mapping": {
                      "start": 2338,
                      "length": 2389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "allowance(address,address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter ValueToken.allowance(address,address)._spender () is not in mixedCase\n",
        "markdown": "Parameter [ValueToken.allowance(address,address)._spender]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "ea8b444672984ea01edd781c58c8c4acfaef1d0127e0767007259d8fb1ede0e8",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_from",
            "source_mapping": {
              "start": 3217,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "transferFrom",
                "source_mapping": {
                  "start": 3195,
                  "length": 488,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ValueToken",
                    "source_mapping": {
                      "start": 2338,
                      "length": 2389,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "transferFrom(address,address,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter ValueToken.transferFrom(address,address,uint256)._from () is not in mixedCase\n",
        "markdown": "Parameter [ValueToken.transferFrom(address,address,uint256)._from]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "fdcdd5772bb6480a6ed96c56af1d5c863650ea4763a42e29e61e0639a586b9fc",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "Approval",
            "source_mapping": {
              "start": 2206,
              "length": 81,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Token",
                "source_mapping": {
                  "start": 495,
                  "length": 1841,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "Approval(address,address,uint256)"
            },
            "additional_fields": {
              "parameter_name": "_spender"
            }
          }
        ],
        "description": "ERC20 event Token.Approval(address,address,uint256) ()does not index parameter _spender\n",
        "markdown": "ERC20 event [Token.Approval(address,address,uint256)]()does not index parameter _spender\n",
        "first_markdown_element": "",
        "id": "60eadee4ba8ea7a4173bda71355566a785d6e3e794ce35c14210e02db8163ae3",
        "check": "erc20-indexed",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "Transfer",
            "source_mapping": {
              "start": 2128,
              "length": 75,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Token",
                "source_mapping": {
                  "start": 495,
                  "length": 1841,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "Transfer(address,address,uint256)"
            },
            "additional_fields": {
              "parameter_name": "_from"
            }
          }
        ],
        "description": "ERC20 event Token.Transfer(address,address,uint256) ()does not index parameter _from\n",
        "markdown": "ERC20 event [Token.Transfer(address,address,uint256)]()does not index parameter _from\n",
        "first_markdown_element": "",
        "id": "8edea97a430bc547f583e65b2fe832da5c54ad0dd3bb7b8d1c72fd51605bb80c",
        "check": "erc20-indexed",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "Approval",
            "source_mapping": {
              "start": 2206,
              "length": 81,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Token",
                "source_mapping": {
                  "start": 495,
                  "length": 1841,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "Approval(address,address,uint256)"
            },
            "additional_fields": {
              "parameter_name": "_owner"
            }
          }
        ],
        "description": "ERC20 event Token.Approval(address,address,uint256) ()does not index parameter _owner\n",
        "markdown": "ERC20 event [Token.Approval(address,address,uint256)]()does not index parameter _owner\n",
        "first_markdown_element": "",
        "id": "c5dd671e74f7dbb2d7f1820600f151db83c15deba6ee5a83d76b801b3ca43a71",
        "check": "erc20-indexed",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "Transfer",
            "source_mapping": {
              "start": 2128,
              "length": 75,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Token",
                "source_mapping": {
                  "start": 495,
                  "length": 1841,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "Transfer(address,address,uint256)"
            },
            "additional_fields": {
              "parameter_name": "_to"
            }
          }
        ],
        "description": "ERC20 event Token.Transfer(address,address,uint256) ()does not index parameter _to\n",
        "markdown": "ERC20 event [Token.Transfer(address,address,uint256)]()does not index parameter _to\n",
        "first_markdown_element": "",
        "id": "cc771b24d9cc10e71569c6f58a49a7077559412783a14209619bb29c5a5251af",
        "check": "erc20-indexed",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "decimals",
            "source_mapping": {
              "start": 2413,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ValueToken",
                "source_mapping": {
                  "start": 2338,
                  "length": 2389,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "ValueTrader",
            "source_mapping": {
              "start": 4785,
              "length": 7475,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "ValueToken.decimals () is never used in ValueTrader ()\n",
        "markdown": "[ValueToken.decimals]() is never used in [ValueTrader]()\n",
        "first_markdown_element": "",
        "id": "5cc15f4a8f3542cd10e6a58a0d4d2f9d02eeb19194ac49fa4b2e67c930726a76",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "name",
            "source_mapping": {
              "start": 2386,
              "length": 21,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ValueToken",
                "source_mapping": {
                  "start": 2338,
                  "length": 2389,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "ValueTrader",
            "source_mapping": {
              "start": 4785,
              "length": 7475,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "ValueToken.name () is never used in ValueTrader ()\n",
        "markdown": "[ValueToken.name]() is never used in [ValueTrader]()\n",
        "first_markdown_element": "",
        "id": "75687aa595ed70fce4a4d8b5cbec48d8c5c98ce5bb8a56e2f7db896f893ffa38",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "decimals",
            "source_mapping": {
              "start": 2413,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ValueToken",
                "source_mapping": {
                  "start": 2338,
                  "length": 2389,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "ValueToken.decimals () should be constant \n",
        "markdown": "[ValueToken.decimals]() should be constant \n",
        "first_markdown_element": "",
        "id": "86636142139522f79af9708a76ff643ba1c514e3d84e285121ef92c5408bf55c",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "name",
            "source_mapping": {
              "start": 2386,
              "length": 21,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ValueToken",
                "source_mapping": {
                  "start": 2338,
                  "length": 2389,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "ValueToken.name () should be constant \n",
        "markdown": "[ValueToken.name]() should be constant \n",
        "first_markdown_element": "",
        "id": "f79aba23dae48dc0aa29610b237e47ce7042b23ca2d6959d207820a1db122613",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "configureTokenDividend",
            "source_mapping": {
              "start": 6763,
              "length": 244,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ValueTrader",
                "source_mapping": {
                  "start": 4785,
                  "length": 7475,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "configureTokenDividend(address,bool,address,bytes)"
            }
          }
        ],
        "description": "configureTokenDividend(address,bool,address,bytes) should be declared external:\n\t- ValueTrader.configureTokenDividend(address,bool,address,bytes) ()\n",
        "markdown": "configureTokenDividend(address,bool,address,bytes) should be declared external:\n\t- [ValueTrader.configureTokenDividend(address,bool,address,bytes)]()\n",
        "first_markdown_element": "",
        "id": "af8915ed402e152a7afc65567e3905215b0e85d3ee1ad8f4b57d518945d1a6e4",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "configureTokenDividend",
            "source_mapping": {
              "start": 13954,
              "length": 152,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ShopKeeper",
                "source_mapping": {
                  "start": 12398,
                  "length": 2599,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "configureTokenDividend(address,bool,address,bytes)"
            }
          }
        ],
        "description": "configureTokenDividend(address,bool,address,bytes) should be declared external:\n\t- ShopKeeper.configureTokenDividend(address,bool,address,bytes) ()\n",
        "markdown": "configureTokenDividend(address,bool,address,bytes) should be declared external:\n\t- [ShopKeeper.configureTokenDividend(address,bool,address,bytes)]()\n",
        "first_markdown_element": "",
        "id": "bfd262b83f2517ea4db32cce8b61dee26d3d0358f56e45e6511b7e08b96df745",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      }
    ]
  }
}