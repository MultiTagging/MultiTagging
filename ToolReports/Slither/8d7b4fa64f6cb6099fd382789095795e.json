{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "variable",
            "name": "_new",
            "source_mapping": {
              "start": 244,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setOwner",
                "source_mapping": {
                  "start": 226,
                  "length": 83,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Owned",
                    "source_mapping": {
                      "start": 82,
                      "length": 266,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setOwner(address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "owner = _new",
            "source_mapping": {
              "start": 294,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setOwner",
                "source_mapping": {
                  "start": 226,
                  "length": 83,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Owned",
                    "source_mapping": {
                      "start": 82,
                      "length": 266,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setOwner(address)"
                }
              }
            }
          }
        ],
        "description": "Owned.setOwner(address)._new () lacks a zero-check on :\n\t\t- owner = _new ()\n",
        "markdown": "[Owned.setOwner(address)._new]() lacks a zero-check on :\n\t\t- [owner = _new]()\n",
        "first_markdown_element": "",
        "id": "cf95da28c3bea50f8dac751abbc1461fd46ac18f52ab78645a88e776f2c625ed",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "delete puzzles[sha3()(_code)]",
            "source_mapping": {
              "start": 1372,
              "length": 27,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "confirm",
                "source_mapping": {
                  "start": 1248,
                  "length": 307,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProofOfEmail",
                    "source_mapping": {
                      "start": 736,
                      "length": 1304,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "confirm(bytes32)"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected delete puzzles[sha3()(_code)] ():\n\t- Usage of \"sha3()\" should be replaced with \"keccak256()\"\n",
        "markdown": "Deprecated standard detected [delete puzzles[sha3()(_code)]]():\n\t- Usage of \"sha3()\" should be replaced with \"keccak256()\"\n",
        "first_markdown_element": "",
        "id": "9c8b5343e6c24fcd663516be56a6b8de07c716596d349c42a4cd1a311fb1e781",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "emailHash = puzzles[sha3()(_code)]",
            "source_mapping": {
              "start": 1299,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "confirm",
                "source_mapping": {
                  "start": 1248,
                  "length": 307,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProofOfEmail",
                    "source_mapping": {
                      "start": 736,
                      "length": 1304,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "confirm(bytes32)"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected emailHash = puzzles[sha3()(_code)] ():\n\t- Usage of \"sha3()\" should be replaced with \"keccak256()\"\n",
        "markdown": "Deprecated standard detected [emailHash = puzzles[sha3()(_code)]]():\n\t- Usage of \"sha3()\" should be replaced with \"keccak256()\"\n",
        "first_markdown_element": "",
        "id": "ca13cf8f2859e4e85b5e46963247be8a8758614b8616c603b71e32251b7f9eb5",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 1688,
              "length": 5,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "drain",
                "source_mapping": {
                  "start": 1617,
                  "length": 80,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProofOfEmail",
                    "source_mapping": {
                      "start": 736,
                      "length": 1304,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "drain()"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected THROW ():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "markdown": "Deprecated standard detected [THROW]():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "first_markdown_element": "",
        "id": "f5556cf1c70b64b9e4b1fc32044dd970b5f2c8b9fc21b7971fda01971033f2d5",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [],
        "description": "solc-0.4.0 is not recommended for deployment\n",
        "markdown": "solc-0.4.0 is not recommended for deployment\n",
        "first_markdown_element": "",
        "id": "e676d9e89e623fa7675baecce41eb7ab21d1d8ec9e856bc5b047e6cfb50b37ca",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "pragma",
            "name": "^0.4.0",
            "source_mapping": {
              "start": 57,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "directive": [
                "solidity",
                "^",
                "0.4",
                ".0"
              ]
            }
          }
        ],
        "description": "Pragma version^0.4.0 () allows old versions\n",
        "markdown": "Pragma version[^0.4.0]() allows old versions\n",
        "first_markdown_element": "",
        "id": "f4d0f96f990510a571c7ae954763f848d217d6f86fa5953d251f28f5221969e2",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_new",
            "source_mapping": {
              "start": 1574,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setFee",
                "source_mapping": {
                  "start": 1558,
                  "length": 56,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProofOfEmail",
                    "source_mapping": {
                      "start": 736,
                      "length": 1304,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setFee(uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter ProofOfEmail.setFee(uint256)._new () is not in mixedCase\n",
        "markdown": "Parameter [ProofOfEmail.setFee(uint256)._new]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "0000c79de0ea190d6950705a59e5fd9aa8e15b99a713dbdca46183f02ef323e5",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_who",
            "source_mapping": {
              "start": 1719,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "certified",
                "source_mapping": {
                  "start": 1700,
                  "length": 90,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProofOfEmail",
                    "source_mapping": {
                      "start": 736,
                      "length": 1304,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "certified(address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter ProofOfEmail.certified(address)._who () is not in mixedCase\n",
        "markdown": "Parameter [ProofOfEmail.certified(address)._who]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "2e25f3392d3498d27e37961ed666f2bfeb8c0d0663c3ff9a4e97f41e76715c10",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_who",
            "source_mapping": {
              "start": 1806,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "get",
                "source_mapping": {
                  "start": 1793,
                  "length": 90,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProofOfEmail",
                    "source_mapping": {
                      "start": 736,
                      "length": 1304,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "get(address,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter ProofOfEmail.get(address,string)._who () is not in mixedCase\n",
        "markdown": "Parameter [ProofOfEmail.get(address,string)._who]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "37ee86e0b28e85ca9ef40eb66edd21d07e144766bc2e15b1cb06a8c1dc856256",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_who",
            "source_mapping": {
              "start": 1108,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "puzzle",
                "source_mapping": {
                  "start": 1092,
                  "length": 153,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProofOfEmail",
                    "source_mapping": {
                      "start": 736,
                      "length": 1304,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "puzzle(address,bytes32,bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter ProofOfEmail.puzzle(address,bytes32,bytes32)._who () is not in mixedCase\n",
        "markdown": "Parameter [ProofOfEmail.puzzle(address,bytes32,bytes32)._who]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "42085365b863dd80772cbbccbbacd4d637d3eef4bfa1c32302319fa257f4b74e",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_emailHash",
            "source_mapping": {
              "start": 1139,
              "length": 18,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "puzzle",
                "source_mapping": {
                  "start": 1092,
                  "length": 153,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProofOfEmail",
                    "source_mapping": {
                      "start": 736,
                      "length": 1304,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "puzzle(address,bytes32,bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter ProofOfEmail.puzzle(address,bytes32,bytes32)._emailHash () is not in mixedCase\n",
        "markdown": "Parameter [ProofOfEmail.puzzle(address,bytes32,bytes32)._emailHash]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "556055c471b775e2cf0f09d52b6763148112136e0d078457f590072f044ff26b",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_puzzle",
            "source_mapping": {
              "start": 1122,
              "length": 15,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "puzzle",
                "source_mapping": {
                  "start": 1092,
                  "length": 153,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProofOfEmail",
                    "source_mapping": {
                      "start": 736,
                      "length": 1304,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "puzzle(address,bytes32,bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter ProofOfEmail.puzzle(address,bytes32,bytes32)._puzzle () is not in mixedCase\n",
        "markdown": "Parameter [ProofOfEmail.puzzle(address,bytes32,bytes32)._puzzle]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "739935e37869f1ae70af29b3e27f36a1b165fb029fe52f6ea4767b9135abf856",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "when_fee_paid",
            "source_mapping": {
              "start": 781,
              "length": 58,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ProofOfEmail",
                "source_mapping": {
                  "start": 736,
                  "length": 1304,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "when_fee_paid()"
            },
            "additional_fields": {
              "target": "modifier",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Modifier ProofOfEmail.when_fee_paid() () is not in mixedCase\n",
        "markdown": "Modifier [ProofOfEmail.when_fee_paid()]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "8023c4c8da148a31bebcc04a3b9bd20d5e936db7814f3b6dea2dc7120f843b31",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "only_owner",
            "source_mapping": {
              "start": 100,
              "length": 59,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Owned",
                "source_mapping": {
                  "start": 82,
                  "length": 266,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "only_owner()"
            },
            "additional_fields": {
              "target": "modifier",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Modifier Owned.only_owner() () is not in mixedCase\n",
        "markdown": "Modifier [Owned.only_owner()]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "b45e9850ac7d459bf4575483f5d6bf02d14756b0b49740b0d01ed29a66a4cbc5",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_new",
            "source_mapping": {
              "start": 244,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setOwner",
                "source_mapping": {
                  "start": 226,
                  "length": 83,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Owned",
                    "source_mapping": {
                      "start": 82,
                      "length": 266,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setOwner(address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Owned.setOwner(address)._new () is not in mixedCase\n",
        "markdown": "Parameter [Owned.setOwner(address)._new]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "e3cd03fa892217e60abc7010df2e8b6777afbed11022c482c27ca453386423a3",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_code",
            "source_mapping": {
              "start": 1265,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "confirm",
                "source_mapping": {
                  "start": 1248,
                  "length": 307,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProofOfEmail",
                    "source_mapping": {
                      "start": 736,
                      "length": 1304,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "confirm(bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter ProofOfEmail.confirm(bytes32)._code () is not in mixedCase\n",
        "markdown": "Parameter [ProofOfEmail.confirm(bytes32)._code]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "f1e717b8e6db3e93031c0f68ad119004af0d37770a95e9d80aa51dfb15d9c7b2",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_emailHash",
            "source_mapping": {
              "start": 1006,
              "length": 18,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "request",
                "source_mapping": {
                  "start": 989,
                  "length": 100,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProofOfEmail",
                    "source_mapping": {
                      "start": 736,
                      "length": 1304,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "request(bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter ProofOfEmail.request(bytes32)._emailHash () is not in mixedCase\n",
        "markdown": "Parameter [ProofOfEmail.request(bytes32)._emailHash]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "fc9824eac357af76c155cfc017c66f2d437ad6834f82dc6ee17c25db519baac0",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "getAddress",
            "source_mapping": {
              "start": 580,
              "length": 78,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Certifier",
                "source_mapping": {
                  "start": 350,
                  "length": 384,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "getAddress(address,string)"
            }
          }
        ],
        "description": "getAddress(address,string) should be declared external:\n\t- Certifier.getAddress(address,string) ()\n",
        "markdown": "getAddress(address,string) should be declared external:\n\t- [Certifier.getAddress(address,string)]()\n",
        "first_markdown_element": "",
        "id": "6dfa9713aef7020b73cf8fdecc74356b11bc3d6438abe503edf10d7899ceaf36",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "getUint",
            "source_mapping": {
              "start": 660,
              "length": 72,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Certifier",
                "source_mapping": {
                  "start": 350,
                  "length": 384,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "getUint(address,string)"
            }
          }
        ],
        "description": "getUint(address,string) should be declared external:\n\t- Certifier.getUint(address,string) ()\n",
        "markdown": "getUint(address,string) should be declared external:\n\t- [Certifier.getUint(address,string)]()\n",
        "first_markdown_element": "",
        "id": "b54d05a302c586cb61cae271070c57d827c8ab5025076f840661586ee9be25f4",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "get",
            "source_mapping": {
              "start": 507,
              "length": 71,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Certifier",
                "source_mapping": {
                  "start": 350,
                  "length": 384,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "get(address,string)"
            }
          },
          {
            "type": "function",
            "name": "get",
            "source_mapping": {
              "start": 1793,
              "length": 90,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ProofOfEmail",
                "source_mapping": {
                  "start": 736,
                  "length": 1304,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "get(address,string)"
            }
          }
        ],
        "description": "get(address,string) should be declared external:\n\t- Certifier.get(address,string) ()\n\t- ProofOfEmail.get(address,string) ()\n",
        "markdown": "get(address,string) should be declared external:\n\t- [Certifier.get(address,string)]()\n\t- [ProofOfEmail.get(address,string)]()\n",
        "first_markdown_element": "",
        "id": "d4ee3208023488e8b2c21e37b5e5026c9f1593eaee50d1055bfc5430eac5d279",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      }
    ]
  }
}