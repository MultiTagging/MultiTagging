{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 610,
              "length": 5,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "isOwner",
                "source_mapping": {
                  "start": 564,
                  "length": 57,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SignedDigitalAsset",
                    "source_mapping": {
                      "start": 25,
                      "length": 1139,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "isOwner()"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected THROW ():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "markdown": "Deprecated standard detected [THROW]():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "first_markdown_element": "",
        "id": "f5556cf1c70b64b9e4b1fc32044dd970b5f2c8b9fc21b7971fda01971033f2d5",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "pragma",
            "name": "^0.4.2",
            "source_mapping": {
              "start": 0,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "directive": [
                "solidity",
                "^",
                "0.4",
                ".2"
              ]
            }
          }
        ],
        "description": "Pragma version^0.4.2 () allows old versions\n",
        "markdown": "Pragma version[^0.4.2]() allows old versions\n",
        "first_markdown_element": "",
        "id": "684a56cd27e54ff2efdccacdc31c1f9807e03d1014a0a136c00240d60a2f3a67",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [],
        "description": "solc-0.4.2 is not recommended for deployment\n",
        "markdown": "solc-0.4.2 is not recommended for deployment\n",
        "first_markdown_element": "",
        "id": "707dbfcfdf84b6816d84949bbe947a3701cd8aa49952e3db1879e122f1f0990d",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_digitalFingerprint",
            "source_mapping": {
              "start": 718,
              "length": 27,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "add",
                "source_mapping": {
                  "start": 705,
                  "length": 255,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SignedDigitalAsset",
                    "source_mapping": {
                      "start": 25,
                      "length": 1139,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "add(bytes32,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter SignedDigitalAsset.add(bytes32,string)._digitalFingerprint () is not in mixedCase\n",
        "markdown": "Parameter [SignedDigitalAsset.add(bytes32,string)._digitalFingerprint]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "6291a4118c773b4a4a0ec78d1401cb6366af51e6b55548255d4a473b4966ccc6",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_digitalFingerprint",
            "source_mapping": {
              "start": 1060,
              "length": 27,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "get",
                "source_mapping": {
                  "start": 1047,
                  "length": 115,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SignedDigitalAsset",
                    "source_mapping": {
                      "start": 25,
                      "length": 1139,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "get(bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter SignedDigitalAsset.get(bytes32)._digitalFingerprint () is not in mixedCase\n",
        "markdown": "Parameter [SignedDigitalAsset.get(bytes32)._digitalFingerprint]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "6603def2b7d45f37ee42e7355cc4bce1eb8381e1166493dbcfdd7ba559831418",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_jsonWebToken",
            "source_mapping": {
              "start": 747,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "add",
                "source_mapping": {
                  "start": 705,
                  "length": 255,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SignedDigitalAsset",
                    "source_mapping": {
                      "start": 25,
                      "length": 1139,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "add(bytes32,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter SignedDigitalAsset.add(bytes32,string)._jsonWebToken () is not in mixedCase\n",
        "markdown": "Parameter [SignedDigitalAsset.add(bytes32,string)._jsonWebToken]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "e7bc9126449693f4b2c9cfc03fd5c4956d2f549aedcc317e2490f2cca62cb7b2",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_jsonWebToken",
            "source_mapping": {
              "start": 747,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "add",
                "source_mapping": {
                  "start": 705,
                  "length": 255,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SignedDigitalAsset",
                    "source_mapping": {
                      "start": 25,
                      "length": 1139,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "add(bytes32,string)"
                }
              }
            }
          },
          {
            "type": "variable",
            "name": "jsonWebTokens",
            "source_mapping": {
              "start": 302,
              "length": 41,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SignedDigitalAsset",
                "source_mapping": {
                  "start": 25,
                  "length": 1139,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "Variable SignedDigitalAsset.add(bytes32,string)._jsonWebToken () is too similar to SignedDigitalAsset.jsonWebTokens ()\n",
        "markdown": "Variable [SignedDigitalAsset.add(bytes32,string)._jsonWebToken]() is too similar to [SignedDigitalAsset.jsonWebTokens]()\n",
        "first_markdown_element": "",
        "id": "3aedaef982361eef5a9f97b1cd493b44c555958b88670f176d86613a9f532067",
        "check": "similar-names",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "name",
            "source_mapping": {
              "start": 185,
              "length": 38,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SignedDigitalAsset",
                "source_mapping": {
                  "start": 25,
                  "length": 1139,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "SignedDigitalAsset",
            "source_mapping": {
              "start": 25,
              "length": 1139,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "SignedDigitalAsset.name () is never used in SignedDigitalAsset ()\n",
        "markdown": "[SignedDigitalAsset.name]() is never used in [SignedDigitalAsset]()\n",
        "first_markdown_element": "",
        "id": "40d4b42eb4ad199c5c4c4bc9306696470516fc03e0c657083ffcdf1690187a1f",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "name",
            "source_mapping": {
              "start": 185,
              "length": 38,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SignedDigitalAsset",
                "source_mapping": {
                  "start": 25,
                  "length": 1139,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "SignedDigitalAsset.name () should be constant \n",
        "markdown": "[SignedDigitalAsset.name]() should be constant \n",
        "first_markdown_element": "",
        "id": "b83ba863f5177e8d84d4c43432fe1c5b80fa38ddc016cad2b2658cda905f199d",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "add",
            "source_mapping": {
              "start": 705,
              "length": 255,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SignedDigitalAsset",
                "source_mapping": {
                  "start": 25,
                  "length": 1139,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "add(bytes32,string)"
            }
          }
        ],
        "description": "add(bytes32,string) should be declared external:\n\t- SignedDigitalAsset.add(bytes32,string) ()\n",
        "markdown": "add(bytes32,string) should be declared external:\n\t- [SignedDigitalAsset.add(bytes32,string)]()\n",
        "first_markdown_element": "",
        "id": "fdec3ad0b920a3763399156385709ce92c53bdae261c87928113d34732cb96d5",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      }
    ]
  }
}