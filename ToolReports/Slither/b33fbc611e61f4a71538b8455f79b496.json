{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "function",
            "name": "setStartTime",
            "source_mapping": {
              "start": 2179,
              "length": 183,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "FunFairSale",
                "source_mapping": {
                  "start": 1017,
                  "length": 1348,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "setStartTime(uint256,uint256)"
            }
          },
          {
            "type": "node",
            "name": "startTime = _startTime",
            "source_mapping": {
              "start": 2303,
              "length": 22,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setStartTime",
                "source_mapping": {
                  "start": 2179,
                  "length": 183,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "FunFairSale",
                    "source_mapping": {
                      "start": 1017,
                      "length": 1348,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setStartTime(uint256,uint256)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "deadline = _deadline",
            "source_mapping": {
              "start": 2335,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setStartTime",
                "source_mapping": {
                  "start": 2179,
                  "length": 183,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "FunFairSale",
                    "source_mapping": {
                      "start": 1017,
                      "length": 1348,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setStartTime(uint256,uint256)"
                }
              }
            }
          }
        ],
        "description": "FunFairSale.setStartTime(uint256,uint256) () should emit an event for: \n\t- startTime = _startTime () \n\t- deadline = _deadline () \n",
        "markdown": "[FunFairSale.setStartTime(uint256,uint256)]() should emit an event for: \n\t- [startTime = _startTime]() \n\t- [deadline = _deadline]() \n",
        "first_markdown_element": "",
        "id": "17819137272ca0123ab55bb3fb2c77d7d7bf03d41443ecfb7de93a0da5be2877",
        "check": "events-maths",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "shortenDeadline",
            "source_mapping": {
              "start": 1464,
              "length": 179,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "FunFairSale",
                "source_mapping": {
                  "start": 1017,
                  "length": 1348,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "shortenDeadline(uint256)"
            }
          },
          {
            "type": "node",
            "name": "deadline = t",
            "source_mapping": {
              "start": 1624,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "shortenDeadline",
                "source_mapping": {
                  "start": 1464,
                  "length": 179,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "FunFairSale",
                    "source_mapping": {
                      "start": 1017,
                      "length": 1348,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "shortenDeadline(uint256)"
                }
              }
            }
          }
        ],
        "description": "FunFairSale.shortenDeadline(uint256) () should emit an event for: \n\t- deadline = t () \n",
        "markdown": "[FunFairSale.shortenDeadline(uint256)]() should emit an event for: \n\t- [deadline = t]() \n",
        "first_markdown_element": "",
        "id": "e80e74acffaaaa8ff005ee1a58f9d59871c2b371c7678d229c85e5dd8a4d071b",
        "check": "events-maths",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "setCap",
            "source_mapping": {
              "start": 2103,
              "length": 70,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "FunFairSale",
                "source_mapping": {
                  "start": 1017,
                  "length": 1348,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "setCap(uint256)"
            }
          },
          {
            "type": "node",
            "name": "capAmount = _cap",
            "source_mapping": {
              "start": 2150,
              "length": 16,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setCap",
                "source_mapping": {
                  "start": 2103,
                  "length": 70,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "FunFairSale",
                    "source_mapping": {
                      "start": 1017,
                      "length": 1348,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setCap(uint256)"
                }
              }
            }
          }
        ],
        "description": "FunFairSale.setCap(uint256) () should emit an event for: \n\t- capAmount = _cap () \n",
        "markdown": "[FunFairSale.setCap(uint256)]() should emit an event for: \n\t- [capAmount = _cap]() \n",
        "first_markdown_element": "",
        "id": "ef4ee3e5a93478fef600caab4cc3e59636ebc90d1b6d90560ca31c4c8d1bd159",
        "check": "events-maths",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_newOwner",
            "source_mapping": {
              "start": 398,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeOwner",
                "source_mapping": {
                  "start": 377,
                  "length": 87,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Owned",
                    "source_mapping": {
                      "start": 163,
                      "length": 421,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeOwner(address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "newOwner = _newOwner",
            "source_mapping": {
              "start": 437,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeOwner",
                "source_mapping": {
                  "start": 377,
                  "length": 87,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Owned",
                    "source_mapping": {
                      "start": 163,
                      "length": 421,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeOwner(address)"
                }
              }
            }
          }
        ],
        "description": "Owned.changeOwner(address)._newOwner () lacks a zero-check on :\n\t\t- newOwner = _newOwner ()\n",
        "markdown": "[Owned.changeOwner(address)._newOwner]() lacks a zero-check on :\n\t\t- [newOwner = _newOwner]()\n",
        "first_markdown_element": "",
        "id": "3e590479d5cd5d6b9ec422a3284e34c1a099822f3630602a478e1ffa87022ff1",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "claimTokens",
            "source_mapping": {
              "start": 695,
              "length": 318,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "TokenReceivable",
                "source_mapping": {
                  "start": 586,
                  "length": 429,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "claimTokens(address,address)"
            }
          },
          {
            "type": "node",
            "name": "balance = token.balanceOf(this)",
            "source_mapping": {
              "start": 817,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "claimTokens",
                "source_mapping": {
                  "start": 695,
                  "length": 318,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TokenReceivable",
                    "source_mapping": {
                      "start": 586,
                      "length": 429,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "claimTokens(address,address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "token.transfer(_to,balance)",
            "source_mapping": {
              "start": 867,
              "length": 28,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "claimTokens",
                "source_mapping": {
                  "start": 695,
                  "length": 318,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TokenReceivable",
                    "source_mapping": {
                      "start": 586,
                      "length": 429,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "claimTokens(address,address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "logTokenTransfer(_token,_to,balance)",
            "source_mapping": {
              "start": 911,
              "length": 38,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "claimTokens",
                "source_mapping": {
                  "start": 695,
                  "length": 318,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TokenReceivable",
                    "source_mapping": {
                      "start": 586,
                      "length": 429,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "claimTokens(address,address)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          }
        ],
        "description": "Reentrancy in TokenReceivable.claimTokens(address,address) ():\n\tExternal calls:\n\t- balance = token.balanceOf(this) ()\n\t- token.transfer(_to,balance) ()\n\tEvent emitted after the call(s):\n\t- logTokenTransfer(_token,_to,balance) ()\n",
        "markdown": "Reentrancy in [TokenReceivable.claimTokens(address,address)]():\n\tExternal calls:\n\t- [balance = token.balanceOf(this)]()\n\t- [token.transfer(_to,balance)]()\n\tEvent emitted after the call(s):\n\t- [logTokenTransfer(_token,_to,balance)]()\n",
        "first_markdown_element": "",
        "id": "3a7153560dfbb0eccc4c4e88121e59803669aa707393cf5df58ee8a6286036dd",
        "check": "reentrancy-events",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "setStartTime",
            "source_mapping": {
              "start": 2179,
              "length": 183,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "FunFairSale",
                "source_mapping": {
                  "start": 1017,
                  "length": 1348,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "setStartTime(uint256,uint256)"
            }
          },
          {
            "type": "node",
            "name": "block.timestamp >= startTime",
            "source_mapping": {
              "start": 2258,
              "length": 28,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setStartTime",
                "source_mapping": {
                  "start": 2179,
                  "length": 183,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "FunFairSale",
                    "source_mapping": {
                      "start": 1017,
                      "length": 1348,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setStartTime(uint256,uint256)"
                }
              }
            }
          }
        ],
        "description": "FunFairSale.setStartTime(uint256,uint256) () uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp >= startTime ()\n",
        "markdown": "[FunFairSale.setStartTime(uint256,uint256)]() uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [block.timestamp >= startTime]()\n",
        "first_markdown_element": "",
        "id": "2bb8dbedf51f0dc12954377c39efa210eca0d44f620432813e63f6d172253a5f",
        "check": "timestamp",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "shortenDeadline",
            "source_mapping": {
              "start": 1464,
              "length": 179,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "FunFairSale",
                "source_mapping": {
                  "start": 1017,
                  "length": 1348,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "shortenDeadline(uint256)"
            }
          },
          {
            "type": "node",
            "name": "t > deadline",
            "source_mapping": {
              "start": 1595,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "shortenDeadline",
                "source_mapping": {
                  "start": 1464,
                  "length": 179,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "FunFairSale",
                    "source_mapping": {
                      "start": 1017,
                      "length": 1348,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "shortenDeadline(uint256)"
                }
              }
            }
          }
        ],
        "description": "FunFairSale.shortenDeadline(uint256) () uses timestamp for comparisons\n\tDangerous comparisons:\n\t- t > deadline ()\n",
        "markdown": "[FunFairSale.shortenDeadline(uint256)]() uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [t > deadline]()\n",
        "first_markdown_element": "",
        "id": "48752b1d6d86782de42ca6159183c7ab59637cdc0b378c7284bafac364ced807",
        "check": "timestamp",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "fallback",
            "source_mapping": {
              "start": 1649,
              "length": 351,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "FunFairSale",
                "source_mapping": {
                  "start": 1017,
                  "length": 1348,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "fallback()"
            }
          },
          {
            "type": "node",
            "name": "block.timestamp < startTime || block.timestamp >= deadline",
            "source_mapping": {
              "start": 1779,
              "length": 58,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "fallback",
                "source_mapping": {
                  "start": 1649,
                  "length": 351,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "FunFairSale",
                    "source_mapping": {
                      "start": 1017,
                      "length": 1348,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "fallback()"
                }
              }
            }
          }
        ],
        "description": "FunFairSale.fallback() () uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp < startTime || block.timestamp >= deadline ()\n",
        "markdown": "[FunFairSale.fallback()]() uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [block.timestamp < startTime || block.timestamp >= deadline]()\n",
        "first_markdown_element": "",
        "id": "5e892e7e969d675bf4b39d52c5d25821fd3f9475129139f8d96cc3bec9d79034",
        "check": "timestamp",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 325,
              "length": 5,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "onlyOwner",
                "source_mapping": {
                  "start": 269,
                  "length": 79,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Owned",
                    "source_mapping": {
                      "start": 163,
                      "length": 421,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "onlyOwner()"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected THROW ():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "markdown": "Deprecated standard detected [THROW]():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "first_markdown_element": "",
        "id": "f5556cf1c70b64b9e4b1fc32044dd970b5f2c8b9fc21b7971fda01971033f2d5",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "pragma",
            "name": "^0.4.4",
            "source_mapping": {
              "start": 0,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "directive": [
                "solidity",
                "^",
                "0.4",
                ".4"
              ]
            }
          }
        ],
        "description": "Pragma version^0.4.4 () allows old versions\n",
        "markdown": "Pragma version[^0.4.4]() allows old versions\n",
        "first_markdown_element": "",
        "id": "c524dbac81447218cdcc218b1e615718838db5d05e8e9dedd1312462097ce552",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [],
        "description": "solc-0.4.4 is not recommended for deployment\n",
        "markdown": "solc-0.4.4 is not recommended for deployment\n",
        "first_markdown_element": "",
        "id": "d3c9a9a2694f771324145f36235e7a11e1b0352ba5bffd7634afad1f93f9692b",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "withdraw",
            "source_mapping": {
              "start": 2006,
              "length": 91,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "FunFairSale",
                "source_mapping": {
                  "start": 1017,
                  "length": 1348,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "withdraw()"
            }
          },
          {
            "type": "node",
            "name": "! owner.call.value(this.balance)()",
            "source_mapping": {
              "start": 2050,
              "length": 33,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "withdraw",
                "source_mapping": {
                  "start": 2006,
                  "length": 91,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "FunFairSale",
                    "source_mapping": {
                      "start": 1017,
                      "length": 1348,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "withdraw()"
                }
              }
            }
          }
        ],
        "description": "Low level call in FunFairSale.withdraw() ():\n\t- ! owner.call.value(this.balance)() ()\n",
        "markdown": "Low level call in [FunFairSale.withdraw()]():\n\t- [! owner.call.value(this.balance)()]()\n",
        "first_markdown_element": "",
        "id": "37141d1c9bb2de0e5e8f65e8a5e245262eec4b104ca6b222c83f6ffef8aae07e",
        "check": "low-level-calls",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "MAX_GAS_PRICE",
            "source_mapping": {
              "start": 1369,
              "length": 57,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "FunFairSale",
                "source_mapping": {
                  "start": 1017,
                  "length": 1348,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable FunFairSale.MAX_GAS_PRICE () is not in mixedCase\n",
        "markdown": "Variable [FunFairSale.MAX_GAS_PRICE]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "1e6e98b74307a2f1e0b78782daacd258b60811ca66972b4a29c0299cdc174dfd",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_token",
            "source_mapping": {
              "start": 716,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "claimTokens",
                "source_mapping": {
                  "start": 695,
                  "length": 318,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TokenReceivable",
                    "source_mapping": {
                      "start": 586,
                      "length": 429,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "claimTokens(address,address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TokenReceivable.claimTokens(address,address)._token () is not in mixedCase\n",
        "markdown": "Parameter [TokenReceivable.claimTokens(address,address)._token]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "2bb5d4e1d7d7c3c6e67b85a19573a29f074757ad3032627883af75d3998b9318",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_newOwner",
            "source_mapping": {
              "start": 398,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeOwner",
                "source_mapping": {
                  "start": 377,
                  "length": 87,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Owned",
                    "source_mapping": {
                      "start": 163,
                      "length": 421,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeOwner(address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Owned.changeOwner(address)._newOwner () is not in mixedCase\n",
        "markdown": "Parameter [Owned.changeOwner(address)._newOwner]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "2ec463ebf4ef277b64cc2588f1f01306d6732f2a311b67c7492ad02d816c4d77",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_to",
            "source_mapping": {
              "start": 732,
              "length": 11,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "claimTokens",
                "source_mapping": {
                  "start": 695,
                  "length": 318,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TokenReceivable",
                    "source_mapping": {
                      "start": 586,
                      "length": 429,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "claimTokens(address,address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TokenReceivable.claimTokens(address,address)._to () is not in mixedCase\n",
        "markdown": "Parameter [TokenReceivable.claimTokens(address,address)._to]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "7b6f455b56d9574558b96f4c9e6172719492879c8b08d788a2b8e487d8f4340d",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_cap",
            "source_mapping": {
              "start": 2119,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setCap",
                "source_mapping": {
                  "start": 2103,
                  "length": 70,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "FunFairSale",
                    "source_mapping": {
                      "start": 1017,
                      "length": 1348,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setCap(uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter FunFairSale.setCap(uint256)._cap () is not in mixedCase\n",
        "markdown": "Parameter [FunFairSale.setCap(uint256)._cap]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "7cfd79ef1a3528518f1d2a84af575b6c15ebfda883ae34e054550495b11d4418",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_deadline",
            "source_mapping": {
              "start": 2218,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setStartTime",
                "source_mapping": {
                  "start": 2179,
                  "length": 183,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "FunFairSale",
                    "source_mapping": {
                      "start": 1017,
                      "length": 1348,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setStartTime(uint256,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter FunFairSale.setStartTime(uint256,uint256)._deadline () is not in mixedCase\n",
        "markdown": "Parameter [FunFairSale.setStartTime(uint256,uint256)._deadline]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "a3f9caacfd84de6b50fa540213bdb0983771cd2da2128a93ac1eceb2e5cef977",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "logTokenTransfer",
            "source_mapping": {
              "start": 626,
              "length": 63,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "TokenReceivable",
                "source_mapping": {
                  "start": 586,
                  "length": 429,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "logTokenTransfer(address,address,uint256)"
            },
            "additional_fields": {
              "target": "event",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Event TokenReceivable.logTokenTransfer(address,address,uint256) () is not in CapWords\n",
        "markdown": "Event [TokenReceivable.logTokenTransfer(address,address,uint256)]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "e4d67ed36097e93472dc9c3e195c664c6b254913c8b38beb460b5880e95c365a",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_startTime",
            "source_mapping": {
              "start": 2201,
              "length": 15,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setStartTime",
                "source_mapping": {
                  "start": 2179,
                  "length": 183,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "FunFairSale",
                    "source_mapping": {
                      "start": 1017,
                      "length": 1348,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setStartTime(uint256,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter FunFairSale.setStartTime(uint256,uint256)._startTime () is not in mixedCase\n",
        "markdown": "Parameter [FunFairSale.setStartTime(uint256,uint256)._startTime]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "e971ace17c4f88e5d02812ee2d43e62bf7593fad52489045fc374cae9a735778",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "slitherConstructorVariables",
            "source_mapping": {
              "start": 1017,
              "length": 1348,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "FunFairSale",
                "source_mapping": {
                  "start": 1017,
                  "length": 1348,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "slitherConstructorVariables()"
            }
          },
          {
            "type": "node",
            "name": "capAmount = 125000000000000000000000000",
            "source_mapping": {
              "start": 1209,
              "length": 39,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "slitherConstructorVariables",
                "source_mapping": {
                  "start": 1017,
                  "length": 1348,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "FunFairSale",
                    "source_mapping": {
                      "start": 1017,
                      "length": 1348,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "slitherConstructorVariables()"
                }
              }
            }
          }
        ],
        "description": "FunFairSale.slitherConstructorVariables() () uses literals with too many digits:\n\t- capAmount = 125000000000000000000000000 ()\n",
        "markdown": "[FunFairSale.slitherConstructorVariables()]() uses literals with too many digits:\n\t- [capAmount = 125000000000000000000000000]()\n",
        "first_markdown_element": "",
        "id": "90a3e18e4406542289e179507f714d18aee39d0135ec3628a66f09cc06c28b56",
        "check": "too-many-digits",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "MAX_GAS_PRICE",
            "source_mapping": {
              "start": 1369,
              "length": 57,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "FunFairSale",
                "source_mapping": {
                  "start": 1017,
                  "length": 1348,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "FunFairSale.MAX_GAS_PRICE () should be constant \n",
        "markdown": "[FunFairSale.MAX_GAS_PRICE]() should be constant \n",
        "first_markdown_element": "",
        "id": "0d3889dcf4313141cb3a236e3fc0b3ee9716d6d66b2abab7d3e9f8296d5ac666",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      }
    ]
  }
}