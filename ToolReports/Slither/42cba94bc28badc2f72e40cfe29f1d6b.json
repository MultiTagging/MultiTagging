{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "variable",
            "name": "_newOwner",
            "source_mapping": {
              "start": 3086,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "replaceOwner",
                "source_mapping": {
                  "start": 3064,
                  "length": 144,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TestToken",
                    "source_mapping": {
                      "start": 145,
                      "length": 3168,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "replaceOwner(address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "owner = _newOwner",
            "source_mapping": {
              "start": 3144,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "replaceOwner",
                "source_mapping": {
                  "start": 3064,
                  "length": 144,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TestToken",
                    "source_mapping": {
                      "start": 145,
                      "length": 3168,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "replaceOwner(address)"
                }
              }
            }
          }
        ],
        "description": "TestToken.replaceOwner(address)._newOwner () lacks a zero-check on :\n\t\t- owner = _newOwner ()\n",
        "markdown": "[TestToken.replaceOwner(address)._newOwner]() lacks a zero-check on :\n\t\t- [owner = _newOwner]()\n",
        "first_markdown_element": "",
        "id": "9e8184f4885f0d973c341d21147c24e03d54745b2e728b613f282cbc12c9ac49",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "checkIfToContract",
            "source_mapping": {
              "start": 584,
              "length": 92,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "TestToken",
                "source_mapping": {
                  "start": 145,
                  "length": 3168,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "checkIfToContract(address)"
            }
          }
        ],
        "description": "Modifier TestToken.checkIfToContract(address) () does not always execute _; or revert",
        "markdown": "Modifier [TestToken.checkIfToContract(address)]() does not always execute _; or revert",
        "first_markdown_element": "",
        "id": "540c46744d6993279ce6e02a78af7695387b147a4e0070949a7d2c503cf0c54e",
        "check": "incorrect-modifier",
        "impact": "Low",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "blockLock",
            "source_mapping": {
              "start": 481,
              "length": 99,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "TestToken",
                "source_mapping": {
                  "start": 145,
                  "length": 3168,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "blockLock(address)"
            }
          }
        ],
        "description": "Modifier TestToken.blockLock(address) () does not always execute _; or revert",
        "markdown": "Modifier [TestToken.blockLock(address)]() does not always execute _; or revert",
        "first_markdown_element": "",
        "id": "e35ab7837556a920f2c0f50609fdcf352eb073d3538a8c477e7489cd7b1304bc",
        "check": "incorrect-modifier",
        "impact": "Low",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "onlyOwner",
            "source_mapping": {
              "start": 407,
              "length": 70,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "TestToken",
                "source_mapping": {
                  "start": 145,
                  "length": 3168,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "onlyOwner()"
            }
          }
        ],
        "description": "Modifier TestToken.onlyOwner() () does not always execute _; or revert",
        "markdown": "Modifier [TestToken.onlyOwner()]() does not always execute _; or revert",
        "first_markdown_element": "",
        "id": "ec9b05e7e2dda26bc7e50669489c0cc37e0cdb73bba77aa7ac9c563ecf4e6818",
        "check": "incorrect-modifier",
        "impact": "Low",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "pragma",
            "name": "^0.4.2",
            "source_mapping": {
              "start": 0,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "directive": [
                "solidity",
                "^",
                "0.4",
                ".2"
              ]
            }
          }
        ],
        "description": "Pragma version^0.4.2 () allows old versions\n",
        "markdown": "Pragma version[^0.4.2]() allows old versions\n",
        "first_markdown_element": "",
        "id": "684a56cd27e54ff2efdccacdc31c1f9807e03d1014a0a136c00240d60a2f3a67",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [],
        "description": "solc-0.4.2 is not recommended for deployment\n",
        "markdown": "solc-0.4.2 is not recommended for deployment\n",
        "first_markdown_element": "",
        "id": "707dbfcfdf84b6816d84949bbe947a3701cd8aa49952e3db1879e122f1f0990d",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_to",
            "source_mapping": {
              "start": 1945,
              "length": 11,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "transferFrom",
                "source_mapping": {
                  "start": 1908,
                  "length": 427,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TestToken",
                    "source_mapping": {
                      "start": 145,
                      "length": 3168,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "transferFrom(address,address,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TestToken.transferFrom(address,address,uint256)._to () is not in mixedCase\n",
        "markdown": "Parameter [TestToken.transferFrom(address,address,uint256)._to]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "024686fbd260b8ee28e1cc0780032bada4a110adb6a5096d2b31581bb198998e",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_owner",
            "source_mapping": {
              "start": 2358,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "balanceOf",
                "source_mapping": {
                  "start": 2339,
                  "length": 104,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TestToken",
                    "source_mapping": {
                      "start": 145,
                      "length": 3168,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "balanceOf(address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TestToken.balanceOf(address)._owner () is not in mixedCase\n",
        "markdown": "Parameter [TestToken.balanceOf(address)._owner]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "1a7ae205aa08f4674504d2290cef2acda0614e0872e6ee684e37814fa8b90408",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_value",
            "source_mapping": {
              "start": 1958,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "transferFrom",
                "source_mapping": {
                  "start": 1908,
                  "length": 427,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TestToken",
                    "source_mapping": {
                      "start": 145,
                      "length": 3168,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "transferFrom(address,address,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TestToken.transferFrom(address,address,uint256)._value () is not in mixedCase\n",
        "markdown": "Parameter [TestToken.transferFrom(address,address,uint256)._value]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "21cf1edaa0facd1d09bea39128a1f8b7e39dbe994cc73d4decede7a3ae1b159e",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "tokenRecipient",
            "source_mapping": {
              "start": 25,
              "length": 118,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "additional_fields": {
              "target": "contract",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Contract tokenRecipient () is not in CapWords\n",
        "markdown": "Contract [tokenRecipient]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "2b490d093e8774391ae7b7880a9192319b34e7b392e95de10bb460182ae054a0",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_spender",
            "source_mapping": {
              "start": 1290,
              "length": 16,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "approveAndCall",
                "source_mapping": {
                  "start": 1266,
                  "length": 290,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TestToken",
                    "source_mapping": {
                      "start": 145,
                      "length": 3168,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "approveAndCall(address,uint256,bytes)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TestToken.approveAndCall(address,uint256,bytes)._spender () is not in mixedCase\n",
        "markdown": "Parameter [TestToken.approveAndCall(address,uint256,bytes)._spender]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "60d46e09d6d58bfee2733d0a9449a59f210c34dcfad95480225a7bad2f6704a8",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_spender",
            "source_mapping": {
              "start": 2464,
              "length": 16,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "approve",
                "source_mapping": {
                  "start": 2447,
                  "length": 184,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TestToken",
                    "source_mapping": {
                      "start": 145,
                      "length": 3168,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "approve(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TestToken.approve(address,uint256)._spender () is not in mixedCase\n",
        "markdown": "Parameter [TestToken.approve(address,uint256)._spender]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "67072866645422e44e6250cb81549123d9bcbe88f69f6c29b555e5e55c19453c",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_owner",
            "source_mapping": {
              "start": 2654,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "allowance",
                "source_mapping": {
                  "start": 2635,
                  "length": 133,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TestToken",
                    "source_mapping": {
                      "start": 145,
                      "length": 3168,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "allowance(address,address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TestToken.allowance(address,address)._owner () is not in mixedCase\n",
        "markdown": "Parameter [TestToken.allowance(address,address)._owner]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "7d0e844b043f626f5f9dd0e15f9cef37602b9c7ff7b71fcd1c61a83f5f33822f",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_spender",
            "source_mapping": {
              "start": 2670,
              "length": 16,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "allowance",
                "source_mapping": {
                  "start": 2635,
                  "length": 133,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TestToken",
                    "source_mapping": {
                      "start": 145,
                      "length": 3168,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "allowance(address,address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TestToken.allowance(address,address)._spender () is not in mixedCase\n",
        "markdown": "Parameter [TestToken.allowance(address,address)._spender]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "8189669b98a5c5333fa98ac25d61548ef93891f6efc3131776d1f99a8e74c736",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_value",
            "source_mapping": {
              "start": 1591,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "transfer",
                "source_mapping": {
                  "start": 1560,
                  "length": 344,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TestToken",
                    "source_mapping": {
                      "start": 145,
                      "length": 3168,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "transfer(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TestToken.transfer(address,uint256)._value () is not in mixedCase\n",
        "markdown": "Parameter [TestToken.transfer(address,uint256)._value]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "8ea7e5ed0602209d20cc770b1bb4cbc9c55b3e065529b64274967da817d8b6a1",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_value",
            "source_mapping": {
              "start": 1308,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "approveAndCall",
                "source_mapping": {
                  "start": 1266,
                  "length": 290,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TestToken",
                    "source_mapping": {
                      "start": 145,
                      "length": 3168,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "approveAndCall(address,uint256,bytes)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TestToken.approveAndCall(address,uint256,bytes)._value () is not in mixedCase\n",
        "markdown": "Parameter [TestToken.approveAndCall(address,uint256,bytes)._value]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "92278954f073ff08c68b86777ed3aa242ebebc382b6b210da27e666008858f03",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_newOwner",
            "source_mapping": {
              "start": 3086,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "replaceOwner",
                "source_mapping": {
                  "start": 3064,
                  "length": 144,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TestToken",
                    "source_mapping": {
                      "start": 145,
                      "length": 3168,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "replaceOwner(address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TestToken.replaceOwner(address)._newOwner () is not in mixedCase\n",
        "markdown": "Parameter [TestToken.replaceOwner(address)._newOwner]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "aab495718c58cf76cb24fc7cb84dd3b626c52bbc5ff5b45394ae49f40584d9c5",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_to",
            "source_mapping": {
              "start": 1578,
              "length": 11,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "transfer",
                "source_mapping": {
                  "start": 1560,
                  "length": 344,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TestToken",
                    "source_mapping": {
                      "start": 145,
                      "length": 3168,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "transfer(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TestToken.transfer(address,uint256)._to () is not in mixedCase\n",
        "markdown": "Parameter [TestToken.transfer(address,uint256)._to]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "adae2214b30657664d6aa44fad925c80f11be840e9aaea2a34d788261062f580",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_value",
            "source_mapping": {
              "start": 2482,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "approve",
                "source_mapping": {
                  "start": 2447,
                  "length": 184,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TestToken",
                    "source_mapping": {
                      "start": 145,
                      "length": 3168,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "approve(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TestToken.approve(address,uint256)._value () is not in mixedCase\n",
        "markdown": "Parameter [TestToken.approve(address,uint256)._value]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "ce1fa340aadefd98e26406512b5a6f1f61055f69b8b79af3e60d53009b693e9c",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_extraData",
            "source_mapping": {
              "start": 1324,
              "length": 16,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "approveAndCall",
                "source_mapping": {
                  "start": 1266,
                  "length": 290,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TestToken",
                    "source_mapping": {
                      "start": 145,
                      "length": 3168,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "approveAndCall(address,uint256,bytes)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TestToken.approveAndCall(address,uint256,bytes)._extraData () is not in mixedCase\n",
        "markdown": "Parameter [TestToken.approveAndCall(address,uint256,bytes)._extraData]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "d6a317b62fa00130f5e740ca07ebb03594646b484811037176e44a4f3fb959b2",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_lockedUntilBlock",
            "source_mapping": {
              "start": 2794,
              "length": 25,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setBlockLock",
                "source_mapping": {
                  "start": 2772,
                  "length": 183,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TestToken",
                    "source_mapping": {
                      "start": 145,
                      "length": 3168,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setBlockLock(uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TestToken.setBlockLock(uint256)._lockedUntilBlock () is not in mixedCase\n",
        "markdown": "Parameter [TestToken.setBlockLock(uint256)._lockedUntilBlock]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "d878b3aa62e884255fab1e74ec21f3de78a0fe25ad88f03ac91b799fcc72ae6c",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_from",
            "source_mapping": {
              "start": 1930,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "transferFrom",
                "source_mapping": {
                  "start": 1908,
                  "length": 427,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "TestToken",
                    "source_mapping": {
                      "start": 145,
                      "length": 3168,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "transferFrom(address,address,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter TestToken.transferFrom(address,address,uint256)._from () is not in mixedCase\n",
        "markdown": "Parameter [TestToken.transferFrom(address,address,uint256)._from]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "f68a275cf775c566655ff864cd96b6a2cb72965ef31f602731c27938c8ec9edf",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "version",
            "source_mapping": {
              "start": 781,
              "length": 31,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "TestToken",
                "source_mapping": {
                  "start": 145,
                  "length": 3168,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "TestToken",
            "source_mapping": {
              "start": 145,
              "length": 3168,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "TestToken.version () is never used in TestToken ()\n",
        "markdown": "[TestToken.version]() is never used in [TestToken]()\n",
        "first_markdown_element": "",
        "id": "09b957f9f6fe31a126bca0556e6a8f2fa1fd163d905f74fbef6e3412cfb3ed5e",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "version",
            "source_mapping": {
              "start": 781,
              "length": 31,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "TestToken",
                "source_mapping": {
                  "start": 145,
                  "length": 3168,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "TestToken.version () should be constant \n",
        "markdown": "[TestToken.version]() should be constant \n",
        "first_markdown_element": "",
        "id": "ada1c52bf3a3517cbc3a923758a861dfcec6e5f0f471f71dd8338cbd0814cc11",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "approveAndCall",
            "source_mapping": {
              "start": 1266,
              "length": 290,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "TestToken",
                "source_mapping": {
                  "start": 145,
                  "length": 3168,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "approveAndCall(address,uint256,bytes)"
            }
          }
        ],
        "description": "approveAndCall(address,uint256,bytes) should be declared external:\n\t- TestToken.approveAndCall(address,uint256,bytes) ()\n",
        "markdown": "approveAndCall(address,uint256,bytes) should be declared external:\n\t- [TestToken.approveAndCall(address,uint256,bytes)]()\n",
        "first_markdown_element": "",
        "id": "4a51828a49b6bcb6eca59c233e80454ca5beee3ef6f95c19a92a3302a416d963",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "receiveApproval",
            "source_mapping": {
              "start": 51,
              "length": 90,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "tokenRecipient",
                "source_mapping": {
                  "start": 25,
                  "length": 118,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "receiveApproval(address,uint256,address,bytes)"
            }
          }
        ],
        "description": "receiveApproval(address,uint256,address,bytes) should be declared external:\n\t- tokenRecipient.receiveApproval(address,uint256,address,bytes) ()\n",
        "markdown": "receiveApproval(address,uint256,address,bytes) should be declared external:\n\t- [tokenRecipient.receiveApproval(address,uint256,address,bytes)]()\n",
        "first_markdown_element": "",
        "id": "5bf8032db6d08275d0001914f4bdb19064612f8be1a79083db009c885f9d9f3e",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      }
    ]
  }
}