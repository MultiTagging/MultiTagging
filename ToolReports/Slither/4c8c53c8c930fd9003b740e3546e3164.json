{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "function",
            "name": "unregister",
            "source_mapping": {
              "start": 1685,
              "length": 189,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "BadgeReg",
                "source_mapping": {
                  "start": 415,
                  "length": 2879,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "unregister(uint256)"
            }
          },
          {
            "type": "struct",
            "name": "Badge",
            "source_mapping": {
              "start": 445,
              "length": 103,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "BadgeReg",
                "source_mapping": {
                  "start": 415,
                  "length": 2879,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "node",
            "name": "delete badges[_id]",
            "source_mapping": {
              "start": 1852,
              "length": 18,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "unregister",
                "source_mapping": {
                  "start": 1685,
                  "length": 189,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "BadgeReg",
                    "source_mapping": {
                      "start": 415,
                      "length": 2879,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "unregister(uint256)"
                }
              }
            }
          }
        ],
        "description": "BadgeReg.unregister(uint256) () deletes BadgeReg.Badge () which contains a mapping:\n\t-delete badges[_id] ()\n",
        "markdown": "[BadgeReg.unregister(uint256)]() deletes [BadgeReg.Badge]() which contains a mapping:\n\t-[delete badges[_id]]()\n",
        "first_markdown_element": "",
        "id": "40f04ce1b47b83737e9c9d901e02c0cfe88334566083dd6eab0362690c0b2aa9",
        "check": "mapping-deletion",
        "impact": "Medium",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "owner",
            "source_mapping": {
              "start": 2444,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "fromName",
                "source_mapping": {
                  "start": 2370,
                  "length": 182,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "BadgeReg",
                    "source_mapping": {
                      "start": 415,
                      "length": 2879,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "fromName(bytes32)"
                }
              }
            }
          },
          {
            "type": "variable",
            "name": "owner",
            "source_mapping": {
              "start": 377,
              "length": 33,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Owned",
                "source_mapping": {
                  "start": 147,
                  "length": 266,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "BadgeReg.fromName(bytes32).owner () shadows:\n\t- Owned.owner () (state variable)\n",
        "markdown": "[BadgeReg.fromName(bytes32).owner]() shadows:\n\t- [Owned.owner]() (state variable)\n",
        "first_markdown_element": "",
        "id": "1f47e069503c54e295c6f83bf989384550401d61d23f9a6aeb8939a44b2baa33",
        "check": "shadowing-local",
        "impact": "Low",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "owner",
            "source_mapping": {
              "start": 2081,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "badge",
                "source_mapping": {
                  "start": 2010,
                  "length": 166,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "BadgeReg",
                    "source_mapping": {
                      "start": 415,
                      "length": 2879,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "badge(uint256)"
                }
              }
            }
          },
          {
            "type": "variable",
            "name": "owner",
            "source_mapping": {
              "start": 377,
              "length": 33,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Owned",
                "source_mapping": {
                  "start": 147,
                  "length": 266,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "BadgeReg.badge(uint256).owner () shadows:\n\t- Owned.owner () (state variable)\n",
        "markdown": "[BadgeReg.badge(uint256).owner]() shadows:\n\t- [Owned.owner]() (state variable)\n",
        "first_markdown_element": "",
        "id": "4bb2ed1c3fc37984731f1fbc5c0175d028875826cafe5670ed7cf69c9b17833a",
        "check": "shadowing-local",
        "impact": "Low",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "owner",
            "source_mapping": {
              "start": 2256,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "fromAddress",
                "source_mapping": {
                  "start": 2179,
                  "length": 188,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "BadgeReg",
                    "source_mapping": {
                      "start": 415,
                      "length": 2879,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "fromAddress(address)"
                }
              }
            }
          },
          {
            "type": "variable",
            "name": "owner",
            "source_mapping": {
              "start": 377,
              "length": 33,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Owned",
                "source_mapping": {
                  "start": 147,
                  "length": 266,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "BadgeReg.fromAddress(address).owner () shadows:\n\t- Owned.owner () (state variable)\n",
        "markdown": "[BadgeReg.fromAddress(address).owner]() shadows:\n\t- [Owned.owner]() (state variable)\n",
        "first_markdown_element": "",
        "id": "bb50c997c9c8c6cd5b04a84ec3e7a94e496e58f3e477d18e69c3dcaf8c46d5b7",
        "check": "shadowing-local",
        "impact": "Low",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_new",
            "source_mapping": {
              "start": 309,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setOwner",
                "source_mapping": {
                  "start": 291,
                  "length": 83,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Owned",
                    "source_mapping": {
                      "start": 147,
                      "length": 266,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setOwner(address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "owner = _new",
            "source_mapping": {
              "start": 359,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setOwner",
                "source_mapping": {
                  "start": 291,
                  "length": 83,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Owned",
                    "source_mapping": {
                      "start": 147,
                      "length": 266,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setOwner(address)"
                }
              }
            }
          }
        ],
        "description": "Owned.setOwner(address)._new () lacks a zero-check on :\n\t\t- owner = _new ()\n",
        "markdown": "[Owned.setOwner(address)._new]() lacks a zero-check on :\n\t\t- [owner = _new]()\n",
        "first_markdown_element": "",
        "id": "cf95da28c3bea50f8dac751abbc1461fd46ac18f52ab78645a88e776f2c625ed",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 3154,
              "length": 5,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "drain",
                "source_mapping": {
                  "start": 3083,
                  "length": 80,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "BadgeReg",
                    "source_mapping": {
                      "start": 415,
                      "length": 2879,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "drain()"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected THROW ():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "markdown": "Deprecated standard detected [THROW]():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "first_markdown_element": "",
        "id": "f5556cf1c70b64b9e4b1fc32044dd970b5f2c8b9fc21b7971fda01971033f2d5",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [],
        "description": "solc-0.4.0 is not recommended for deployment\n",
        "markdown": "solc-0.4.0 is not recommended for deployment\n",
        "first_markdown_element": "",
        "id": "e676d9e89e623fa7675baecce41eb7ab21d1d8ec9e856bc5b047e6cfb50b37ca",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "pragma",
            "name": "^0.4.0",
            "source_mapping": {
              "start": 104,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "directive": [
                "solidity",
                "^",
                "0.4",
                ".0"
              ]
            }
          }
        ],
        "description": "Pragma version^0.4.0 () allows old versions\n",
        "markdown": "Pragma version[^0.4.0]() allows old versions\n",
        "first_markdown_element": "",
        "id": "f4d0f96f990510a571c7ae954763f848d217d6f86fa5953d251f28f5221969e2",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_addr",
            "source_mapping": {
              "start": 2200,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "fromAddress",
                "source_mapping": {
                  "start": 2179,
                  "length": 188,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "BadgeReg",
                    "source_mapping": {
                      "start": 415,
                      "length": 2879,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "fromAddress(address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter BadgeReg.fromAddress(address)._addr () is not in mixedCase\n",
        "markdown": "Parameter [BadgeReg.fromAddress(address)._addr]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "1236290cf9a3dd1dee9727e0a63f857e23ad24d5bd6ade6d2f680e9a0ce708d1",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_fee",
            "source_mapping": {
              "start": 1893,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setFee",
                "source_mapping": {
                  "start": 1877,
                  "length": 56,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "BadgeReg",
                    "source_mapping": {
                      "start": 415,
                      "length": 2879,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setFee(uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter BadgeReg.setFee(uint256)._fee () is not in mixedCase\n",
        "markdown": "Parameter [BadgeReg.setFee(uint256)._fee]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "1f825c70e1890549f68d9825df9543a1f1bbdc54ade7ef469688caf2f11771f1",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_name",
            "source_mapping": {
              "start": 1378,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "registerAs",
                "source_mapping": {
                  "start": 1343,
                  "length": 339,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "BadgeReg",
                    "source_mapping": {
                      "start": 415,
                      "length": 2879,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "registerAs(address,bytes32,address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter BadgeReg.registerAs(address,bytes32,address)._name () is not in mixedCase\n",
        "markdown": "Parameter [BadgeReg.registerAs(address,bytes32,address)._name]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "241876898f1324ddd449283b575efe308594fa013b83dabc7d28aa5d9795a970",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_addr",
            "source_mapping": {
              "start": 1236,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "register",
                "source_mapping": {
                  "start": 1218,
                  "length": 122,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "BadgeReg",
                    "source_mapping": {
                      "start": 415,
                      "length": 2879,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "register(address,bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter BadgeReg.register(address,bytes32)._addr () is not in mixedCase\n",
        "markdown": "Parameter [BadgeReg.register(address,bytes32)._addr]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "31532b36f641db828b97f04b248f22256dd50e2eeea608e7306c4dbe304813b1",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "when_has_name",
            "source_mapping": {
              "start": 785,
              "length": 81,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "BadgeReg",
                "source_mapping": {
                  "start": 415,
                  "length": 2879,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "when_has_name(bytes32)"
            },
            "additional_fields": {
              "target": "modifier",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Modifier BadgeReg.when_has_name(bytes32) () is not in mixedCase\n",
        "markdown": "Modifier [BadgeReg.when_has_name(bytes32)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "32d404cbce6a085ba225b7e58f0e1e5a6d4a88a42ed5635005b249cd3dae7ea1",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "only_badge_owner",
            "source_mapping": {
              "start": 868,
              "length": 87,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "BadgeReg",
                "source_mapping": {
                  "start": 415,
                  "length": 2879,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "only_badge_owner(uint256)"
            },
            "additional_fields": {
              "target": "modifier",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Modifier BadgeReg.only_badge_owner(uint256) () is not in mixedCase\n",
        "markdown": "Modifier [BadgeReg.only_badge_owner(uint256)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "35c8fe55d7c337ec3b834f3345d7e07df4360b19bfd5581f9c8ba6ff094376b3",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_id",
            "source_mapping": {
              "start": 2025,
              "length": 8,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "badge",
                "source_mapping": {
                  "start": 2010,
                  "length": 166,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "BadgeReg",
                    "source_mapping": {
                      "start": 415,
                      "length": 2879,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "badge(uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter BadgeReg.badge(uint256)._id () is not in mixedCase\n",
        "markdown": "Parameter [BadgeReg.badge(uint256)._id]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "3b3da9b56d232be88a766698dfc8a3f517ab389e9fbaf2074bb81d99c0319dca",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_key",
            "source_mapping": {
              "start": 2955,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setMeta",
                "source_mapping": {
                  "start": 2928,
                  "length": 152,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "BadgeReg",
                    "source_mapping": {
                      "start": 415,
                      "length": 2879,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setMeta(uint256,bytes32,bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter BadgeReg.setMeta(uint256,bytes32,bytes32)._key () is not in mixedCase\n",
        "markdown": "Parameter [BadgeReg.setMeta(uint256,bytes32,bytes32)._key]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "3cceba09ecc81325d9da2907be7c053c72ca10b0cfcb4941acf1f12a21c83760",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_addr",
            "source_mapping": {
              "start": 1363,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "registerAs",
                "source_mapping": {
                  "start": 1343,
                  "length": 339,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "BadgeReg",
                    "source_mapping": {
                      "start": 415,
                      "length": 2879,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "registerAs(address,bytes32,address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter BadgeReg.registerAs(address,bytes32,address)._addr () is not in mixedCase\n",
        "markdown": "Parameter [BadgeReg.registerAs(address,bytes32,address)._addr]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "4a799f9b3e5270a6ea294b161c5d09a740ff3d86a289665891ab085b85469bb4",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_key",
            "source_mapping": {
              "start": 2579,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "meta",
                "source_mapping": {
                  "start": 2555,
                  "length": 102,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "BadgeReg",
                    "source_mapping": {
                      "start": 415,
                      "length": 2879,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "meta(uint256,bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter BadgeReg.meta(uint256,bytes32)._key () is not in mixedCase\n",
        "markdown": "Parameter [BadgeReg.meta(uint256,bytes32)._key]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "5fbb5479234c835c6d784743ccb80400639f5389ab8f8b779e858dc2facca1d9",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_id",
            "source_mapping": {
              "start": 2680,
              "length": 8,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setAddress",
                "source_mapping": {
                  "start": 2660,
                  "length": 265,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "BadgeReg",
                    "source_mapping": {
                      "start": 415,
                      "length": 2879,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setAddress(uint256,address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter BadgeReg.setAddress(uint256,address)._id () is not in mixedCase\n",
        "markdown": "Parameter [BadgeReg.setAddress(uint256,address)._id]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "6a55c482157e05f2e0245b4edd73ae550b627f57ab26e9c005719a5b7afa8306",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "when_fee_paid",
            "source_mapping": {
              "start": 551,
              "length": 58,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "BadgeReg",
                "source_mapping": {
                  "start": 415,
                  "length": 2879,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "when_fee_paid()"
            },
            "additional_fields": {
              "target": "modifier",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Modifier BadgeReg.when_fee_paid() () is not in mixedCase\n",
        "markdown": "Modifier [BadgeReg.when_fee_paid()]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "7a341305ff68e6336ad50a96880ad6e488ef82f0f2af0e8f8872cd08f9596176",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_newAddr",
            "source_mapping": {
              "start": 2690,
              "length": 16,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setAddress",
                "source_mapping": {
                  "start": 2660,
                  "length": 265,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "BadgeReg",
                    "source_mapping": {
                      "start": 415,
                      "length": 2879,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setAddress(uint256,address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter BadgeReg.setAddress(uint256,address)._newAddr () is not in mixedCase\n",
        "markdown": "Parameter [BadgeReg.setAddress(uint256,address)._newAddr]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "7e14bbc8f34d9559b63ba6b1bd9a824d59f169a4874d98556949d5b1f4d0a9b3",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_value",
            "source_mapping": {
              "start": 2969,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setMeta",
                "source_mapping": {
                  "start": 2928,
                  "length": 152,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "BadgeReg",
                    "source_mapping": {
                      "start": 415,
                      "length": 2879,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setMeta(uint256,bytes32,bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter BadgeReg.setMeta(uint256,bytes32,bytes32)._value () is not in mixedCase\n",
        "markdown": "Parameter [BadgeReg.setMeta(uint256,bytes32,bytes32)._value]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "9340fad8311b3992e0632b73c2292e5a3467d8c0659c3082e5eedf316cadfc2b",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_owner",
            "source_mapping": {
              "start": 1393,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "registerAs",
                "source_mapping": {
                  "start": 1343,
                  "length": 339,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "BadgeReg",
                    "source_mapping": {
                      "start": 415,
                      "length": 2879,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "registerAs(address,bytes32,address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter BadgeReg.registerAs(address,bytes32,address)._owner () is not in mixedCase\n",
        "markdown": "Parameter [BadgeReg.registerAs(address,bytes32,address)._owner]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "9bf0a8d9866133e5c5565bd81adf021f66352083e59189bf82c9c7642d508904",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "when_name_free",
            "source_mapping": {
              "start": 701,
              "length": 82,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "BadgeReg",
                "source_mapping": {
                  "start": 415,
                  "length": 2879,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "when_name_free(bytes32)"
            },
            "additional_fields": {
              "target": "modifier",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Modifier BadgeReg.when_name_free(bytes32) () is not in mixedCase\n",
        "markdown": "Modifier [BadgeReg.when_name_free(bytes32)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "a44e624269072c48991d92cbc3aa43e27a7bf61843099d84d367512f1cebaf5e",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "only_owner",
            "source_mapping": {
              "start": 165,
              "length": 59,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Owned",
                "source_mapping": {
                  "start": 147,
                  "length": 266,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "only_owner()"
            },
            "additional_fields": {
              "target": "modifier",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Modifier Owned.only_owner() () is not in mixedCase\n",
        "markdown": "Modifier [Owned.only_owner()]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "b45e9850ac7d459bf4575483f5d6bf02d14756b0b49740b0d01ed29a66a4cbc5",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_id",
            "source_mapping": {
              "start": 1705,
              "length": 8,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "unregister",
                "source_mapping": {
                  "start": 1685,
                  "length": 189,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "BadgeReg",
                    "source_mapping": {
                      "start": 415,
                      "length": 2879,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "unregister(uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter BadgeReg.unregister(uint256)._id () is not in mixedCase\n",
        "markdown": "Parameter [BadgeReg.unregister(uint256)._id]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "c6f557742a29eb64e4134fa4522f9d8fc99dc70b2ce57b734fc0387f1bbfed08",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "when_address_free",
            "source_mapping": {
              "start": 611,
              "length": 88,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "BadgeReg",
                "source_mapping": {
                  "start": 415,
                  "length": 2879,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "when_address_free(address)"
            },
            "additional_fields": {
              "target": "modifier",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Modifier BadgeReg.when_address_free(address) () is not in mixedCase\n",
        "markdown": "Modifier [BadgeReg.when_address_free(address)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "c8d03db31cd599698d1469c5459516aa3f91fc42628ad52a0a2bdfa6f96e7c9b",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_id",
            "source_mapping": {
              "start": 2569,
              "length": 8,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "meta",
                "source_mapping": {
                  "start": 2555,
                  "length": 102,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "BadgeReg",
                    "source_mapping": {
                      "start": 415,
                      "length": 2879,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "meta(uint256,bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter BadgeReg.meta(uint256,bytes32)._id () is not in mixedCase\n",
        "markdown": "Parameter [BadgeReg.meta(uint256,bytes32)._id]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "cedc3ba7be0d95837d52232ee8254cbb3d39e155e0043f6e69737b22ce90b04c",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_new",
            "source_mapping": {
              "start": 309,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setOwner",
                "source_mapping": {
                  "start": 291,
                  "length": 83,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Owned",
                    "source_mapping": {
                      "start": 147,
                      "length": 266,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setOwner(address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Owned.setOwner(address)._new () is not in mixedCase\n",
        "markdown": "Parameter [Owned.setOwner(address)._new]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "e3cd03fa892217e60abc7010df2e8b6777afbed11022c482c27ca453386423a3",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_id",
            "source_mapping": {
              "start": 2945,
              "length": 8,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setMeta",
                "source_mapping": {
                  "start": 2928,
                  "length": 152,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "BadgeReg",
                    "source_mapping": {
                      "start": 415,
                      "length": 2879,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setMeta(uint256,bytes32,bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter BadgeReg.setMeta(uint256,bytes32,bytes32)._id () is not in mixedCase\n",
        "markdown": "Parameter [BadgeReg.setMeta(uint256,bytes32,bytes32)._id]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "e932e61c2598705b5e4267ba4ad8c3d0cde7c007fb8887b5e40bbeb9e9c0fe07",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_name",
            "source_mapping": {
              "start": 1251,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "register",
                "source_mapping": {
                  "start": 1218,
                  "length": 122,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "BadgeReg",
                    "source_mapping": {
                      "start": 415,
                      "length": 2879,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "register(address,bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter BadgeReg.register(address,bytes32)._name () is not in mixedCase\n",
        "markdown": "Parameter [BadgeReg.register(address,bytes32)._name]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "ee6a31992a52b96047b49212d972d2c04122e2eac47761b94fe173b06eca05d9",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_name",
            "source_mapping": {
              "start": 2388,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "fromName",
                "source_mapping": {
                  "start": 2370,
                  "length": 182,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "BadgeReg",
                    "source_mapping": {
                      "start": 415,
                      "length": 2879,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "fromName(bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter BadgeReg.fromName(bytes32)._name () is not in mixedCase\n",
        "markdown": "Parameter [BadgeReg.fromName(bytes32)._name]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "fe588fbf198e725d4d6ec7e0c9e4caaa13531984ca8b00d80c13cbaafd6a87e7",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      }
    ]
  }
}