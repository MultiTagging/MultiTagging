{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "function",
            "name": "unregister",
            "source_mapping": {
              "start": 2004,
              "length": 97,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "DappReg",
                "source_mapping": {
                  "start": 411,
                  "length": 2366,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "unregister(bytes32)"
            }
          },
          {
            "type": "struct",
            "name": "Dapp",
            "source_mapping": {
              "start": 623,
              "length": 84,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "DappReg",
                "source_mapping": {
                  "start": 411,
                  "length": 2366,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "node",
            "name": "delete dapps[_id]",
            "source_mapping": {
              "start": 2059,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "unregister",
                "source_mapping": {
                  "start": 2004,
                  "length": 97,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DappReg",
                    "source_mapping": {
                      "start": 411,
                      "length": 2366,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "unregister(bytes32)"
                }
              }
            }
          }
        ],
        "description": "DappReg.unregister(bytes32) () deletes DappReg.Dapp () which contains a mapping:\n\t-delete dapps[_id] ()\n",
        "markdown": "[DappReg.unregister(bytes32)]() deletes [DappReg.Dapp]() which contains a mapping:\n\t-[delete dapps[_id]]()\n",
        "first_markdown_element": "",
        "id": "03df8ffb51c161218814ddfbd204ea547e21abdfbe67e755d057e91572e15103",
        "check": "mapping-deletion",
        "impact": "Medium",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "owner",
            "source_mapping": {
              "start": 1581,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "at",
                "source_mapping": {
                  "start": 1526,
                  "length": 137,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DappReg",
                    "source_mapping": {
                      "start": 411,
                      "length": 2366,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "at(uint256)"
                }
              }
            }
          },
          {
            "type": "variable",
            "name": "owner",
            "source_mapping": {
              "start": 282,
              "length": 33,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Owned",
                "source_mapping": {
                  "start": 134,
                  "length": 275,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "DappReg.at(uint256).owner () shadows:\n\t- Owned.owner () (state variable)\n",
        "markdown": "[DappReg.at(uint256).owner]() shadows:\n\t- [Owned.owner]() (state variable)\n",
        "first_markdown_element": "",
        "id": "81af7e4d025ffc85a323981cda81122665b6163a1a3cfecda014e0eebff77de4",
        "check": "shadowing-local",
        "impact": "Low",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "owner",
            "source_mapping": {
              "start": 1742,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "get",
                "source_mapping": {
                  "start": 1686,
                  "length": 130,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DappReg",
                    "source_mapping": {
                      "start": 411,
                      "length": 2366,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "get(bytes32)"
                }
              }
            }
          },
          {
            "type": "variable",
            "name": "owner",
            "source_mapping": {
              "start": 282,
              "length": 33,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Owned",
                "source_mapping": {
                  "start": 134,
                  "length": 275,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "DappReg.get(bytes32).owner () shadows:\n\t- Owned.owner () (state variable)\n",
        "markdown": "[DappReg.get(bytes32).owner]() shadows:\n\t- [Owned.owner]() (state variable)\n",
        "first_markdown_element": "",
        "id": "dc21d1c0364bc0e0cf838dc6fc8e87499511fbfb37fffbcfef419edec5db625c",
        "check": "shadowing-local",
        "impact": "Low",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_new",
            "source_mapping": {
              "start": 337,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setOwner",
                "source_mapping": {
                  "start": 319,
                  "length": 88,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Owned",
                    "source_mapping": {
                      "start": 134,
                      "length": 275,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setOwner(address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "owner = _new",
            "source_mapping": {
              "start": 391,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setOwner",
                "source_mapping": {
                  "start": 319,
                  "length": 88,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Owned",
                    "source_mapping": {
                      "start": 134,
                      "length": 275,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setOwner(address)"
                }
              }
            }
          }
        ],
        "description": "Owned.setOwner(address)._new () lacks a zero-check on :\n\t\t- owner = _new ()\n",
        "markdown": "[Owned.setOwner(address)._new]() lacks a zero-check on :\n\t\t- [owner = _new]()\n",
        "first_markdown_element": "",
        "id": "cf95da28c3bea50f8dac751abbc1461fd46ac18f52ab78645a88e776f2c625ed",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 265,
              "length": 5,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "only_owner",
                "source_mapping": {
                  "start": 216,
                  "length": 63,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Owned",
                    "source_mapping": {
                      "start": 134,
                      "length": 275,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "only_owner()"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected THROW ():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "markdown": "Deprecated standard detected [THROW]():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "first_markdown_element": "",
        "id": "f5556cf1c70b64b9e4b1fc32044dd970b5f2c8b9fc21b7971fda01971033f2d5",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [],
        "description": "solc-0.4.1 is not recommended for deployment\n",
        "markdown": "solc-0.4.1 is not recommended for deployment\n",
        "first_markdown_element": "",
        "id": "5f358785dc4df92a048a5fc84402e36cf62b579fef6cf958ffdcbfbb1adaec9e",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "pragma",
            "name": "^0.4.1",
            "source_mapping": {
              "start": 109,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "directive": [
                "solidity",
                "^",
                "0.4",
                ".1"
              ]
            }
          }
        ],
        "description": "Pragma version^0.4.1 () allows old versions\n",
        "markdown": "Pragma version[^0.4.1]() allows old versions\n",
        "first_markdown_element": "",
        "id": "7e5f39572985ae5b079b47280cf47e2c2ce61d305c41927c88e2763b6317d832",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_id",
            "source_mapping": {
              "start": 1850,
              "length": 11,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "register",
                "source_mapping": {
                  "start": 1832,
                  "length": 153,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DappReg",
                    "source_mapping": {
                      "start": 411,
                      "length": 2366,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "register(bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DappReg.register(bytes32)._id () is not in mixedCase\n",
        "markdown": "Parameter [DappReg.register(bytes32)._id]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "14e572f2d5b0bc3ac0a0c9a7e5f4bf37f7b9e5576424b6a562441da54f928124",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_owner",
            "source_mapping": {
              "start": 2475,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setDappOwner",
                "source_mapping": {
                  "start": 2440,
                  "length": 134,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DappReg",
                    "source_mapping": {
                      "start": 411,
                      "length": 2366,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setDappOwner(bytes32,address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DappReg.setDappOwner(bytes32,address)._owner () is not in mixedCase\n",
        "markdown": "Parameter [DappReg.setDappOwner(bytes32,address)._owner]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "1e8320abc76a77b4b7eb43e32ada284bcb9a0653625c611ef68043e8e2450c84",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_value",
            "source_mapping": {
              "start": 2305,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setMeta",
                "source_mapping": {
                  "start": 2261,
                  "length": 153,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DappReg",
                    "source_mapping": {
                      "start": 411,
                      "length": 2366,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setMeta(bytes32,bytes32,bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DappReg.setMeta(bytes32,bytes32,bytes32)._value () is not in mixedCase\n",
        "markdown": "Parameter [DappReg.setMeta(bytes32,bytes32,bytes32)._value]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "23c8abf624c0433c8bcc1a6868bc43112558568a98236ff44152def4332d08c1",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_key",
            "source_mapping": {
              "start": 2291,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setMeta",
                "source_mapping": {
                  "start": 2261,
                  "length": 153,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DappReg",
                    "source_mapping": {
                      "start": 411,
                      "length": 2366,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setMeta(bytes32,bytes32,bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DappReg.setMeta(bytes32,bytes32,bytes32)._key () is not in mixedCase\n",
        "markdown": "Parameter [DappReg.setMeta(bytes32,bytes32,bytes32)._key]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "3f961b3be13b002ffb2a4559c8670acb6a67fb36d4a08d9d6745af54a74c8f61",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_id",
            "source_mapping": {
              "start": 2143,
              "length": 11,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "meta",
                "source_mapping": {
                  "start": 2129,
                  "length": 104,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DappReg",
                    "source_mapping": {
                      "start": 411,
                      "length": 2366,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "meta(bytes32,bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DappReg.meta(bytes32,bytes32)._id () is not in mixedCase\n",
        "markdown": "Parameter [DappReg.meta(bytes32,bytes32)._id]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "46c2b451db1dea307a78434b0295eb00fcde38b1dabd0123c857aa40713b9ed4",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "when_id_free",
            "source_mapping": {
              "start": 985,
              "length": 77,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "DappReg",
                "source_mapping": {
                  "start": 411,
                  "length": 2366,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "when_id_free(bytes32)"
            },
            "additional_fields": {
              "target": "modifier",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Modifier DappReg.when_id_free(bytes32) () is not in mixedCase\n",
        "markdown": "Modifier [DappReg.when_id_free(bytes32)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "96f404e64596fed897aef7bb60c01d384676ea909101487b1213bac6e16f6285",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "either_owner",
            "source_mapping": {
              "start": 870,
              "length": 112,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "DappReg",
                "source_mapping": {
                  "start": 411,
                  "length": 2366,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "either_owner(bytes32)"
            },
            "additional_fields": {
              "target": "modifier",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Modifier DappReg.either_owner(bytes32) () is not in mixedCase\n",
        "markdown": "Modifier [DappReg.either_owner(bytes32)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "a1334998e9b715436d1bada08df83ccb1636e0113da2f8a5952e4e15d8da143a",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_index",
            "source_mapping": {
              "start": 1538,
              "length": 11,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "at",
                "source_mapping": {
                  "start": 1526,
                  "length": 137,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DappReg",
                    "source_mapping": {
                      "start": 411,
                      "length": 2366,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "at(uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DappReg.at(uint256)._index () is not in mixedCase\n",
        "markdown": "Parameter [DappReg.at(uint256)._index]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "a6f83f4cf6345d428b4cd2c6fe24a81515d92b9ef32b6cd569adbe00d075f883",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_key",
            "source_mapping": {
              "start": 2156,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "meta",
                "source_mapping": {
                  "start": 2129,
                  "length": 104,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DappReg",
                    "source_mapping": {
                      "start": 411,
                      "length": 2366,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "meta(bytes32,bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DappReg.meta(bytes32,bytes32)._key () is not in mixedCase\n",
        "markdown": "Parameter [DappReg.meta(bytes32,bytes32)._key]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "a9abec203ae9f00e38faeb0fa267af4cfe9a3b7346a0a8f1193110d60ed52df0",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_fee",
            "source_mapping": {
              "start": 2622,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setFee",
                "source_mapping": {
                  "start": 2606,
                  "length": 56,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DappReg",
                    "source_mapping": {
                      "start": 411,
                      "length": 2366,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setFee(uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DappReg.setFee(uint256)._fee () is not in mixedCase\n",
        "markdown": "Parameter [DappReg.setFee(uint256)._fee]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "ab4e521d22dc0717f4451c9555f8076997fcf429061c81d6833492920e0eb1c3",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "only_dapp_owner",
            "source_mapping": {
              "start": 775,
              "length": 92,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "DappReg",
                "source_mapping": {
                  "start": 411,
                  "length": 2366,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "only_dapp_owner(bytes32)"
            },
            "additional_fields": {
              "target": "modifier",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Modifier DappReg.only_dapp_owner(bytes32) () is not in mixedCase\n",
        "markdown": "Modifier [DappReg.only_dapp_owner(bytes32)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "aded649472e402de971ba05e21eee05c8a20528489720f90bf64052b887712f0",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_id",
            "source_mapping": {
              "start": 1699,
              "length": 11,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "get",
                "source_mapping": {
                  "start": 1686,
                  "length": 130,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DappReg",
                    "source_mapping": {
                      "start": 411,
                      "length": 2366,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "get(bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DappReg.get(bytes32)._id () is not in mixedCase\n",
        "markdown": "Parameter [DappReg.get(bytes32)._id]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "b429bbd7d552fd67c9a6730dc54bd5dc5467119c76ec15a752632cea71a9581e",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "only_owner",
            "source_mapping": {
              "start": 216,
              "length": 63,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Owned",
                "source_mapping": {
                  "start": 134,
                  "length": 275,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "only_owner()"
            },
            "additional_fields": {
              "target": "modifier",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Modifier Owned.only_owner() () is not in mixedCase\n",
        "markdown": "Modifier [Owned.only_owner()]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "b45e9850ac7d459bf4575483f5d6bf02d14756b0b49740b0d01ed29a66a4cbc5",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_id",
            "source_mapping": {
              "start": 2024,
              "length": 11,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "unregister",
                "source_mapping": {
                  "start": 2004,
                  "length": 97,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DappReg",
                    "source_mapping": {
                      "start": 411,
                      "length": 2366,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "unregister(bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DappReg.unregister(bytes32)._id () is not in mixedCase\n",
        "markdown": "Parameter [DappReg.unregister(bytes32)._id]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "d6988b7c36308cb2aff7e0b82a790f72d8815439e9ff82fc3f2764ad35d64469",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_id",
            "source_mapping": {
              "start": 2462,
              "length": 11,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setDappOwner",
                "source_mapping": {
                  "start": 2440,
                  "length": 134,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DappReg",
                    "source_mapping": {
                      "start": 411,
                      "length": 2366,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setDappOwner(bytes32,address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DappReg.setDappOwner(bytes32,address)._id () is not in mixedCase\n",
        "markdown": "Parameter [DappReg.setDappOwner(bytes32,address)._id]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "d6b3f1be17833505acc7c709fa2f58bce58ee2a61f2fec6e8ea5a44be3b38644",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_new",
            "source_mapping": {
              "start": 337,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setOwner",
                "source_mapping": {
                  "start": 319,
                  "length": 88,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Owned",
                    "source_mapping": {
                      "start": 134,
                      "length": 275,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setOwner(address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Owned.setOwner(address)._new () is not in mixedCase\n",
        "markdown": "Parameter [Owned.setOwner(address)._new]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "e3cd03fa892217e60abc7010df2e8b6777afbed11022c482c27ca453386423a3",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "when_fee_paid",
            "source_mapping": {
              "start": 710,
              "length": 62,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "DappReg",
                "source_mapping": {
                  "start": 411,
                  "length": 2366,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "when_fee_paid()"
            },
            "additional_fields": {
              "target": "modifier",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Modifier DappReg.when_fee_paid() () is not in mixedCase\n",
        "markdown": "Modifier [DappReg.when_fee_paid()]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "eecef77002628dbe520b99c103e132539f064e9c913db7ca1c41e989d2314742",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_id",
            "source_mapping": {
              "start": 2278,
              "length": 11,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setMeta",
                "source_mapping": {
                  "start": 2261,
                  "length": 153,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "DappReg",
                    "source_mapping": {
                      "start": 411,
                      "length": 2366,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setMeta(bytes32,bytes32,bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter DappReg.setMeta(bytes32,bytes32,bytes32)._id () is not in mixedCase\n",
        "markdown": "Parameter [DappReg.setMeta(bytes32,bytes32,bytes32)._id]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "f213fdbca11b911c4655d7c4d43ad967c6ec710b41a61557b86715841afc3510",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      }
    ]
  }
}