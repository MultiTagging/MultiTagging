{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "contract",
            "name": "Registration",
            "source_mapping": {
              "start": 383,
              "length": 4249,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "node",
            "name": "hangoutGroups[groupNumber].push(msg.sender)",
            "source_mapping": {
              "start": 3627,
              "length": 43,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "commit",
                "source_mapping": {
                  "start": 2766,
                  "length": 911,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "commit()"
                }
              }
            }
          }
        ],
        "description": "Registration () contract sets array length with a user-controlled value:\n\t- hangoutGroups[groupNumber].push(msg.sender) ()\n",
        "markdown": "[Registration]() contract sets array length with a user-controlled value:\n\t- [hangoutGroups[groupNumber].push(msg.sender)]()\n",
        "first_markdown_element": "",
        "id": "646521d52fe246420e6606e316a2b0768597bbeb4153a401e30093b38a1e803c",
        "check": "controlled-array-length",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "register",
            "source_mapping": {
              "start": 2094,
              "length": 666,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Registration",
                "source_mapping": {
                  "start": 383,
                  "length": 4249,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "register()"
            }
          },
          {
            "type": "node",
            "name": "depositContract.register.value(msg.value)(msg.sender)",
            "source_mapping": {
              "start": 2330,
              "length": 53,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "register",
                "source_mapping": {
                  "start": 2094,
                  "length": 666,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "register()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "userHash[msg.sender] = h",
            "source_mapping": {
              "start": 2616,
              "length": 24,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "register",
                "source_mapping": {
                  "start": 2094,
                  "length": 666,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "register()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "userHash"
            }
          }
        ],
        "description": "Reentrancy in Registration.register() ():\n\tExternal calls:\n\t- depositContract.register.value(msg.value)(msg.sender) ()\n\tState variables written after the call(s):\n\t- userHash[msg.sender] = h ()\n\tRegistration.userHash () can be used in cross function reentrancies:\n\t- Registration.commit() ()\n\t- Registration.register() ()\n",
        "markdown": "Reentrancy in [Registration.register()]():\n\tExternal calls:\n\t- [depositContract.register.value(msg.value)(msg.sender)]()\n\tState variables written after the call(s):\n\t- [userHash[msg.sender] = h]()\n\t[Registration.userHash]() can be used in cross function reentrancies:\n\t- [Registration.commit()]()\n\t- [Registration.register()]()\n",
        "first_markdown_element": "",
        "id": "923dd9ddd1313589424c5982b3775a88ef2d60c48ce5c64f6f32cd7a1bfde50d",
        "check": "reentrancy-eth",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "RegistrationDeposits",
            "source_mapping": {
              "start": 25,
              "length": 83,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "function",
            "name": "register",
            "source_mapping": {
              "start": 57,
              "length": 49,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "RegistrationDeposits",
                "source_mapping": {
                  "start": 25,
                  "length": 83,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "register(address)"
            }
          }
        ],
        "description": "Contract locking ether found:\n\tContract RegistrationDeposits () has payable functions:\n\t - RegistrationDeposits.register(address) ()\n\tBut does not have a function to withdraw the ether\n",
        "markdown": "Contract locking ether found:\n\tContract [RegistrationDeposits]() has payable functions:\n\t - [RegistrationDeposits.register(address)]()\n\tBut does not have a function to withdraw the ether\n",
        "first_markdown_element": "",
        "id": "55e5a316d89a6e64352ada6d8ab43d8d9f02c9b5f3aacf3d6e53e83a06dda69a",
        "check": "locked-ether",
        "impact": "Medium",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "deployHangout",
            "source_mapping": {
              "start": 3687,
              "length": 717,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Registration",
                "source_mapping": {
                  "start": 383,
                  "length": 4249,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "deployHangout()"
            }
          },
          {
            "type": "node",
            "name": "newHangoutContract = hangoutFactory.newHangoutContract(hangoutGroups[groupNumber],this,(hangoutPhase - 900),hangoutAddress[groupNumber])",
            "source_mapping": {
              "start": 4066,
              "length": 154,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "deployHangout",
                "source_mapping": {
                  "start": 3687,
                  "length": 717,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "deployHangout()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "hangoutAddress[groupNumber] = sha3()(newHangoutContract)",
            "source_mapping": {
              "start": 4343,
              "length": 54,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "deployHangout",
                "source_mapping": {
                  "start": 3687,
                  "length": 717,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "deployHangout()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "hangoutAddress"
            }
          }
        ],
        "description": "Reentrancy in Registration.deployHangout() ():\n\tExternal calls:\n\t- newHangoutContract = hangoutFactory.newHangoutContract(hangoutGroups[groupNumber],this,(hangoutPhase - 900),hangoutAddress[groupNumber]) ()\n\tState variables written after the call(s):\n\t- hangoutAddress[groupNumber] = sha3()(newHangoutContract) ()\n\tRegistration.hangoutAddress () can be used in cross function reentrancies:\n\t- Registration.deployHangout() ()\n",
        "markdown": "Reentrancy in [Registration.deployHangout()]():\n\tExternal calls:\n\t- [newHangoutContract = hangoutFactory.newHangoutContract(hangoutGroups[groupNumber],this,(hangoutPhase - 900),hangoutAddress[groupNumber])]()\n\tState variables written after the call(s):\n\t- [hangoutAddress[groupNumber] = sha3()(newHangoutContract)]()\n\t[Registration.hangoutAddress]() can be used in cross function reentrancies:\n\t- [Registration.deployHangout()]()\n",
        "first_markdown_element": "",
        "id": "4fcd0bd04a8dfdc3dfd51778ec7cccf6124a657d74b24c11caf5cb538fe4365c",
        "check": "reentrancy-no-eth",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "submitVerifiedUsers",
            "source_mapping": {
              "start": 4414,
              "length": 215,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Registration",
                "source_mapping": {
                  "start": 383,
                  "length": 4249,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "submitVerifiedUsers(address[])"
            }
          },
          {
            "type": "node",
            "name": "POI.submitVerifiedUsers(_verifiedUsers)",
            "source_mapping": {
              "start": 4536,
              "length": 39,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "submitVerifiedUsers",
                "source_mapping": {
                  "start": 4414,
                  "length": 215,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "submitVerifiedUsers(address[])"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "isHangoutContract[msg.sender] = false",
            "source_mapping": {
              "start": 4585,
              "length": 37,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "submitVerifiedUsers",
                "source_mapping": {
                  "start": 4414,
                  "length": 215,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "submitVerifiedUsers(address[])"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "isHangoutContract"
            }
          }
        ],
        "description": "Reentrancy in Registration.submitVerifiedUsers(address[]) ():\n\tExternal calls:\n\t- POI.submitVerifiedUsers(_verifiedUsers) ()\n\tState variables written after the call(s):\n\t- isHangoutContract[msg.sender] = false ()\n\tRegistration.isHangoutContract () can be used in cross function reentrancies:\n\t- Registration.deployHangout() ()\n\t- Registration.submitVerifiedUsers(address[]) ()\n",
        "markdown": "Reentrancy in [Registration.submitVerifiedUsers(address[])]():\n\tExternal calls:\n\t- [POI.submitVerifiedUsers(_verifiedUsers)]()\n\tState variables written after the call(s):\n\t- [isHangoutContract[msg.sender] = false]()\n\t[Registration.isHangoutContract]() can be used in cross function reentrancies:\n\t- [Registration.deployHangout()]()\n\t- [Registration.submitVerifiedUsers(address[])]()\n",
        "first_markdown_element": "",
        "id": "85b468ac0e2e1c44517195dacdd6c1e190bb951c7bf1a3340a9d0c5931f341d6",
        "check": "reentrancy-no-eth",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "groupNumber",
            "source_mapping": {
              "start": 4016,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "deployHangout",
                "source_mapping": {
                  "start": 3687,
                  "length": 717,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "deployHangout()"
                }
              }
            }
          },
          {
            "type": "function",
            "name": "deployHangout",
            "source_mapping": {
              "start": 3687,
              "length": 717,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Registration",
                "source_mapping": {
                  "start": 383,
                  "length": 4249,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "deployHangout()"
            }
          },
          {
            "type": "node",
            "name": "hangoutAddress[groupNumber] != 0",
            "source_mapping": {
              "start": 3967,
              "length": 32,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "deployHangout",
                "source_mapping": {
                  "start": 3687,
                  "length": 717,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "deployHangout()"
                }
              }
            }
          }
        ],
        "description": "Variable 'Registration.deployHangout().groupNumber ()' in Registration.deployHangout() () potentially used before declaration: hangoutAddress[groupNumber] != 0 ()\n",
        "markdown": "Variable '[Registration.deployHangout().groupNumber]()' in [Registration.deployHangout()]() potentially used before declaration: [hangoutAddress[groupNumber] != 0]()\n",
        "first_markdown_element": "",
        "id": "77c4d2a61191a5671590f10e71a6e64105acccfa9c301edfb9c8debb61caa159",
        "check": "variable-scope",
        "impact": "Low",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "deployHangout",
            "source_mapping": {
              "start": 3687,
              "length": 717,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Registration",
                "source_mapping": {
                  "start": 383,
                  "length": 4249,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "deployHangout()"
            }
          },
          {
            "type": "node",
            "name": "newHangoutContract = hangoutFactory.newHangoutContract(hangoutGroups[groupNumber],this,(hangoutPhase - 900),hangoutAddress[groupNumber])",
            "source_mapping": {
              "start": 4066,
              "length": 154,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "deployHangout",
                "source_mapping": {
                  "start": 3687,
                  "length": 717,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "deployHangout()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "newHangoutContract = hangoutFactory.newHangoutContract(hangoutGroups[groupNumber],this,(hangoutPhase - 900),hangoutAddress[groupNumber])",
            "source_mapping": {
              "start": 4066,
              "length": 154,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "deployHangout",
                "source_mapping": {
                  "start": 3687,
                  "length": 717,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "deployHangout()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "hangoutContract[groupNumber] = newHangoutContract",
            "source_mapping": {
              "start": 4230,
              "length": 49,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "deployHangout",
                "source_mapping": {
                  "start": 3687,
                  "length": 717,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "deployHangout()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "hangoutContract"
            }
          },
          {
            "type": "node",
            "name": "isHangoutContract[newHangoutContract] = true",
            "source_mapping": {
              "start": 4289,
              "length": 44,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "deployHangout",
                "source_mapping": {
                  "start": 3687,
                  "length": 717,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "deployHangout()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "isHangoutContract"
            }
          }
        ],
        "description": "Reentrancy in Registration.deployHangout() ():\n\tExternal calls:\n\t- newHangoutContract = hangoutFactory.newHangoutContract(hangoutGroups[groupNumber],this,(hangoutPhase - 900),hangoutAddress[groupNumber]) ()\n\tState variables written after the call(s):\n\t- hangoutContract[groupNumber] = newHangoutContract ()\n\t- isHangoutContract[newHangoutContract] = true ()\n",
        "markdown": "Reentrancy in [Registration.deployHangout()]():\n\tExternal calls:\n\t- [newHangoutContract = hangoutFactory.newHangoutContract(hangoutGroups[groupNumber],this,(hangoutPhase - 900),hangoutAddress[groupNumber])]()\n\tState variables written after the call(s):\n\t- [hangoutContract[groupNumber] = newHangoutContract]()\n\t- [isHangoutContract[newHangoutContract] = true]()\n",
        "first_markdown_element": "",
        "id": "2113dd0b64aacf07dfb9497eb5a17df34260dc5983d9aebbe1cf17fe7f7048a5",
        "check": "reentrancy-benign",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "register",
            "source_mapping": {
              "start": 2094,
              "length": 666,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Registration",
                "source_mapping": {
                  "start": 383,
                  "length": 4249,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "register()"
            }
          },
          {
            "type": "node",
            "name": "depositContract.register.value(msg.value)(msg.sender)",
            "source_mapping": {
              "start": 2330,
              "length": 53,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "register",
                "source_mapping": {
                  "start": 2094,
                  "length": 666,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "register()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "entropy = h",
            "source_mapping": {
              "start": 2595,
              "length": 11,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "register",
                "source_mapping": {
                  "start": 2094,
                  "length": 666,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "register()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "entropy"
            }
          },
          {
            "type": "node",
            "name": "numUsers ++",
            "source_mapping": {
              "start": 2687,
              "length": 10,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "register",
                "source_mapping": {
                  "start": 2094,
                  "length": 666,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "register()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "numUsers"
            }
          },
          {
            "type": "node",
            "name": "userAddress[h] = msg.sender",
            "source_mapping": {
              "start": 2650,
              "length": 27,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "register",
                "source_mapping": {
                  "start": 2094,
                  "length": 666,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "register()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "userAddress"
            }
          }
        ],
        "description": "Reentrancy in Registration.register() ():\n\tExternal calls:\n\t- depositContract.register.value(msg.value)(msg.sender) ()\n\tState variables written after the call(s):\n\t- entropy = h ()\n\t- numUsers ++ ()\n\t- userAddress[h] = msg.sender ()\n",
        "markdown": "Reentrancy in [Registration.register()]():\n\tExternal calls:\n\t- [depositContract.register.value(msg.value)(msg.sender)]()\n\tState variables written after the call(s):\n\t- [entropy = h]()\n\t- [numUsers ++]()\n\t- [userAddress[h] = msg.sender]()\n",
        "first_markdown_element": "",
        "id": "9bc91d71550a75a1c876409f3ec27c8d5b7aa54dcfa782cb5bbd256110919c17",
        "check": "reentrancy-benign",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "register",
            "source_mapping": {
              "start": 2094,
              "length": 666,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Registration",
                "source_mapping": {
                  "start": 383,
                  "length": 4249,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "register()"
            }
          },
          {
            "type": "node",
            "name": "depositContract.register.value(msg.value)(msg.sender)",
            "source_mapping": {
              "start": 2330,
              "length": 53,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "register",
                "source_mapping": {
                  "start": 2094,
                  "length": 666,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "register()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "Registered(msg.sender,h)",
            "source_mapping": {
              "start": 2707,
              "length": 25,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "register",
                "source_mapping": {
                  "start": 2094,
                  "length": 666,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "register()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          }
        ],
        "description": "Reentrancy in Registration.register() ():\n\tExternal calls:\n\t- depositContract.register.value(msg.value)(msg.sender) ()\n\tEvent emitted after the call(s):\n\t- Registered(msg.sender,h) ()\n",
        "markdown": "Reentrancy in [Registration.register()]():\n\tExternal calls:\n\t- [depositContract.register.value(msg.value)(msg.sender)]()\n\tEvent emitted after the call(s):\n\t- [Registered(msg.sender,h)]()\n",
        "first_markdown_element": "",
        "id": "5de89ca550f26627947ae4aac8cfd8de678c554a131d43d9d7c033ba21a2a5fc",
        "check": "reentrancy-events",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "deployHangout",
            "source_mapping": {
              "start": 3687,
              "length": 717,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Registration",
                "source_mapping": {
                  "start": 383,
                  "length": 4249,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "deployHangout()"
            }
          },
          {
            "type": "node",
            "name": "(now < commitmentPhase) || (now > hangoutPhase) || (hangoutAddress[userGroup[msg.sender]] != 0)",
            "source_mapping": {
              "start": 3733,
              "length": 168,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "deployHangout",
                "source_mapping": {
                  "start": 3687,
                  "length": 717,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "deployHangout()"
                }
              }
            }
          }
        ],
        "description": "Registration.deployHangout() () uses timestamp for comparisons\n\tDangerous comparisons:\n\t- (now < commitmentPhase) || (now > hangoutPhase) || (hangoutAddress[userGroup[msg.sender]] != 0) ()\n",
        "markdown": "[Registration.deployHangout()]() uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [(now < commitmentPhase) || (now > hangoutPhase) || (hangoutAddress[userGroup[msg.sender]] != 0)]()\n",
        "first_markdown_element": "",
        "id": "1bb2aa845f698c6eaa0eeda5e6d04b318e942595e6f6d7366a29a3002ac661aa",
        "check": "timestamp",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "commit",
            "source_mapping": {
              "start": 2766,
              "length": 911,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Registration",
                "source_mapping": {
                  "start": 383,
                  "length": 4249,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "commit()"
            }
          },
          {
            "type": "node",
            "name": "(now < registrationPhase) || (now > commitmentPhase) || (userGroup[msg.sender] != 0)",
            "source_mapping": {
              "start": 2798,
              "length": 161,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "commit",
                "source_mapping": {
                  "start": 2766,
                  "length": 911,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "commit()"
                }
              }
            }
          }
        ],
        "description": "Registration.commit() () uses timestamp for comparisons\n\tDangerous comparisons:\n\t- (now < registrationPhase) || (now > commitmentPhase) || (userGroup[msg.sender] != 0) ()\n",
        "markdown": "[Registration.commit()]() uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [(now < registrationPhase) || (now > commitmentPhase) || (userGroup[msg.sender] != 0)]()\n",
        "first_markdown_element": "",
        "id": "90b7e99896689cc036f726eb35fddd6afbb7412064c902ca5930adf9a2411054",
        "check": "timestamp",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "register",
            "source_mapping": {
              "start": 2094,
              "length": 666,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Registration",
                "source_mapping": {
                  "start": 383,
                  "length": 4249,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "register()"
            }
          },
          {
            "type": "node",
            "name": "now > registrationPhase || (userHash[msg.sender] != bytes32(0)) || msg.value < depositSize",
            "source_mapping": {
              "start": 2157,
              "length": 155,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "register",
                "source_mapping": {
                  "start": 2094,
                  "length": 666,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "register()"
                }
              }
            }
          }
        ],
        "description": "Registration.register() () uses timestamp for comparisons\n\tDangerous comparisons:\n\t- now > registrationPhase || (userHash[msg.sender] != bytes32(0)) || msg.value < depositSize ()\n",
        "markdown": "[Registration.register()]() uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [now > registrationPhase || (userHash[msg.sender] != bytes32(0)) || msg.value < depositSize]()\n",
        "first_markdown_element": "",
        "id": "b4ce1d2eac3bc6619a0b0b55d21783c6935030507b00721aa70846bf569e53b0",
        "check": "timestamp",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "submitVerifiedUsers",
            "source_mapping": {
              "start": 4414,
              "length": 215,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Registration",
                "source_mapping": {
                  "start": 383,
                  "length": 4249,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "submitVerifiedUsers(address[])"
            }
          },
          {
            "type": "node",
            "name": "isHangoutContract[msg.sender] != true",
            "source_mapping": {
              "start": 4482,
              "length": 37,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "submitVerifiedUsers",
                "source_mapping": {
                  "start": 4414,
                  "length": 215,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "submitVerifiedUsers(address[])"
                }
              }
            }
          }
        ],
        "description": "Registration.submitVerifiedUsers(address[]) () compares to a boolean constant:\n\t-isHangoutContract[msg.sender] != true ()\n",
        "markdown": "[Registration.submitVerifiedUsers(address[])]() compares to a boolean constant:\n\t-[isHangoutContract[msg.sender] != true]()\n",
        "first_markdown_element": "",
        "id": "ca351b2ec2323266315cd44a8c8a3a355f9e1a7dd374ca87923136036b55774d",
        "check": "boolean-equal",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "h = sha3()(entropy,msg.sender,block.blockhash(block.number))",
            "source_mapping": {
              "start": 2517,
              "length": 68,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "register",
                "source_mapping": {
                  "start": 2094,
                  "length": 666,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "register()"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected h = sha3()(entropy,msg.sender,block.blockhash(block.number)) ():\n\t- Usage of \"block.blockhash()\" should be replaced with \"blockhash()\"\n\t- Usage of \"sha3()\" should be replaced with \"keccak256()\"\n",
        "markdown": "Deprecated standard detected [h = sha3()(entropy,msg.sender,block.blockhash(block.number))]():\n\t- Usage of \"block.blockhash()\" should be replaced with \"blockhash()\"\n\t- Usage of \"sha3()\" should be replaced with \"keccak256()\"\n",
        "first_markdown_element": "",
        "id": "4329c90070d78d75507cf746ca0e63cb67da31bc9cac87397693b51f9c224b3d",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "entropy = sha3()(block.blockhash(block.number))",
            "source_mapping": {
              "start": 1657,
              "length": 45,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "Registration",
                "source_mapping": {
                  "start": 1398,
                  "length": 558,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "Registration(address,uint256,uint256,uint256,uint256,uint256,address)"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected entropy = sha3()(block.blockhash(block.number)) ():\n\t- Usage of \"block.blockhash()\" should be replaced with \"blockhash()\"\n\t- Usage of \"sha3()\" should be replaced with \"keccak256()\"\n",
        "markdown": "Deprecated standard detected [entropy = sha3()(block.blockhash(block.number))]():\n\t- Usage of \"block.blockhash()\" should be replaced with \"blockhash()\"\n\t- Usage of \"sha3()\" should be replaced with \"keccak256()\"\n",
        "first_markdown_element": "",
        "id": "d53ed80fb7534fa1fd83d858bbb76b2522933fa9f5396c69720820757380d66b",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 2314,
              "length": 5,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "register",
                "source_mapping": {
                  "start": 2094,
                  "length": 666,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "register()"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected THROW ():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "markdown": "Deprecated standard detected [THROW]():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "first_markdown_element": "",
        "id": "f5556cf1c70b64b9e4b1fc32044dd970b5f2c8b9fc21b7971fda01971033f2d5",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "hangoutAddress[groupNumber] = sha3()(newHangoutContract)",
            "source_mapping": {
              "start": 4343,
              "length": 54,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "deployHangout",
                "source_mapping": {
                  "start": 3687,
                  "length": 717,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "deployHangout()"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected hangoutAddress[groupNumber] = sha3()(newHangoutContract) ():\n\t- Usage of \"sha3()\" should be replaced with \"keccak256()\"\n",
        "markdown": "Deprecated standard detected [hangoutAddress[groupNumber] = sha3()(newHangoutContract)]():\n\t- Usage of \"sha3()\" should be replaced with \"keccak256()\"\n",
        "first_markdown_element": "",
        "id": "ff7758a972fbeb615b701bc9ed9d44eaa91d0d15445f04f7383f936b825c0bce",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "pragma",
            "name": "^0.4.6",
            "source_mapping": {
              "start": 0,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "directive": [
                "solidity",
                "^",
                "0.4",
                ".6"
              ]
            }
          }
        ],
        "description": "Pragma version^0.4.6 () allows old versions\n",
        "markdown": "Pragma version[^0.4.6]() allows old versions\n",
        "first_markdown_element": "",
        "id": "54eae9514d5e93f8fb467cb6e12380204cb269720316b950ba80b399a769bf71",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [],
        "description": "solc-0.4.6 is not recommended for deployment\n",
        "markdown": "solc-0.4.6 is not recommended for deployment\n",
        "first_markdown_element": "",
        "id": "b2e09ce9c0c37029707bd5645a9a2972adb1c4c04948009825bacc17fa383ec8",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_verifiedUsers",
            "source_mapping": {
              "start": 4443,
              "length": 24,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "submitVerifiedUsers",
                "source_mapping": {
                  "start": 4414,
                  "length": 215,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "submitVerifiedUsers(address[])"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Registration.submitVerifiedUsers(address[])._verifiedUsers () is not in mixedCase\n",
        "markdown": "Parameter [Registration.submitVerifiedUsers(address[])._verifiedUsers]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "1ef20efa8665a7e2319fe4af467d11171964584fab86f2f0b0d45bf686ea693d",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_depositContract",
            "source_mapping": {
              "start": 1989,
              "length": 24,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setDepositContract",
                "source_mapping": {
                  "start": 1961,
                  "length": 127,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Registration",
                    "source_mapping": {
                      "start": 383,
                      "length": 4249,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setDepositContract(address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Registration.setDepositContract(address)._depositContract () is not in mixedCase\n",
        "markdown": "Parameter [Registration.setDepositContract(address)._depositContract]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "38330e7fb0f952cf0ffe56e5cc842cb750df743c891981b4cc6bdf6fc7faa523",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_commitmentPhase",
            "source_mapping": {
              "start": 4794,
              "length": 21,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "newRegistrationContract",
                "source_mapping": {
                  "start": 4669,
                  "length": 371,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "RegistrationFactory",
                    "source_mapping": {
                      "start": 4634,
                      "length": 413,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "newRegistrationContract(address,uint256,uint256,uint256,uint256,uint256,address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter RegistrationFactory.newRegistrationContract(address,uint256,uint256,uint256,uint256,uint256,address)._commitmentPhase () is not in mixedCase\n",
        "markdown": "Parameter [RegistrationFactory.newRegistrationContract(address,uint256,uint256,uint256,uint256,uint256,address)._commitmentPhase]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "5f7e011ece117d73eaee7081b401208b3f1c79f70c71802737d50a5c022b1c55",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_depositSize",
            "source_mapping": {
              "start": 4750,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "newRegistrationContract",
                "source_mapping": {
                  "start": 4669,
                  "length": 371,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "RegistrationFactory",
                    "source_mapping": {
                      "start": 4634,
                      "length": 413,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "newRegistrationContract(address,uint256,uint256,uint256,uint256,uint256,address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter RegistrationFactory.newRegistrationContract(address,uint256,uint256,uint256,uint256,uint256,address)._depositSize () is not in mixedCase\n",
        "markdown": "Parameter [RegistrationFactory.newRegistrationContract(address,uint256,uint256,uint256,uint256,uint256,address)._depositSize]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "61cb4d92eead582fa72c6b6805e77ac799748f91bf45c7027727b7c389f78309",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "POI",
            "source_mapping": {
              "start": 460,
              "length": 31,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Registration",
                "source_mapping": {
                  "start": 383,
                  "length": 4249,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable Registration.POI () is not in mixedCase\n",
        "markdown": "Variable [Registration.POI]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "742e5da81f5731767928f9d7e6679d5b818c9f95b6e4f861cee7132ef680dab8",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_registrationPhase",
            "source_mapping": {
              "start": 4769,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "newRegistrationContract",
                "source_mapping": {
                  "start": 4669,
                  "length": 371,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "RegistrationFactory",
                    "source_mapping": {
                      "start": 4634,
                      "length": 413,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "newRegistrationContract(address,uint256,uint256,uint256,uint256,uint256,address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter RegistrationFactory.newRegistrationContract(address,uint256,uint256,uint256,uint256,uint256,address)._registrationPhase () is not in mixedCase\n",
        "markdown": "Parameter [RegistrationFactory.newRegistrationContract(address,uint256,uint256,uint256,uint256,uint256,address)._registrationPhase]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "8bbdff05a8c8538f833cac315dea25e1f09d4caa461a20515c184ed785e5d39c",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_hangoutFactory",
            "source_mapping": {
              "start": 4837,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "newRegistrationContract",
                "source_mapping": {
                  "start": 4669,
                  "length": 371,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "RegistrationFactory",
                    "source_mapping": {
                      "start": 4634,
                      "length": 413,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "newRegistrationContract(address,uint256,uint256,uint256,uint256,uint256,address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter RegistrationFactory.newRegistrationContract(address,uint256,uint256,uint256,uint256,uint256,address)._hangoutFactory () is not in mixedCase\n",
        "markdown": "Parameter [RegistrationFactory.newRegistrationContract(address,uint256,uint256,uint256,uint256,uint256,address)._hangoutFactory]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "97e448c62e86b6d15f75e9534e3dd3ddb9ff4bc50772afb089327dcf8f8f715a",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_hangoutPhase",
            "source_mapping": {
              "start": 4817,
              "length": 18,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "newRegistrationContract",
                "source_mapping": {
                  "start": 4669,
                  "length": 371,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "RegistrationFactory",
                    "source_mapping": {
                      "start": 4634,
                      "length": 413,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "newRegistrationContract(address,uint256,uint256,uint256,uint256,uint256,address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter RegistrationFactory.newRegistrationContract(address,uint256,uint256,uint256,uint256,uint256,address)._hangoutPhase () is not in mixedCase\n",
        "markdown": "Parameter [RegistrationFactory.newRegistrationContract(address,uint256,uint256,uint256,uint256,uint256,address)._hangoutPhase]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "9aa142bac7cbf91bb0bb3ed1dbc998d1e439037580f3ad6c90ba990f82bba699",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_proofOfIndividuality",
            "source_mapping": {
              "start": 4702,
              "length": 29,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "newRegistrationContract",
                "source_mapping": {
                  "start": 4669,
                  "length": 371,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "RegistrationFactory",
                    "source_mapping": {
                      "start": 4634,
                      "length": 413,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "newRegistrationContract(address,uint256,uint256,uint256,uint256,uint256,address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter RegistrationFactory.newRegistrationContract(address,uint256,uint256,uint256,uint256,uint256,address)._proofOfIndividuality () is not in mixedCase\n",
        "markdown": "Parameter [RegistrationFactory.newRegistrationContract(address,uint256,uint256,uint256,uint256,uint256,address)._proofOfIndividuality]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "9ef91f8c7950c4f48af1b39ca142d131e1f5464f82558f558b7bcf060a0a0120",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_groupSize",
            "source_mapping": {
              "start": 4733,
              "length": 15,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "newRegistrationContract",
                "source_mapping": {
                  "start": 4669,
                  "length": 371,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "RegistrationFactory",
                    "source_mapping": {
                      "start": 4634,
                      "length": 413,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "newRegistrationContract(address,uint256,uint256,uint256,uint256,uint256,address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter RegistrationFactory.newRegistrationContract(address,uint256,uint256,uint256,uint256,uint256,address)._groupSize () is not in mixedCase\n",
        "markdown": "Parameter [RegistrationFactory.newRegistrationContract(address,uint256,uint256,uint256,uint256,uint256,address)._groupSize]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "d83e85c675e5d2a5cd1201a3466a7bcc8c0a6704e7e4da40ff71605ae48e0c0a",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "maxHash",
            "source_mapping": {
              "start": 931,
              "length": 84,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Registration",
                "source_mapping": {
                  "start": 383,
                  "length": 4249,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "Registration.maxHash () should be constant \n",
        "markdown": "[Registration.maxHash]() should be constant \n",
        "first_markdown_element": "",
        "id": "2f061b460ed0dff803911f34f2e72c5da798cce1323ef97f3894b54b2a0a7219",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "newHangoutContract",
            "source_mapping": {
              "start": 229,
              "length": 150,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "HangoutFactory",
                "source_mapping": {
                  "start": 203,
                  "length": 178,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "newHangoutContract(address[],address,uint256,bytes32)"
            }
          }
        ],
        "description": "newHangoutContract(address[],address,uint256,bytes32) should be declared external:\n\t- HangoutFactory.newHangoutContract(address[],address,uint256,bytes32) ()\n",
        "markdown": "newHangoutContract(address[],address,uint256,bytes32) should be declared external:\n\t- [HangoutFactory.newHangoutContract(address[],address,uint256,bytes32)]()\n",
        "first_markdown_element": "",
        "id": "0b05162ccefa8786fc8402561ac3da8fede7efcd3f900dbf44fa035069bb5036",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "submitVerifiedUsers",
            "source_mapping": {
              "start": 142,
              "length": 57,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ProofOfIndividuality",
                "source_mapping": {
                  "start": 110,
                  "length": 91,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "submitVerifiedUsers(address[])"
            }
          }
        ],
        "description": "submitVerifiedUsers(address[]) should be declared external:\n\t- ProofOfIndividuality.submitVerifiedUsers(address[]) ()\n",
        "markdown": "submitVerifiedUsers(address[]) should be declared external:\n\t- [ProofOfIndividuality.submitVerifiedUsers(address[])]()\n",
        "first_markdown_element": "",
        "id": "17d51f7ae29b367bd994ef75e8086570cf609586e9a3e4be08951222c6dbbe75",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "submitVerifiedUsers",
            "source_mapping": {
              "start": 4414,
              "length": 215,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Registration",
                "source_mapping": {
                  "start": 383,
                  "length": 4249,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "submitVerifiedUsers(address[])"
            }
          }
        ],
        "description": "submitVerifiedUsers(address[]) should be declared external:\n\t- Registration.submitVerifiedUsers(address[]) ()\n",
        "markdown": "submitVerifiedUsers(address[]) should be declared external:\n\t- [Registration.submitVerifiedUsers(address[])]()\n",
        "first_markdown_element": "",
        "id": "ef705da28f57911f96a6dfec9da3d3d51d661a9fae2958abea4fa0ed1935e67d",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      }
    ]
  }
}