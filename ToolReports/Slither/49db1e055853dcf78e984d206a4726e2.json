{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "variable",
            "name": "OAR",
            "source_mapping": {
              "start": 2667,
              "length": 25,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "function",
            "name": "getMinBetAmount",
            "source_mapping": {
              "start": 19268,
              "length": 213,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "getMinBetAmount()"
            }
          },
          {
            "type": "function",
            "name": "getMaxBetAmount",
            "source_mapping": {
              "start": 19487,
              "length": 307,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "getMaxBetAmount()"
            }
          },
          {
            "type": "function",
            "name": "bet",
            "source_mapping": {
              "start": 23624,
              "length": 1171,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "bet()"
            }
          }
        ],
        "description": "usingOraclize.OAR () is never initialized. It is used in:\n\t- Dice.getMinBetAmount() ()\n\t- Dice.getMaxBetAmount() ()\n\t- Dice.bet() ()\n",
        "markdown": "[usingOraclize.OAR]() is never initialized. It is used in:\n\t- [Dice.getMinBetAmount()]()\n\t- [Dice.getMaxBetAmount()]()\n\t- [Dice.bet()]()\n",
        "first_markdown_element": "",
        "id": "69bb9ff51fec2ed0d940fce08f6ca84fc08ee3a4784a20372a77399563368eb6",
        "check": "uninitialized-state",
        "impact": "High",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "proposedWithdrawal",
            "source_mapping": {
              "start": 13615,
              "length": 44,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "Dice.proposedWithdrawal () is never initialized. It is used in:\n",
        "markdown": "[Dice.proposedWithdrawal]() is never initialized. It is used in:\n",
        "first_markdown_element": "",
        "id": "b362e754926a0867d17e0274896c83520795852ab6d40907498a4d9712edb2a5",
        "check": "uninitialized-state",
        "impact": "High",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "getCodeSize",
            "source_mapping": {
              "start": 7614,
              "length": 150,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "getCodeSize(address)"
            }
          }
        ],
        "description": "usingOraclize.getCodeSize(address) () is declared view but contains assembly code\n",
        "markdown": "[usingOraclize.getCodeSize(address)]() is declared view but contains assembly code\n",
        "first_markdown_element": "",
        "id": "16bc519b263fbe20f07d3e662621a5f73c505ffdf6a9ef4970d71f70faa21ef0",
        "additional_fields": {
          "contains_assembly": true
        },
        "check": "constant-function-asm",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "copyInvested",
            "source_mapping": {
              "start": 22412,
              "length": 18,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "profitDistribution",
                "source_mapping": {
                  "start": 22320,
                  "length": 1201,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Dice",
                    "source_mapping": {
                      "start": 12249,
                      "length": 19991,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "profitDistribution()"
                }
              }
            }
          }
        ],
        "description": "Dice.profitDistribution().copyInvested () is a local variable never initialized\n",
        "markdown": "[Dice.profitDistribution().copyInvested]() is a local variable never initialized\n",
        "first_markdown_element": "",
        "id": "fc58466e1c356246924fa712a8355debfcc05e856fa946f6d93c1473f8d5948f",
        "check": "uninitialized-local",
        "impact": "Medium",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "invested",
            "source_mapping": {
              "start": 20306,
              "length": 70,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "getBalance",
                "source_mapping": {
                  "start": 20210,
                  "length": 498,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Dice",
                    "source_mapping": {
                      "start": 12249,
                      "length": 19991,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "getBalance(address)"
                }
              }
            }
          },
          {
            "type": "variable",
            "name": "invested",
            "source_mapping": {
              "start": 13497,
              "length": 24,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "Dice.getBalance(address).invested () shadows:\n\t- Dice.invested () (state variable)\n",
        "markdown": "[Dice.getBalance(address).invested]() shadows:\n\t- [Dice.invested]() (state variable)\n",
        "first_markdown_element": "",
        "id": "65972cde9552807a3363b1c71d1172a313c9b5d270218e514f0645f4949368ae",
        "check": "shadowing-local",
        "impact": "Low",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "onlyLosingBets",
            "source_mapping": {
              "start": 16989,
              "length": 115,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "onlyLosingBets(uint256)"
            }
          }
        ],
        "description": "Modifier Dice.onlyLosingBets(uint256) () does not always execute _; or revert",
        "markdown": "Modifier [Dice.onlyLosingBets(uint256)]() does not always execute _; or revert",
        "first_markdown_element": "",
        "id": "157afee3862968618a0fdec38ed02cc41874686e453ddbae52bc33f99a6dfa7a",
        "check": "incorrect-modifier",
        "impact": "Low",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "onlyIfProfitNotDistributed",
            "source_mapping": {
              "start": 17215,
              "length": 102,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "onlyIfProfitNotDistributed()"
            }
          }
        ],
        "description": "Modifier Dice.onlyIfProfitNotDistributed() () does not always execute _; or revert",
        "markdown": "Modifier [Dice.onlyIfProfitNotDistributed()]() does not always execute _; or revert",
        "first_markdown_element": "",
        "id": "542c05f1f80a63435d30bfaa589dadc321faeeaac5e804210370e6dc9f9fc5e5",
        "check": "incorrect-modifier",
        "impact": "Low",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "onlyWinningBets",
            "source_mapping": {
              "start": 16868,
              "length": 115,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "onlyWinningBets(uint256)"
            }
          }
        ],
        "description": "Modifier Dice.onlyWinningBets(uint256) () does not always execute _; or revert",
        "markdown": "Modifier [Dice.onlyWinningBets(uint256)]() does not always execute _; or revert",
        "first_markdown_element": "",
        "id": "a6cb1776305b9ea5fa3e9d93262d6cb6f12df06ad3299420e8cc6ff6a60d78bd",
        "check": "incorrect-modifier",
        "impact": "Low",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "onlyIfBetSizeIsStillCorrect",
            "source_mapping": {
              "start": 16084,
              "length": 406,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "onlyIfBetSizeIsStillCorrect(bytes32)"
            }
          }
        ],
        "description": "Modifier Dice.onlyIfBetSizeIsStillCorrect(bytes32) () does not always execute _; or revert",
        "markdown": "Modifier [Dice.onlyIfBetSizeIsStillCorrect(bytes32)]() does not always execute _; or revert",
        "first_markdown_element": "",
        "id": "ab56984fc6a3e22f31f2eeef1b30d59f85ca41b91ae8c6d76a1c27d6d6096f0f",
        "check": "incorrect-modifier",
        "impact": "Low",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "bet",
            "source_mapping": {
              "start": 23624,
              "length": 1171,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "bet()"
            }
          },
          {
            "type": "node",
            "name": "oraclizeFee = OraclizeI(OAR.getAddress()).getPrice(URL,ORACLIZE_GAS_LIMIT + safeGas)",
            "source_mapping": {
              "start": 23691,
              "length": 92,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "bet",
                "source_mapping": {
                  "start": 23624,
                  "length": 1171,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Dice",
                    "source_mapping": {
                      "start": 12249,
                      "length": 19991,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "bet()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "oraclizeFee = OraclizeI(OAR.getAddress()).getPrice(URL,ORACLIZE_GAS_LIMIT + safeGas)",
            "source_mapping": {
              "start": 23691,
              "length": 92,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "bet",
                "source_mapping": {
                  "start": 23624,
                  "length": 1171,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Dice",
                    "source_mapping": {
                      "start": 12249,
                      "length": 19991,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "bet()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls_sending_eth"
            }
          },
          {
            "type": "node",
            "name": "bets[myid] = Bet(msg.sender,betValue,0)",
            "source_mapping": {
              "start": 24660,
              "length": 41,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "bet",
                "source_mapping": {
                  "start": 23624,
                  "length": 1171,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Dice",
                    "source_mapping": {
                      "start": 12249,
                      "length": 19991,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "bet()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "bets"
            }
          },
          {
            "type": "node",
            "name": "betsKeys.push(myid)",
            "source_mapping": {
              "start": 24715,
              "length": 19,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "bet",
                "source_mapping": {
                  "start": 23624,
                  "length": 1171,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Dice",
                    "source_mapping": {
                      "start": 12249,
                      "length": 19991,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "bet()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "variables_written",
              "variable_name": "betsKeys"
            }
          }
        ],
        "description": "Reentrancy in Dice.bet() ():\n\tExternal calls:\n\t- oraclizeFee = OraclizeI(OAR.getAddress()).getPrice(URL,ORACLIZE_GAS_LIMIT + safeGas) ()\n\tState variables written after the call(s):\n\t- bets[myid] = Bet(msg.sender,betValue,0) ()\n\t- betsKeys.push(myid) ()\n",
        "markdown": "Reentrancy in [Dice.bet()]():\n\tExternal calls:\n\t- [oraclizeFee = OraclizeI(OAR.getAddress()).getPrice(URL,ORACLIZE_GAS_LIMIT + safeGas)]()\n\tState variables written after the call(s):\n\t- [bets[myid] = Bet(msg.sender,betValue,0)]()\n\t- [betsKeys.push(myid)]()\n",
        "first_markdown_element": "",
        "id": "3fa14a39b9405e6551230d7a5181b6c2574390a035ecb1b6d7812af2524e0247",
        "check": "reentrancy-benign",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "safeSend",
            "source_mapping": {
              "start": 21409,
              "length": 616,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "safeSend(address,uint256)"
            }
          },
          {
            "type": "node",
            "name": "! (addr.call.gas(safeGas).value(value)())",
            "source_mapping": {
              "start": 21669,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "safeSend",
                "source_mapping": {
                  "start": 21409,
                  "length": 616,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Dice",
                    "source_mapping": {
                      "start": 12249,
                      "length": 19991,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "safeSend(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "! (houseAddress.call.gas(safeGas).value(value)())",
            "source_mapping": {
              "start": 21868,
              "length": 48,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "safeSend",
                "source_mapping": {
                  "start": 21409,
                  "length": 616,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Dice",
                    "source_mapping": {
                      "start": 12249,
                      "length": 19991,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "safeSend(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "LOG_SuccessfulSend(addr,value)",
            "source_mapping": {
              "start": 21988,
              "length": 30,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "safeSend",
                "source_mapping": {
                  "start": 21409,
                  "length": 616,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Dice",
                    "source_mapping": {
                      "start": 12249,
                      "length": 19991,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "safeSend(address,uint256)"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          }
        ],
        "description": "Reentrancy in Dice.safeSend(address,uint256) ():\n\tExternal calls:\n\t- ! (addr.call.gas(safeGas).value(value)()) ()\n\t- ! (houseAddress.call.gas(safeGas).value(value)()) ()\n\tEvent emitted after the call(s):\n\t- LOG_SuccessfulSend(addr,value) ()\n",
        "markdown": "Reentrancy in [Dice.safeSend(address,uint256)]():\n\tExternal calls:\n\t- [! (addr.call.gas(safeGas).value(value)())]()\n\t- [! (houseAddress.call.gas(safeGas).value(value)())]()\n\tEvent emitted after the call(s):\n\t- [LOG_SuccessfulSend(addr,value)]()\n",
        "first_markdown_element": "",
        "id": "42dffb0d4fba09e1a0a07d30e2f97ab5438c0daa4760b07b214a6be42423b02d",
        "check": "reentrancy-events",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "bet",
            "source_mapping": {
              "start": 23624,
              "length": 1171,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "bet()"
            }
          },
          {
            "type": "node",
            "name": "oraclizeFee = OraclizeI(OAR.getAddress()).getPrice(URL,ORACLIZE_GAS_LIMIT + safeGas)",
            "source_mapping": {
              "start": 23691,
              "length": 92,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "bet",
                "source_mapping": {
                  "start": 23624,
                  "length": 1171,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Dice",
                    "source_mapping": {
                      "start": 12249,
                      "length": 19991,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "bet()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "LOG_NewBet(msg.sender,betValue)",
            "source_mapping": {
              "start": 24015,
              "length": 32,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "bet",
                "source_mapping": {
                  "start": 23624,
                  "length": 1171,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Dice",
                    "source_mapping": {
                      "start": 12249,
                      "length": 19991,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "bet()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          }
        ],
        "description": "Reentrancy in Dice.bet() ():\n\tExternal calls:\n\t- oraclizeFee = OraclizeI(OAR.getAddress()).getPrice(URL,ORACLIZE_GAS_LIMIT + safeGas) ()\n\tEvent emitted after the call(s):\n\t- LOG_NewBet(msg.sender,betValue) ()\n",
        "markdown": "Reentrancy in [Dice.bet()]():\n\tExternal calls:\n\t- [oraclizeFee = OraclizeI(OAR.getAddress()).getPrice(URL,ORACLIZE_GAS_LIMIT + safeGas)]()\n\tEvent emitted after the call(s):\n\t- [LOG_NewBet(msg.sender,betValue)]()\n",
        "first_markdown_element": "",
        "id": "89f4ae867839eebc1188d436547cd56012a57eebd311951ce3d00259e9802ee4",
        "check": "reentrancy-events",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "getCodeSize",
            "source_mapping": {
              "start": 7614,
              "length": 150,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "getCodeSize(address)"
            }
          },
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 7698,
              "length": 66,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "getCodeSize",
                "source_mapping": {
                  "start": 7614,
                  "length": 150,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2186,
                      "length": 10042,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "getCodeSize(address)"
                }
              }
            }
          }
        ],
        "description": "usingOraclize.getCodeSize(address) () uses assembly\n\t- INLINE ASM ()\n",
        "markdown": "[usingOraclize.getCodeSize(address)]() uses assembly\n\t- [INLINE ASM]()\n",
        "first_markdown_element": "",
        "id": "7e5d41f62c2c212a13753087718c1c83601b562dbe02a125ed1b6cadeb32d75a",
        "check": "assembly",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "strConcat",
            "source_mapping": {
              "start": 9832,
              "length": 817,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "strConcat(string,string,string,string,string)"
            }
          }
        ],
        "description": "usingOraclize.strConcat(string,string,string,string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.strConcat(string,string,string,string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "02bccda8823598fc34194f454dae3f280b9461d6ec1ba6f8bc0616de61155d89",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_getPrice",
            "source_mapping": {
              "start": 4075,
              "length": 159,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_getPrice(string,uint256)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_getPrice(string,uint256) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_getPrice(string,uint256)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "0a426fe4087471cc79e04f61e78dbd2be460b7fba9c246ac05c58d6b9717054f",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "uint2str",
            "source_mapping": {
              "start": 11816,
              "length": 399,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "uint2str(uint256)"
            }
          }
        ],
        "description": "usingOraclize.uint2str(uint256) () is never used and should be removed\n",
        "markdown": "[usingOraclize.uint2str(uint256)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "2d8122f378a2a4ab25e5f21214afd3bb0874d1cfab7d0c2c5729ca3f4ac6b40a",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 6733,
              "length": 378,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string,string,uint256)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(string,string,string,uint256) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_query(string,string,string,uint256)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "3a9ba80ddeeb41d7a063a72b2f54747b5c14c4b956a07721cbdd12f9399d0a64",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 5636,
              "length": 328,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string,string)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(string,string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_query(string,string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "40054756700f3045af800052736c1eee7232bb1485a66df3a6b8e58c259923e3",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "parseAddr",
            "source_mapping": {
              "start": 7771,
              "length": 590,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "parseAddr(string)"
            }
          }
        ],
        "description": "usingOraclize.parseAddr(string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.parseAddr(string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "4f626564b7e2b022bb1b91377e45cc01a4e7443ae60b2d0c0f0c4c6eb4061c30",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_setCustomGasPrice",
            "source_mapping": {
              "start": 7352,
              "length": 132,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_setCustomGasPrice(uint256)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_setCustomGasPrice(uint256) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_setCustomGasPrice(uint256)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "52f7a269a49b51da4eb16aeee255edd439016e5dcd357aace3abf49037e1e236",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "strConcat",
            "source_mapping": {
              "start": 10659,
              "length": 142,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "strConcat(string,string,string,string)"
            }
          }
        ],
        "description": "usingOraclize.strConcat(string,string,string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.strConcat(string,string,string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "624828dc68f34e0da8911b149b7f75362984c7b83bc6efde9be2137df284241b",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 4555,
              "length": 330,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(uint256,string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_query(uint256,string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "6c078a52d1b31d3bdf41c2f4fef697ea3c6f94dbbd022b75ef571ccdd4268d3e",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 5969,
              "length": 352,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string,string)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(uint256,string,string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_query(uint256,string,string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "6ff97cc5c8f08858e86abc1fd46209a6b609be89e5760dffa980d63f4bba636c",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_setNetwork",
            "source_mapping": {
              "start": 3018,
              "length": 720,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_setNetwork(uint8)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_setNetwork(uint8) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_setNetwork(uint8)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "71bc846106ab8cdbe190375a16f189c7317889e6c4ee430e35f7d19d0a0d1638",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 4890,
              "length": 380,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string,uint256)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(uint256,string,string,uint256) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_query(uint256,string,string,uint256)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "73e029d68cda46f97a1509bb8791a3e962d126ff11e225a745f44dcb125e2134",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 4244,
              "length": 306,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_query(string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "76e2c7b0dd1c26753359bd31ebd36f8d2ff3d5e7e2f1b2911e2c738f8aa48dc5",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "strConcat",
            "source_mapping": {
              "start": 10944,
              "length": 120,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "strConcat(string,string)"
            }
          }
        ],
        "description": "usingOraclize.strConcat(string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.strConcat(string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "8cff80c0d8ce354d63c6201689f28cc903370629959c02f442412125acb599e2",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 6326,
              "length": 402,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string,string,uint256)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_query(uint256,string,string,string,uint256) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_query(uint256,string,string,string,uint256)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "8e8132dac8e24f98880fb95bfdc5e8336a3d1e00e06329b801fbe92bf610ce5f",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "strConcat",
            "source_mapping": {
              "start": 10807,
              "length": 131,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "strConcat(string,string,string)"
            }
          }
        ],
        "description": "usingOraclize.strConcat(string,string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.strConcat(string,string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "9cbe09a4afa473093d19e2a4f281cf4cc6337f4beefabce2b567e5882ff5d104",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "strCompare",
            "source_mapping": {
              "start": 8368,
              "length": 547,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "strCompare(string,string)"
            }
          }
        ],
        "description": "usingOraclize.strCompare(string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.strCompare(string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "b03ccda235961726f89662bec71e81728ac465851316fa7a3ec2420c2ff70235",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "profitDistribution",
            "source_mapping": {
              "start": 22320,
              "length": 1201,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "profitDistribution()"
            }
          }
        ],
        "description": "Dice.profitDistribution() () is never used and should be removed\n",
        "markdown": "[Dice.profitDistribution()]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "b34c36b2ad6eb6de6d031f71cc6cf3694851fce7e42cf618dab229a682d4f82d",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "getCodeSize",
            "source_mapping": {
              "start": 7614,
              "length": 150,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "getCodeSize(address)"
            }
          }
        ],
        "description": "usingOraclize.getCodeSize(address) () is never used and should be removed\n",
        "markdown": "[usingOraclize.getCodeSize(address)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "b825803b960373f2e8912d1d336564ccc855f550c19ad4e47142f317de53f3fe",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "addInvestorAtID",
            "source_mapping": {
              "start": 22031,
              "length": 283,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "addInvestorAtID(uint256)"
            }
          }
        ],
        "description": "Dice.addInvestorAtID(uint256) () is never used and should be removed\n",
        "markdown": "[Dice.addInvestorAtID(uint256)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "bcdb18d52ce8471e5210de66dc883b537ace2f5f5a04cdd0fdfae0e59c09254a",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "parseInt",
            "source_mapping": {
              "start": 11218,
              "length": 588,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "parseInt(string,uint256)"
            }
          }
        ],
        "description": "usingOraclize.parseInt(string,uint256) () is never used and should be removed\n",
        "markdown": "[usingOraclize.parseInt(string,uint256)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "d014d920fa364f18bec2bf3edbc85702a0f8255985c3a67fe21ca51e630a6f11",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "indexOf",
            "source_mapping": {
              "start": 8922,
              "length": 904,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "indexOf(string,string)"
            }
          }
        ],
        "description": "usingOraclize.indexOf(string,string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.indexOf(string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "d01b6f80ac7cad693f5b3e23453ca959866bbe5a177219a2a2cae02a9fd244bd",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_getPrice",
            "source_mapping": {
              "start": 3936,
              "length": 134,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_getPrice(string)"
            }
          }
        ],
        "description": "usingOraclize.oraclize_getPrice(string) () is never used and should be removed\n",
        "markdown": "[usingOraclize.oraclize_getPrice(string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "df7c66d45c20f7eff86cb6ee8fcd92fd824bcb036fa277a4292c9bb11f0a4ff6",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 21180,
              "length": 5,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeOraclizeProofType",
                "source_mapping": {
                  "start": 21077,
                  "length": 177,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Dice",
                    "source_mapping": {
                      "start": 12249,
                      "length": 19991,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeOraclizeProofType(bytes1)"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected THROW ():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "markdown": "Deprecated standard detected [THROW]():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "first_markdown_element": "",
        "id": "f5556cf1c70b64b9e4b1fc32044dd970b5f2c8b9fc21b7971fda01971033f2d5",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [],
        "description": "solc-0.4.0 is not recommended for deployment\n",
        "markdown": "solc-0.4.0 is not recommended for deployment\n",
        "first_markdown_element": "",
        "id": "e676d9e89e623fa7675baecce41eb7ab21d1d8ec9e856bc5b047e6cfb50b37ca",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "pragma",
            "name": "^0.4.0",
            "source_mapping": {
              "start": 0,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "directive": [
                "solidity",
                "^",
                "0.4",
                ".0"
              ]
            }
          }
        ],
        "description": "Pragma version^0.4.0 () allows old versions\n",
        "markdown": "Pragma version[^0.4.0]() allows old versions\n",
        "first_markdown_element": "",
        "id": "f4d0f96f990510a571c7ae954763f848d217d6f86fa5953d251f28f5221969e2",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "safeSend",
            "source_mapping": {
              "start": 21409,
              "length": 616,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "safeSend(address,uint256)"
            }
          },
          {
            "type": "node",
            "name": "! (addr.call.gas(safeGas).value(value)())",
            "source_mapping": {
              "start": 21669,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "safeSend",
                "source_mapping": {
                  "start": 21409,
                  "length": 616,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Dice",
                    "source_mapping": {
                      "start": 12249,
                      "length": 19991,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "safeSend(address,uint256)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "! (houseAddress.call.gas(safeGas).value(value)())",
            "source_mapping": {
              "start": 21868,
              "length": 48,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "safeSend",
                "source_mapping": {
                  "start": 21409,
                  "length": 616,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Dice",
                    "source_mapping": {
                      "start": 12249,
                      "length": 19991,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "safeSend(address,uint256)"
                }
              }
            }
          }
        ],
        "description": "Low level call in Dice.safeSend(address,uint256) ():\n\t- ! (addr.call.gas(safeGas).value(value)()) ()\n\t- ! (houseAddress.call.gas(safeGas).value(value)()) ()\n",
        "markdown": "Low level call in [Dice.safeSend(address,uint256)]():\n\t- [! (addr.call.gas(safeGas).value(value)())]()\n\t- [! (houseAddress.call.gas(safeGas).value(value)())]()\n",
        "first_markdown_element": "",
        "id": "2676205ec5bf04a39b835000a9f4e8891cf72043269a7e5bd43aad4addd6a550",
        "check": "low-level-calls",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "LOG_EmergencyWithdrawalVote",
            "source_mapping": {
              "start": 14846,
              "length": 63,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "LOG_EmergencyWithdrawalVote(address,bool)"
            },
            "additional_fields": {
              "target": "event",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Event Dice.LOG_EmergencyWithdrawalVote(address,bool) () is not in CapWords\n",
        "markdown": "Event [Dice.LOG_EmergencyWithdrawalVote(address,bool)]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "0217cddf6e038815d4d8b80ad756b60f9b3273a8efd457079b7a5c2743dd236e",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_c",
            "source_mapping": {
              "start": 10700,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 10659,
                  "length": 142,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2186,
                      "length": 10042,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string,string)._c () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string,string)._c]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "0297d8ce4b74ef53be4b13e445c465611fab4a270b96bc56585b1132dedbe8df",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 6733,
              "length": 378,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string,string,uint256)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_query(string,string,string,uint256) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_query(string,string,string,uint256)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "0355ac2dd878572cdf2226829ecc27b042d6b998b720514b9409d71f0fc08d01",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "LOG_EmergencyWithdrawalProposed",
            "source_mapping": {
              "start": 14046,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "LOG_EmergencyWithdrawalProposed()"
            },
            "additional_fields": {
              "target": "event",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Event Dice.LOG_EmergencyWithdrawalProposed() () is not in CapWords\n",
        "markdown": "Event [Dice.LOG_EmergencyWithdrawalProposed()]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "060641e3ef8ae019ebacbaa86f7dc9524096853d2bab7b2197c0fcb116718376",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 5636,
              "length": 328,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string,string)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_query(string,string,string) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_query(string,string,string)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "07e7db1bc757bec560c188cf286fc5a362e9c3524544eb1e30bcfcb7e33c3b67",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "LOG_HouseAddressChanged",
            "source_mapping": {
              "start": 14667,
              "length": 72,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "LOG_HouseAddressChanged(address,address)"
            },
            "additional_fields": {
              "target": "event",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Event Dice.LOG_HouseAddressChanged(address,address) () is not in CapWords\n",
        "markdown": "Event [Dice.LOG_HouseAddressChanged(address,address)]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "09b1a19ae99fb612981a96a61912fa372d99a8f503d9ec35dabc8fd5edb48d71",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 11104,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "parseInt",
                "source_mapping": {
                  "start": 11086,
                  "length": 92,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2186,
                      "length": 10042,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "parseInt(string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.parseInt(string)._a () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.parseInt(string)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "0c07075992b1ccf274de61ec04f08ec1d92841f4b25fe1deeab308ebb2a12f41",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_b",
            "source_mapping": {
              "start": 10689,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 10659,
                  "length": 142,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2186,
                      "length": 10042,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string,string)._b () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string,string)._b]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "0dd455db537396a2d830f97a84264af9e123321e1acd0908050ac8432194f452",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_consensys",
            "source_mapping": {
              "start": 2620,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable usingOraclize.networkID_consensys () is not in mixedCase\n",
        "markdown": "Variable [usingOraclize.networkID_consensys]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "0e715024833b53f1d598506398b7809786829d042e39df5d1ca755e45bf845a0",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "EMERGENCY_TIMEOUT",
            "source_mapping": {
              "start": 12972,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable Dice.EMERGENCY_TIMEOUT () is not in mixedCase\n",
        "markdown": "Variable [Dice.EMERGENCY_TIMEOUT]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "10defafc98ec7f97d2aad94af825361b83da0e9021558d347e5f60b83e744f48",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_setCustomGasPrice",
            "source_mapping": {
              "start": 7352,
              "length": 132,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_setCustomGasPrice(uint256)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_setCustomGasPrice(uint256) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_setCustomGasPrice(uint256)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "14a791f5083bd8e1ab5d29c695c6b1e035e7be7385d4a4e6cb80361fe24f4170",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 10678,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 10659,
                  "length": 142,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2186,
                      "length": 10042,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string,string)._a () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string,string)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "16572e724a6d96fbd6289a436ad4ce3c1217fd9263c9a0998cf5a09c1de685f6",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "__callback",
            "source_mapping": {
              "start": 3748,
              "length": 104,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "__callback(bytes32,string)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.__callback(bytes32,string) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.__callback(bytes32,string)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "17404c0124979738531db7fe78a033150302d5a516f3200e9d91b9ae7f2c19bc",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 4244,
              "length": 306,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_query(string,string) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_query(string,string)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "182939ac468801b45916f317f6de846e06252aaf9ad8dc907300d972141fc130",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_b",
            "source_mapping": {
              "start": 8399,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strCompare",
                "source_mapping": {
                  "start": 8368,
                  "length": 547,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2186,
                      "length": 10042,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strCompare(string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strCompare(string,string)._b () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strCompare(string,string)._b]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "203595b6031f1173a3d0859cb8782093fd630f05aa0625029cf8498533d170f2",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_config",
            "source_mapping": {
              "start": 21290,
              "length": 15,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeOraclizeConfig",
                "source_mapping": {
                  "start": 21260,
                  "length": 110,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Dice",
                    "source_mapping": {
                      "start": 12249,
                      "length": 19991,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeOraclizeConfig(bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Dice.changeOraclizeConfig(bytes32)._config () is not in mixedCase\n",
        "markdown": "Parameter [Dice.changeOraclizeConfig(bytes32)._config]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "2d68d29b0711ef8920505fdda58b3ef8baebd1a20dc3a811c3572e136a3f01dd",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_haystack",
            "source_mapping": {
              "start": 8939,
              "length": 16,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "indexOf",
                "source_mapping": {
                  "start": 8922,
                  "length": 904,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2186,
                      "length": 10042,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "indexOf(string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.indexOf(string,string)._haystack () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.indexOf(string,string)._haystack]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "2d6b306069d60ef4b6ea5e9eaca715a69b42958bb0991b818b000b298bf664da",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "LOG_InvestorEntrance",
            "source_mapping": {
              "start": 14335,
              "length": 58,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "LOG_InvestorEntrance(address,uint256)"
            },
            "additional_fields": {
              "target": "event",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Event Dice.LOG_InvestorEntrance(address,uint256) () is not in CapWords\n",
        "markdown": "Event [Dice.LOG_InvestorEntrance(address,uint256)]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "348be852bce895d3ef2416459fd60ebf61ede363e722baf434ac3b1689085061",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "LOG_ValueIsTooBig",
            "source_mapping": {
              "start": 14914,
              "length": 26,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "LOG_ValueIsTooBig()"
            },
            "additional_fields": {
              "target": "event",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Event Dice.LOG_ValueIsTooBig() () is not in CapWords\n",
        "markdown": "Event [Dice.LOG_ValueIsTooBig()]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "3882a4cc7e2cb5651e02ed0034b81939e7f4b7975b1a9ffa3ec0cc5b7ef9b173",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "LOG_GasLimitChanged",
            "source_mapping": {
              "start": 14744,
              "length": 62,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "LOG_GasLimitChanged(uint256,uint256)"
            },
            "additional_fields": {
              "target": "event",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Event Dice.LOG_GasLimitChanged(uint256,uint256) () is not in CapWords\n",
        "markdown": "Event [Dice.LOG_GasLimitChanged(uint256,uint256)]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "38c831eefbc9362847bc6c62f792a7384889f126f40d4a49877cc3aa3b3338ea",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_c",
            "source_mapping": {
              "start": 10848,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 10807,
                  "length": 131,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2186,
                      "length": 10042,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string)._c () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string)._c]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "3acd35d9eee9de104f9be3bcdc3ec0b416cb51824ba4240088dd1fec67a054fa",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "ORACLIZE_GAS_LIMIT",
            "source_mapping": {
              "start": 12879,
              "length": 41,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable Dice.ORACLIZE_GAS_LIMIT () is not in mixedCase\n",
        "markdown": "Variable [Dice.ORACLIZE_GAS_LIMIT]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "3db4f614fc47f657d3cdb4e40cf953c4713ae873d86201929e571fdd80d37720",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "OAR",
            "source_mapping": {
              "start": 2667,
              "length": 25,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable usingOraclize.OAR () is not in mixedCase\n",
        "markdown": "Variable [usingOraclize.OAR]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "3fc2652416bd0c049f5740630d4de1e63de0c95c26521cfc9ed8dc8e6aaf1027",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_e",
            "source_mapping": {
              "start": 9895,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 9832,
                  "length": 817,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2186,
                      "length": 10042,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string,string,string)._e () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string,string,string)._e]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "40419806dcca834fc51223039f96e5f2ab87fdabfc1c27c2b417d8d633027c26",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "usingOraclize",
            "source_mapping": {
              "start": 2186,
              "length": 10042,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "additional_fields": {
              "target": "contract",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Contract usingOraclize () is not in CapWords\n",
        "markdown": "Contract [usingOraclize]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "420b57e2612bc5bf3c105a488ede65d39993bf5272cace9e472f2bd7c6832eca",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "INVALID_BET_MARKER",
            "source_mapping": {
              "start": 12926,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable Dice.INVALID_BET_MARKER () is not in mixedCase\n",
        "markdown": "Variable [Dice.INVALID_BET_MARKER]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "435ba67657e7fedccb05638ba9a526ba83b86d5f25553497bcb48bbfb6deeaaa",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 6326,
              "length": 402,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string,string,uint256)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_query(uint256,string,string,string,uint256) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_query(uint256,string,string,string,uint256)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "468a7e3fc0d5f78ef5b0d51e3525435c587be2eaed8120b52809984804c195bb",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "LOG_BetLost",
            "source_mapping": {
              "start": 13981,
              "length": 60,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "LOG_BetLost(address,uint256)"
            },
            "additional_fields": {
              "target": "event",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Event Dice.LOG_BetLost(address,uint256) () is not in CapWords\n",
        "markdown": "Event [Dice.LOG_BetLost(address,uint256)]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "4986f6c568112db9b33a4f056f06ac713f360e1e8919606aad59a9327db394df",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_cbAddress",
            "source_mapping": {
              "start": 7116,
              "length": 112,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_cbAddress()"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_cbAddress() () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_cbAddress()]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "4b7e075f75a6c475fa1820455abef59bd0fefa72209045aa977070b4a1d0af6d",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 11236,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "parseInt",
                "source_mapping": {
                  "start": 11218,
                  "length": 588,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2186,
                      "length": 10042,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "parseInt(string,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.parseInt(string,uint256)._a () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.parseInt(string,uint256)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "5251d60a38eed6f14a390b9f471bf8a3ce3e4f3be2b8e0487cb4926fa9b12806",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 10963,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 10944,
                  "length": 120,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2186,
                      "length": 10042,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string)._a () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "5a798c8f8de8de5cc0e8db621e5d802e697874d964514db55ffe4138b8c1b58f",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_proofType",
            "source_mapping": {
              "start": 21110,
              "length": 15,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeOraclizeProofType",
                "source_mapping": {
                  "start": 21077,
                  "length": 177,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Dice",
                    "source_mapping": {
                      "start": 12249,
                      "length": 19991,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeOraclizeProofType(bytes1)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Dice.changeOraclizeProofType(bytes1)._proofType () is not in mixedCase\n",
        "markdown": "Parameter [Dice.changeOraclizeProofType(bytes1)._proofType]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "630ce668a317eac04a87b144b82694ec01b008c4dbf1617d0d408c7be847fc38",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_testnet",
            "source_mapping": {
              "start": 2537,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable usingOraclize.networkID_testnet () is not in mixedCase\n",
        "markdown": "Variable [usingOraclize.networkID_testnet]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "63fb3c93545f9e715e601e21ba6494c2da12407209f0519a762435ad2024ca0e",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_getPrice",
            "source_mapping": {
              "start": 4075,
              "length": 159,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_getPrice(string,uint256)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_getPrice(string,uint256) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_getPrice(string,uint256)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "691b9c31ec4e1adf893cd34e4647a9a43827786e591ed9013854f11e09994ef8",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_b",
            "source_mapping": {
              "start": 11247,
              "length": 7,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "parseInt",
                "source_mapping": {
                  "start": 11218,
                  "length": 588,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2186,
                      "length": 10042,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "parseInt(string,uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.parseInt(string,uint256)._b () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.parseInt(string,uint256)._b]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "691c3ef346af826a974d5e7a1cc853c05c5293f315ab116e46e4162161238b71",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_setNetwork",
            "source_mapping": {
              "start": 3018,
              "length": 720,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_setNetwork(uint8)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_setNetwork(uint8) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_setNetwork(uint8)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "6a7015444ddf266441dc7d33dcf6b5d6c550d73f30747262d959e7298d94fec2",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "LOG_ContractResumed",
            "source_mapping": {
              "start": 14557,
              "length": 28,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "LOG_ContractResumed()"
            },
            "additional_fields": {
              "target": "event",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Event Dice.LOG_ContractResumed() () is not in CapWords\n",
        "markdown": "Event [Dice.LOG_ContractResumed()]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "6f3ed9411231565e64304f1f8d3fc5765c620a58991bff315dca696b365147bb",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 4890,
              "length": 380,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string,uint256)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_query(uint256,string,string,uint256) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_query(uint256,string,string,uint256)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "6f78239649f465ee938014355116cc751940f47be305cba5227682499e2819f1",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 5969,
              "length": 352,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string,string)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_query(uint256,string,string,string) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_query(uint256,string,string,string)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "76cae6b4617bf837d03a7cbfa6721bd925b8b5ce6ee4380e9e77e50a14248d3e",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "query_withGasLimit",
            "source_mapping": {
              "start": 1390,
              "length": 124,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "OraclizeI",
                "source_mapping": {
                  "start": 1235,
                  "length": 864,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "query_withGasLimit(uint256,string,string,uint256)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function OraclizeI.query_withGasLimit(uint256,string,string,uint256) () is not in mixedCase\n",
        "markdown": "Function [OraclizeI.query_withGasLimit(uint256,string,string,uint256)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "76f8bb2829d7132eb11f5b0132b332152a63a76c64cbe7b4ebce8eb15341fed0",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 8388,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strCompare",
                "source_mapping": {
                  "start": 8368,
                  "length": 547,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2186,
                      "length": 10042,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strCompare(string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strCompare(string,string)._a () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strCompare(string,string)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "7c3aae1671f76dcdfd21f3a38d40994536117979a5756e1689676f223337d350",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "LOG_FailedSend",
            "source_mapping": {
              "start": 14252,
              "length": 52,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "LOG_FailedSend(address,uint256)"
            },
            "additional_fields": {
              "target": "event",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Event Dice.LOG_FailedSend(address,uint256) () is not in CapWords\n",
        "markdown": "Event [Dice.LOG_FailedSend(address,uint256)]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "7d69a5b5e9f097f08227dcb372e54e3f83bda1190f0538c30f014cccf1727bc4",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 5275,
              "length": 356,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string,uint256)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_query(string,string,uint256) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_query(string,string,uint256)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "88daeed5c2be5e554d5fceece5daeb6dce6cbe53eba64f6fc4a9b78df5938482",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 7790,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "parseAddr",
                "source_mapping": {
                  "start": 7771,
                  "length": 590,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2186,
                      "length": 10042,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "parseAddr(string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.parseAddr(string)._a () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.parseAddr(string)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "88e01c1e054b5490854c09029663704da156e5a3de882a95ddf5d0741e963d37",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "LOG_InvestorExit",
            "source_mapping": {
              "start": 14465,
              "length": 54,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "LOG_InvestorExit(address,uint256)"
            },
            "additional_fields": {
              "target": "event",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Event Dice.LOG_InvestorExit(address,uint256) () is not in CapWords\n",
        "markdown": "Event [Dice.LOG_InvestorExit(address,uint256)]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "8951fe7451b29bdf0d4239a1943e94017b7ccb2f3a9041238601532897586dbc",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_b",
            "source_mapping": {
              "start": 9862,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 9832,
                  "length": 817,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2186,
                      "length": 10042,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string,string,string)._b () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string,string,string)._b]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "8ace4331b3043dcc6e28044be3541f13ca8f8c4e523e055236484e2f5bb2a614",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "query2_withGasLimit",
            "source_mapping": {
              "start": 1635,
              "length": 140,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "OraclizeI",
                "source_mapping": {
                  "start": 1235,
                  "length": 864,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "query2_withGasLimit(uint256,string,string,string,uint256)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function OraclizeI.query2_withGasLimit(uint256,string,string,string,uint256) () is not in mixedCase\n",
        "markdown": "Function [OraclizeI.query2_withGasLimit(uint256,string,string,string,uint256)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "8cab8387bbfe5ecbbdafb85915d067ccab5a541511da64de538c6a0dbf0b507b",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "LOG_BetWon",
            "source_mapping": {
              "start": 13901,
              "length": 75,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "LOG_BetWon(address,uint256,uint256)"
            },
            "additional_fields": {
              "target": "event",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Event Dice.LOG_BetWon(address,uint256,uint256) () is not in CapWords\n",
        "markdown": "Event [Dice.LOG_BetWon(address,uint256,uint256)]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "8f1287caf5826f235a91cb4eec62b322c0b7f906de3804c1a5dadb123a4ff1dc",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "LOG_NewBet",
            "source_mapping": {
              "start": 13843,
              "length": 53,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "LOG_NewBet(address,uint256)"
            },
            "additional_fields": {
              "target": "event",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Event Dice.LOG_NewBet(address,uint256) () is not in CapWords\n",
        "markdown": "Event [Dice.LOG_NewBet(address,uint256)]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "93c69141a3acaa51a60f1f8edbe963dfb8e34f63e0b1683fd2f9fc0ad7737553",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_c",
            "source_mapping": {
              "start": 9873,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 9832,
                  "length": 817,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2186,
                      "length": 10042,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string,string,string)._c () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string,string,string)._c]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "94c6eea5f0b161bd7e7c39e6a2da006de24c9ee4220b1d66c23235001f800d7c",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "LOG_ZeroSend",
            "source_mapping": {
              "start": 14309,
              "length": 21,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "LOG_ZeroSend()"
            },
            "additional_fields": {
              "target": "event",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Event Dice.LOG_ZeroSend() () is not in CapWords\n",
        "markdown": "Event [Dice.LOG_ZeroSend()]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "9646cd91100fc5c0a8096ed478394e7f623f51ce93c87bdcf43c5073ac05c18b",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_d",
            "source_mapping": {
              "start": 10711,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 10659,
                  "length": 142,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2186,
                      "length": 10042,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string,string)._d () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string,string)._d]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "99ddd30a64dabc8213a5985828854bfe856140e3ad9b8cae48d379ccdd934f12",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "LOG_EmergencyWithdrawalFailed",
            "source_mapping": {
              "start": 14091,
              "length": 63,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "LOG_EmergencyWithdrawalFailed(address)"
            },
            "additional_fields": {
              "target": "event",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Event Dice.LOG_EmergencyWithdrawalFailed(address) () is not in CapWords\n",
        "markdown": "Event [Dice.LOG_EmergencyWithdrawalFailed(address)]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "99f9cd6190cc13d1ee1d31a15bccbd8519d5af02541a45d406b35b050c19a788",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_needle",
            "source_mapping": {
              "start": 8957,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "indexOf",
                "source_mapping": {
                  "start": 8922,
                  "length": 904,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2186,
                      "length": 10042,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "indexOf(string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.indexOf(string,string)._needle () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.indexOf(string,string)._needle]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "9d394dc0a86e7071c94eacba676655a265fb490bc0d7d035f22b041e4b8aac37",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_mainnet",
            "source_mapping": {
              "start": 2495,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable usingOraclize.networkID_mainnet () is not in mixedCase\n",
        "markdown": "Variable [usingOraclize.networkID_mainnet]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "a1c752d2b791ecf5d79750abcafeafee2b3ec17b74e7d2f8f568ba1fecf3b470",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 9851,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 9832,
                  "length": 817,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2186,
                      "length": 10042,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string,string,string)._a () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string,string,string)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "a79f70421fd937a6f1b016585faf8a3e7d1cf90ca2cb10f32e7cb4028828cfd5",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 10826,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 10807,
                  "length": 131,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2186,
                      "length": 10042,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string)._a () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "a841a03f172f3e2af7381284d79eeeb4a536a35b9e7d7ca85e9b4ce99d0d31c3",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_auto",
            "source_mapping": {
              "start": 2456,
              "length": 33,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable usingOraclize.networkID_auto () is not in mixedCase\n",
        "markdown": "Variable [usingOraclize.networkID_auto]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "ab19cbfcd051281f084ba84892ce605cc50efa56b3ce36f68a664e91e9fe76d0",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "LOG_ContractStopped",
            "source_mapping": {
              "start": 14524,
              "length": 28,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "LOG_ContractStopped()"
            },
            "additional_fields": {
              "target": "event",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Event Dice.LOG_ContractStopped() () is not in CapWords\n",
        "markdown": "Event [Dice.LOG_ContractStopped()]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "b6d6fcdef34ee112784a8b8fa66e1ba92989f27a38522be11d52349cb9bc4ba6",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "__callback",
            "source_mapping": {
              "start": 3857,
              "length": 69,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "__callback(bytes32,string,bytes)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.__callback(bytes32,string,bytes) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.__callback(bytes32,string,bytes)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "bb9905f26f90e9da5aed3b7399cce373f717a230341ccb1c9fe6ed5b527dac10",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 4555,
              "length": 330,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_query(uint256,string,string) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_query(uint256,string,string)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "c0060136ce3d791852cebe29dbe67435cbfc99ec46c8bf938389d10317130152",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_b",
            "source_mapping": {
              "start": 10974,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 10944,
                  "length": 120,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2186,
                      "length": 10042,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string)._b () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string)._b]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "c96709e63500a426719bf2ab31063a69d7fbbeffab63d11d0100a0e2b2102d15",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "LOG_OwnerAddressChanged",
            "source_mapping": {
              "start": 14590,
              "length": 72,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "LOG_OwnerAddressChanged(address,address)"
            },
            "additional_fields": {
              "target": "event",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Event Dice.LOG_OwnerAddressChanged(address,address) () is not in CapWords\n",
        "markdown": "Event [Dice.LOG_OwnerAddressChanged(address,address)]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "ca511e073206834bb950d07415a9980235205f5f2d7ba6b835abe5cb719ba20a",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "LOG_EmergencyAutoStop",
            "source_mapping": {
              "start": 14811,
              "length": 30,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "LOG_EmergencyAutoStop()"
            },
            "additional_fields": {
              "target": "event",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Event Dice.LOG_EmergencyAutoStop() () is not in CapWords\n",
        "markdown": "Event [Dice.LOG_EmergencyAutoStop()]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "cb092a5630327b5c0c0503254091dd0c0bca4a4aae458a405876c2d13e50fa16",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "__callback",
            "source_mapping": {
              "start": 24801,
              "length": 457,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "__callback(bytes32,string,bytes)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function Dice.__callback(bytes32,string,bytes) () is not in mixedCase\n",
        "markdown": "Function [Dice.__callback(bytes32,string,bytes)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "cf760529d42c1ff1a128dad41bace9193ea79185eb4490fd8f3afee0216b1e8a",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "LOG_SuccessfulSend",
            "source_mapping": {
              "start": 14945,
              "length": 52,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "LOG_SuccessfulSend(address,uint256)"
            },
            "additional_fields": {
              "target": "event",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Event Dice.LOG_SuccessfulSend(address,uint256) () is not in CapWords\n",
        "markdown": "Event [Dice.LOG_SuccessfulSend(address,uint256)]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "d136dcd05912ff439840bad1012594861e5f9484d54ce791cd45c0c8565e00c6",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_getPrice",
            "source_mapping": {
              "start": 3936,
              "length": 134,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_getPrice(string)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_getPrice(string) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_getPrice(string)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "d1a5ca5593e23a8b4244aa42858608404c45af320b7024a591e76e8fb2e7acf9",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "LOG_InvestorCapitalUpdate",
            "source_mapping": {
              "start": 14398,
              "length": 62,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "LOG_InvestorCapitalUpdate(address,int256)"
            },
            "additional_fields": {
              "target": "event",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Event Dice.LOG_InvestorCapitalUpdate(address,int256) () is not in CapWords\n",
        "markdown": "Event [Dice.LOG_InvestorCapitalUpdate(address,int256)]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "d3968bee9490426a3d037f79cccd850de76238c876954f887d51ac095dc6f2b6",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_morden",
            "source_mapping": {
              "start": 2579,
              "length": 35,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable usingOraclize.networkID_morden () is not in mixedCase\n",
        "markdown": "Variable [usingOraclize.networkID_morden]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "d3c1056f7858dbe1588a1f9c65191e580356dbeb3f4aeab47bfa15b3c49b7e9f",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_setConfig",
            "source_mapping": {
              "start": 7493,
              "length": 115,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_setConfig(bytes32)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_setConfig(bytes32) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_setConfig(bytes32)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "d5396d4d7170306a67d089d86b9c17cb5571405b7a1bd812e67cb444ab1a9080",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_d",
            "source_mapping": {
              "start": 9884,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 9832,
                  "length": 817,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2186,
                      "length": 10042,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string,string,string)._d () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string,string,string)._d]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "dd68cac6d3298d27c00d9a0a1f68811c5249075d7040b96eabb090bf6355d7fe",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "oraclize_setProof",
            "source_mapping": {
              "start": 7233,
              "length": 114,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_setProof(bytes1)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function usingOraclize.oraclize_setProof(bytes1) () is not in mixedCase\n",
        "markdown": "Function [usingOraclize.oraclize_setProof(bytes1)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "e7bf812b47645de4a94a597bdce9dcd1d2c54aab92fd8da20363f972cd450eff",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_b",
            "source_mapping": {
              "start": 10837,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 10807,
                  "length": 131,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "usingOraclize",
                    "source_mapping": {
                      "start": 2186,
                      "length": 10042,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter usingOraclize.strConcat(string,string,string)._b () is not in mixedCase\n",
        "markdown": "Parameter [usingOraclize.strConcat(string,string,string)._b]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "e890df7734f8e87a83d5a32145bcbe1a16dda0ea17b3822e4a175ce140c9677d",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "proofType_TLSNotary",
            "source_mapping": {
              "start": 2366,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable usingOraclize.proofType_TLSNotary () is not in mixedCase\n",
        "markdown": "Variable [usingOraclize.proofType_TLSNotary]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "ebe49ac9795d0f19c592850e2fb1abc132bbf1890eeffb09d6e9c78c64205e06",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "proofType_NONE",
            "source_mapping": {
              "start": 2325,
              "length": 35,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable usingOraclize.proofType_NONE () is not in mixedCase\n",
        "markdown": "Variable [usingOraclize.proofType_NONE]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "ecf0ce275dc6a2ae89cbb24a52f261a4f10da5f6449bd95f869bf532541041ad",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "proofStorage_IPFS",
            "source_mapping": {
              "start": 2412,
              "length": 38,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            },
            "additional_fields": {
              "target": "variable",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Variable usingOraclize.proofStorage_IPFS () is not in mixedCase\n",
        "markdown": "Variable [usingOraclize.proofStorage_IPFS]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "f0eb69f7996b4db7aedd94e1bc049b96d4da7686f0048ab30e14165ea7a67325",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "event",
            "name": "LOG_EmergencyWithdrawalSucceeded",
            "source_mapping": {
              "start": 14159,
              "length": 88,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "LOG_EmergencyWithdrawalSucceeded(address,uint256)"
            },
            "additional_fields": {
              "target": "event",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Event Dice.LOG_EmergencyWithdrawalSucceeded(address,uint256) () is not in CapWords\n",
        "markdown": "Event [Dice.LOG_EmergencyWithdrawalSucceeded(address,uint256)]() is not in CapWords\n",
        "first_markdown_element": "",
        "id": "f4c03ea23c867c899c79bb0f5095906c040c87d9754e3f7dc49a6896a44520e3",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "Dice",
            "source_mapping": {
              "start": 12249,
              "length": 19991,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "function",
            "name": "__callback",
            "source_mapping": {
              "start": 3748,
              "length": 104,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "__callback(bytes32,string)"
            }
          },
          {
            "type": "function",
            "name": "changeGasLimitOfSafeSend",
            "source_mapping": {
              "start": 30436,
              "length": 196,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "changeGasLimitOfSafeSend(uint256)"
            }
          },
          {
            "type": "function",
            "name": "changeHouseAddress",
            "source_mapping": {
              "start": 29990,
              "length": 241,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "changeHouseAddress(address)"
            }
          },
          {
            "type": "function",
            "name": "changeOwnerAddress",
            "source_mapping": {
              "start": 30237,
              "length": 193,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "changeOwnerAddress(address)"
            }
          },
          {
            "type": "function",
            "name": "divest",
            "source_mapping": {
              "start": 27420,
              "length": 76,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "divest()"
            }
          },
          {
            "type": "function",
            "name": "divest",
            "source_mapping": {
              "start": 27503,
              "length": 1426,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "divest(address)"
            }
          },
          {
            "type": "function",
            "name": "executeEmergencyWithdrawal",
            "source_mapping": {
              "start": 31327,
              "length": 910,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "executeEmergencyWithdrawal()"
            }
          },
          {
            "type": "function",
            "name": "forceDivestOfAllInvestors",
            "source_mapping": {
              "start": 28935,
              "length": 224,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "forceDivestOfAllInvestors()"
            }
          },
          {
            "type": "function",
            "name": "forceDivestOfOneInvestor",
            "source_mapping": {
              "start": 29467,
              "length": 249,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "forceDivestOfOneInvestor(address)"
            }
          },
          {
            "type": "function",
            "name": "getCodeSize",
            "source_mapping": {
              "start": 7614,
              "length": 150,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "getCodeSize(address)"
            }
          },
          {
            "type": "function",
            "name": "increaseInvestment",
            "source_mapping": {
              "start": 26685,
              "length": 260,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "increaseInvestment()"
            }
          },
          {
            "type": "function",
            "name": "indexOf",
            "source_mapping": {
              "start": 8922,
              "length": 904,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "indexOf(string,string)"
            }
          },
          {
            "type": "function",
            "name": "isLosingBet",
            "source_mapping": {
              "start": 25844,
              "length": 799,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "isLosingBet(Dice.Bet,uint256)"
            }
          },
          {
            "type": "function",
            "name": "isWinningBet",
            "source_mapping": {
              "start": 25264,
              "length": 574,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "isWinningBet(Dice.Bet,uint256)"
            }
          },
          {
            "type": "function",
            "name": "newInvestor",
            "source_mapping": {
              "start": 26951,
              "length": 463,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "newInvestor()"
            }
          },
          {
            "type": "function",
            "name": "oraclize_cbAddress",
            "source_mapping": {
              "start": 7116,
              "length": 112,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_cbAddress()"
            }
          },
          {
            "type": "function",
            "name": "oraclize_getPrice",
            "source_mapping": {
              "start": 3936,
              "length": 134,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_getPrice(string)"
            }
          },
          {
            "type": "function",
            "name": "oraclize_getPrice",
            "source_mapping": {
              "start": 4075,
              "length": 159,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_getPrice(string,uint256)"
            }
          },
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 4244,
              "length": 306,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string)"
            }
          },
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 5636,
              "length": 328,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string,string)"
            }
          },
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 6733,
              "length": 378,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string,string,uint256)"
            }
          },
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 5275,
              "length": 356,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(string,string,uint256)"
            }
          },
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 4555,
              "length": 330,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string)"
            }
          },
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 5969,
              "length": 352,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string,string)"
            }
          },
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 6326,
              "length": 402,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string,string,uint256)"
            }
          },
          {
            "type": "function",
            "name": "oraclize_query",
            "source_mapping": {
              "start": 4890,
              "length": 380,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_query(uint256,string,string,uint256)"
            }
          },
          {
            "type": "function",
            "name": "oraclize_setConfig",
            "source_mapping": {
              "start": 7493,
              "length": 115,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_setConfig(bytes32)"
            }
          },
          {
            "type": "function",
            "name": "oraclize_setCustomGasPrice",
            "source_mapping": {
              "start": 7352,
              "length": 132,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_setCustomGasPrice(uint256)"
            }
          },
          {
            "type": "function",
            "name": "oraclize_setNetwork",
            "source_mapping": {
              "start": 3018,
              "length": 720,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_setNetwork(uint8)"
            }
          },
          {
            "type": "function",
            "name": "oraclize_setProof",
            "source_mapping": {
              "start": 7233,
              "length": 114,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "oraclize_setProof(bytes1)"
            }
          },
          {
            "type": "function",
            "name": "parseAddr",
            "source_mapping": {
              "start": 7771,
              "length": 590,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "parseAddr(string)"
            }
          },
          {
            "type": "function",
            "name": "parseInt",
            "source_mapping": {
              "start": 11086,
              "length": 92,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "parseInt(string)"
            }
          },
          {
            "type": "function",
            "name": "parseInt",
            "source_mapping": {
              "start": 11218,
              "length": 588,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "parseInt(string,uint256)"
            }
          },
          {
            "type": "function",
            "name": "proposeEmergencyWithdrawal",
            "source_mapping": {
              "start": 30939,
              "length": 382,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "proposeEmergencyWithdrawal(address)"
            }
          },
          {
            "type": "function",
            "name": "resumeContract",
            "source_mapping": {
              "start": 29874,
              "length": 110,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "resumeContract()"
            }
          },
          {
            "type": "function",
            "name": "stopContract",
            "source_mapping": {
              "start": 29761,
              "length": 107,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "stopContract()"
            }
          },
          {
            "type": "function",
            "name": "strCompare",
            "source_mapping": {
              "start": 8368,
              "length": 547,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "strCompare(string,string)"
            }
          },
          {
            "type": "function",
            "name": "strConcat",
            "source_mapping": {
              "start": 10944,
              "length": 120,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "strConcat(string,string)"
            }
          },
          {
            "type": "function",
            "name": "strConcat",
            "source_mapping": {
              "start": 10807,
              "length": 131,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "strConcat(string,string,string)"
            }
          },
          {
            "type": "function",
            "name": "strConcat",
            "source_mapping": {
              "start": 10659,
              "length": 142,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "strConcat(string,string,string,string)"
            }
          },
          {
            "type": "function",
            "name": "strConcat",
            "source_mapping": {
              "start": 9832,
              "length": 817,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "strConcat(string,string,string,string,string)"
            }
          },
          {
            "type": "function",
            "name": "uint2str",
            "source_mapping": {
              "start": 11816,
              "length": 399,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "uint2str(uint256)"
            }
          },
          {
            "type": "function",
            "name": "voteEmergencyWithdrawal",
            "source_mapping": {
              "start": 30677,
              "length": 256,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "voteEmergencyWithdrawal(bool)"
            }
          }
        ],
        "description": "Dice () does not implement functions:\n\t- usingOraclize.__callback(bytes32,string) ()\n\t- Dice.changeGasLimitOfSafeSend(uint256) ()\n\t- Dice.changeHouseAddress(address) ()\n\t- Dice.changeOwnerAddress(address) ()\n\t- Dice.divest() ()\n\t- Dice.divest(address) ()\n\t- Dice.executeEmergencyWithdrawal() ()\n\t- Dice.forceDivestOfAllInvestors() ()\n\t- Dice.forceDivestOfOneInvestor(address) ()\n\t- usingOraclize.getCodeSize(address) ()\n\t- Dice.increaseInvestment() ()\n\t- usingOraclize.indexOf(string,string) ()\n\t- Dice.isLosingBet(Dice.Bet,uint256) ()\n\t- Dice.isWinningBet(Dice.Bet,uint256) ()\n\t- Dice.newInvestor() ()\n\t- usingOraclize.oraclize_cbAddress() ()\n\t- usingOraclize.oraclize_getPrice(string) ()\n\t- usingOraclize.oraclize_getPrice(string,uint256) ()\n\t- usingOraclize.oraclize_query(string,string) ()\n\t- usingOraclize.oraclize_query(string,string,string) ()\n\t- usingOraclize.oraclize_query(string,string,string,uint256) ()\n\t- usingOraclize.oraclize_query(string,string,uint256) ()\n\t- usingOraclize.oraclize_query(uint256,string,string) ()\n\t- usingOraclize.oraclize_query(uint256,string,string,string) ()\n\t- usingOraclize.oraclize_query(uint256,string,string,string,uint256) ()\n\t- usingOraclize.oraclize_query(uint256,string,string,uint256) ()\n\t- usingOraclize.oraclize_setConfig(bytes32) ()\n\t- usingOraclize.oraclize_setCustomGasPrice(uint256) ()\n\t- usingOraclize.oraclize_setNetwork(uint8) ()\n\t- usingOraclize.oraclize_setProof(bytes1) ()\n\t- usingOraclize.parseAddr(string) ()\n\t- usingOraclize.parseInt(string) ()\n\t- usingOraclize.parseInt(string,uint256) ()\n\t- Dice.proposeEmergencyWithdrawal(address) ()\n\t- Dice.resumeContract() ()\n\t- Dice.stopContract() ()\n\t- usingOraclize.strCompare(string,string) ()\n\t- usingOraclize.strConcat(string,string) ()\n\t- usingOraclize.strConcat(string,string,string) ()\n\t- usingOraclize.strConcat(string,string,string,string) ()\n\t- usingOraclize.strConcat(string,string,string,string,string) ()\n\t- usingOraclize.uint2str(uint256) ()\n\t- Dice.voteEmergencyWithdrawal(bool) ()\n",
        "markdown": "[Dice]() does not implement functions:\n\t- [usingOraclize.__callback(bytes32,string)]()\n\t- [Dice.changeGasLimitOfSafeSend(uint256)]()\n\t- [Dice.changeHouseAddress(address)]()\n\t- [Dice.changeOwnerAddress(address)]()\n\t- [Dice.divest()]()\n\t- [Dice.divest(address)]()\n\t- [Dice.executeEmergencyWithdrawal()]()\n\t- [Dice.forceDivestOfAllInvestors()]()\n\t- [Dice.forceDivestOfOneInvestor(address)]()\n\t- [usingOraclize.getCodeSize(address)]()\n\t- [Dice.increaseInvestment()]()\n\t- [usingOraclize.indexOf(string,string)]()\n\t- [Dice.isLosingBet(Dice.Bet,uint256)]()\n\t- [Dice.isWinningBet(Dice.Bet,uint256)]()\n\t- [Dice.newInvestor()]()\n\t- [usingOraclize.oraclize_cbAddress()]()\n\t- [usingOraclize.oraclize_getPrice(string)]()\n\t- [usingOraclize.oraclize_getPrice(string,uint256)]()\n\t- [usingOraclize.oraclize_query(string,string)]()\n\t- [usingOraclize.oraclize_query(string,string,string)]()\n\t- [usingOraclize.oraclize_query(string,string,string,uint256)]()\n\t- [usingOraclize.oraclize_query(string,string,uint256)]()\n\t- [usingOraclize.oraclize_query(uint256,string,string)]()\n\t- [usingOraclize.oraclize_query(uint256,string,string,string)]()\n\t- [usingOraclize.oraclize_query(uint256,string,string,string,uint256)]()\n\t- [usingOraclize.oraclize_query(uint256,string,string,uint256)]()\n\t- [usingOraclize.oraclize_setConfig(bytes32)]()\n\t- [usingOraclize.oraclize_setCustomGasPrice(uint256)]()\n\t- [usingOraclize.oraclize_setNetwork(uint8)]()\n\t- [usingOraclize.oraclize_setProof(bytes1)]()\n\t- [usingOraclize.parseAddr(string)]()\n\t- [usingOraclize.parseInt(string)]()\n\t- [usingOraclize.parseInt(string,uint256)]()\n\t- [Dice.proposeEmergencyWithdrawal(address)]()\n\t- [Dice.resumeContract()]()\n\t- [Dice.stopContract()]()\n\t- [usingOraclize.strCompare(string,string)]()\n\t- [usingOraclize.strConcat(string,string)]()\n\t- [usingOraclize.strConcat(string,string,string)]()\n\t- [usingOraclize.strConcat(string,string,string,string)]()\n\t- [usingOraclize.strConcat(string,string,string,string,string)]()\n\t- [usingOraclize.uint2str(uint256)]()\n\t- [Dice.voteEmergencyWithdrawal(bool)]()\n",
        "first_markdown_element": "",
        "id": "65e1eda3dc21195825266bfcca2e164b526bced912b27d77b73922b5f1d4a0f0",
        "check": "unimplemented-functions",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_morden",
            "source_mapping": {
              "start": 2579,
              "length": 35,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "Dice",
            "source_mapping": {
              "start": 12249,
              "length": 19991,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "usingOraclize.networkID_morden () is never used in Dice ()\n",
        "markdown": "[usingOraclize.networkID_morden]() is never used in [Dice]()\n",
        "first_markdown_element": "",
        "id": "0045a3f4b5d1ae5738fce778813f305d490763e0c4e78c3adc0670052ca01016",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_consensys",
            "source_mapping": {
              "start": 2620,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "Dice",
            "source_mapping": {
              "start": 12249,
              "length": 19991,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "usingOraclize.networkID_consensys () is never used in Dice ()\n",
        "markdown": "[usingOraclize.networkID_consensys]() is never used in [Dice]()\n",
        "first_markdown_element": "",
        "id": "1e4fb0452479e8a8cc78d29cae3edb2cb64dde04a1efe76dae420e59cacdcb69",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "week",
            "source_mapping": {
              "start": 2249,
              "length": 31,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "Dice",
            "source_mapping": {
              "start": 12249,
              "length": 19991,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "usingOraclize.week () is never used in Dice ()\n",
        "markdown": "[usingOraclize.week]() is never used in [Dice]()\n",
        "first_markdown_element": "",
        "id": "2ec1f58d40e53a5d675c67aa72973137040ab7de72c49c5338af2fa57019c1ae",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "houseEdge",
            "source_mapping": {
              "start": 12632,
              "length": 28,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "Dice",
            "source_mapping": {
              "start": 12249,
              "length": 19991,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "Dice.houseEdge () is never used in Dice ()\n",
        "markdown": "[Dice.houseEdge]() is never used in [Dice]()\n",
        "first_markdown_element": "",
        "id": "752ececf0823319ea8a84f988722f779601dd2e3e133cf961c00dfd9d0503a87",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_testnet",
            "source_mapping": {
              "start": 2537,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "Dice",
            "source_mapping": {
              "start": 12249,
              "length": 19991,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "usingOraclize.networkID_testnet () is never used in Dice ()\n",
        "markdown": "[usingOraclize.networkID_testnet]() is never used in [Dice]()\n",
        "first_markdown_element": "",
        "id": "8d6f097ab12fbc009a8b5710a3a310941d8b2b1c062d5fdf5b8d834e519388f3",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "month",
            "source_mapping": {
              "start": 2286,
              "length": 33,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "Dice",
            "source_mapping": {
              "start": 12249,
              "length": 19991,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "usingOraclize.month () is never used in Dice ()\n",
        "markdown": "[usingOraclize.month]() is never used in [Dice]()\n",
        "first_markdown_element": "",
        "id": "934da950270c11b258d3542ccd110ca927d688764056525d7519ddf4bf40bb0a",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "day",
            "source_mapping": {
              "start": 2215,
              "length": 28,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "Dice",
            "source_mapping": {
              "start": 12249,
              "length": 19991,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "usingOraclize.day () is never used in Dice ()\n",
        "markdown": "[usingOraclize.day]() is never used in [Dice]()\n",
        "first_markdown_element": "",
        "id": "979a73a48e033f34020efb56f779ce61637ecd71886bc46e70af133ce4f4e1f4",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "proofType_NONE",
            "source_mapping": {
              "start": 2325,
              "length": 35,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "Dice",
            "source_mapping": {
              "start": 12249,
              "length": 19991,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "usingOraclize.proofType_NONE () is never used in Dice ()\n",
        "markdown": "[usingOraclize.proofType_NONE]() is never used in [Dice]()\n",
        "first_markdown_element": "",
        "id": "c282df6422bc1bf3d825bb4ad00695cdb29ca015bd677a02b60e21fd6d1945ac",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_mainnet",
            "source_mapping": {
              "start": 2495,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "Dice",
            "source_mapping": {
              "start": 12249,
              "length": 19991,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "usingOraclize.networkID_mainnet () is never used in Dice ()\n",
        "markdown": "[usingOraclize.networkID_mainnet]() is never used in [Dice]()\n",
        "first_markdown_element": "",
        "id": "d854da31b1871dd3f8822e2daac01e5ba829f2dff22d0a50331cec4b404d91ff",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "divestFee",
            "source_mapping": {
              "start": 12699,
              "length": 28,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "Dice",
            "source_mapping": {
              "start": 12249,
              "length": 19991,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "Dice.divestFee () is never used in Dice ()\n",
        "markdown": "[Dice.divestFee]() is never used in [Dice]()\n",
        "first_markdown_element": "",
        "id": "e3619680554ea3c9e01357c62dac70abdfa99135c4dd9558e0fd135e19cabd7e",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "emergencyWithdrawalRatio",
            "source_mapping": {
              "start": 12772,
              "length": 43,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "Dice",
            "source_mapping": {
              "start": 12249,
              "length": 19991,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "Dice.emergencyWithdrawalRatio () is never used in Dice ()\n",
        "markdown": "[Dice.emergencyWithdrawalRatio]() is never used in [Dice]()\n",
        "first_markdown_element": "",
        "id": "e61b1627c81b4a3fbc553ef822b3ac1a2bd74eea1acbd605e642d9d53addd790",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "divestFee",
            "source_mapping": {
              "start": 12699,
              "length": 28,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "Dice.divestFee () should be constant \n",
        "markdown": "[Dice.divestFee]() should be constant \n",
        "first_markdown_element": "",
        "id": "0f276facfb60b3410464deaa44e27293f8b4b17d3371993a0008de5dce76c6ef",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_mainnet",
            "source_mapping": {
              "start": 2495,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.networkID_mainnet () should be constant \n",
        "markdown": "[usingOraclize.networkID_mainnet]() should be constant \n",
        "first_markdown_element": "",
        "id": "1295c8e74108aa302a5995aa7979024aa89ec9a717e5f3b7b1c99b072bd19e0e",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "proofStorage_IPFS",
            "source_mapping": {
              "start": 2412,
              "length": 38,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.proofStorage_IPFS () should be constant \n",
        "markdown": "[usingOraclize.proofStorage_IPFS]() should be constant \n",
        "first_markdown_element": "",
        "id": "23c351e28291aae5fc02534ecb401deab14074e4107021e7f6b38b2c8ef122ae",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "week",
            "source_mapping": {
              "start": 2249,
              "length": 31,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.week () should be constant \n",
        "markdown": "[usingOraclize.week]() should be constant \n",
        "first_markdown_element": "",
        "id": "282b0634cdadfc7747123ec514eeb7caf0c0f63efb0a723cd98d3663f7850df4",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "edge",
            "source_mapping": {
              "start": 12357,
              "length": 24,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "Dice.edge () should be constant \n",
        "markdown": "[Dice.edge]() should be constant \n",
        "first_markdown_element": "",
        "id": "29f2245e5c0afa12e95cdf5ce1bee3f9c33ed29ff7b1ab9f487b3b7127d6b618",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "pwin",
            "source_mapping": {
              "start": 12287,
              "length": 24,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "Dice.pwin () should be constant \n",
        "markdown": "[Dice.pwin]() should be constant \n",
        "first_markdown_element": "",
        "id": "4b84e2091c6616bbd59e17ebedae1c4f3bf38e584a0c7d0c453b861d0c18d2e5",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "INVALID_BET_MARKER",
            "source_mapping": {
              "start": 12926,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "Dice.INVALID_BET_MARKER () should be constant \n",
        "markdown": "[Dice.INVALID_BET_MARKER]() should be constant \n",
        "first_markdown_element": "",
        "id": "62eb550df433dde04c15b90cc2badeb43267f261e61fe3dc96d6f716b53e29c6",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "OAR",
            "source_mapping": {
              "start": 2667,
              "length": 25,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.OAR () should be constant \n",
        "markdown": "[usingOraclize.OAR]() should be constant \n",
        "first_markdown_element": "",
        "id": "64396abdf506c2ac0ace4bc873d64cdb4ad7049608db574300733919290c452a",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "day",
            "source_mapping": {
              "start": 2215,
              "length": 28,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.day () should be constant \n",
        "markdown": "[usingOraclize.day]() should be constant \n",
        "first_markdown_element": "",
        "id": "6b82a7d9c0a40a08e6e4871a717bfcbe2e5b01b764214921e0944a4f413081fa",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "EMERGENCY_TIMEOUT",
            "source_mapping": {
              "start": 12972,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "Dice.EMERGENCY_TIMEOUT () should be constant \n",
        "markdown": "[Dice.EMERGENCY_TIMEOUT]() should be constant \n",
        "first_markdown_element": "",
        "id": "6d35c1d15a04ef0d7e499dbe15fb65b833cccbbd0949278743274f0342b94aa8",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_consensys",
            "source_mapping": {
              "start": 2620,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.networkID_consensys () should be constant \n",
        "markdown": "[usingOraclize.networkID_consensys]() should be constant \n",
        "first_markdown_element": "",
        "id": "711a7a2d86087739d78a8a516109c67d1c61de4fea0f195574f91b9737b39d01",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_auto",
            "source_mapping": {
              "start": 2456,
              "length": 33,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.networkID_auto () should be constant \n",
        "markdown": "[usingOraclize.networkID_auto]() should be constant \n",
        "first_markdown_element": "",
        "id": "8836d8a69b190a37d4d84e90c1311ba8f574768b50cd6ab959fac6c7611481d1",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "numInvestors",
            "source_mapping": {
              "start": 13462,
              "length": 28,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "Dice.numInvestors () should be constant \n",
        "markdown": "[Dice.numInvestors]() should be constant \n",
        "first_markdown_element": "",
        "id": "8c49b07d0151f7176747438aa27a033e40482f87edb7a34a352f95322516d0c7",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "emergencyWithdrawalRatio",
            "source_mapping": {
              "start": 12772,
              "length": 43,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "Dice.emergencyWithdrawalRatio () should be constant \n",
        "markdown": "[Dice.emergencyWithdrawalRatio]() should be constant \n",
        "first_markdown_element": "",
        "id": "8d1944370ecf2145eda4eab3825e16ef9899eb5dcb1efc2da02345981b58faff",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "month",
            "source_mapping": {
              "start": 2286,
              "length": 33,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.month () should be constant \n",
        "markdown": "[usingOraclize.month]() should be constant \n",
        "first_markdown_element": "",
        "id": "90ff36e0248e6a44e3b6239468125e20c133147576a09f8897cb145a1d9e594d",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "proofType_TLSNotary",
            "source_mapping": {
              "start": 2366,
              "length": 40,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.proofType_TLSNotary () should be constant \n",
        "markdown": "[usingOraclize.proofType_TLSNotary]() should be constant \n",
        "first_markdown_element": "",
        "id": "94426cf10179edb4b2487e6e14b432b61ef56fd85be70557aa3a94dc6b71a125",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "proofType_NONE",
            "source_mapping": {
              "start": 2325,
              "length": 35,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.proofType_NONE () should be constant \n",
        "markdown": "[usingOraclize.proofType_NONE]() should be constant \n",
        "first_markdown_element": "",
        "id": "94a11fbf538cb37121c80b299541faac5233b5f96139f0e49a17f0117972e7fa",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "minBet",
            "source_mapping": {
              "start": 12526,
              "length": 33,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "Dice.minBet () should be constant \n",
        "markdown": "[Dice.minBet]() should be constant \n",
        "first_markdown_element": "",
        "id": "9721401cfcc969f88acef1aa7f4ac897609bed29fd89655c57c1a16068670eae",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_morden",
            "source_mapping": {
              "start": 2579,
              "length": 35,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.networkID_morden () should be constant \n",
        "markdown": "[usingOraclize.networkID_morden]() should be constant \n",
        "first_markdown_element": "",
        "id": "98966137672e0a006be030f02a3bb7779624566e6e6e2c82b82362df5f96323c",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "safeGas",
            "source_mapping": {
              "start": 12854,
              "length": 19,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "Dice.safeGas () should be constant \n",
        "markdown": "[Dice.safeGas]() should be constant \n",
        "first_markdown_element": "",
        "id": "bbc170978fa1de802eb4cebb9d799dd4a93f12057a6c4a4b4b44743ff7a089f4",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "houseEdge",
            "source_mapping": {
              "start": 12632,
              "length": 28,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "Dice.houseEdge () should be constant \n",
        "markdown": "[Dice.houseEdge]() should be constant \n",
        "first_markdown_element": "",
        "id": "c8a848922ec67774a11c0117bc1924e589d8a1144fb0bd5b808f4d433fab1b8b",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "maxWin",
            "source_mapping": {
              "start": 12420,
              "length": 26,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "Dice.maxWin () should be constant \n",
        "markdown": "[Dice.maxWin]() should be constant \n",
        "first_markdown_element": "",
        "id": "d2ccfa10ee591034394e5dd2802212708fecf88392b6506dee0c616127825251",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "networkID_testnet",
            "source_mapping": {
              "start": 2537,
              "length": 36,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "usingOraclize.networkID_testnet () should be constant \n",
        "markdown": "[usingOraclize.networkID_testnet]() should be constant \n",
        "first_markdown_element": "",
        "id": "d45f51fa43198e778f111a7f4ab2ddc0eb537637be02b351089673ed8551f0be",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "ORACLIZE_GAS_LIMIT",
            "source_mapping": {
              "start": 12879,
              "length": 41,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "Dice.ORACLIZE_GAS_LIMIT () should be constant \n",
        "markdown": "[Dice.ORACLIZE_GAS_LIMIT]() should be constant \n",
        "first_markdown_element": "",
        "id": "e7665c679f50d8f3b4a905706b544bf7886f41f2312cd1dcab0016615929e252",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "maxInvestors",
            "source_mapping": {
              "start": 12565,
              "length": 31,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Dice",
                "source_mapping": {
                  "start": 12249,
                  "length": 19991,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "Dice.maxInvestors () should be constant \n",
        "markdown": "[Dice.maxInvestors]() should be constant \n",
        "first_markdown_element": "",
        "id": "e83386e354b5ddffa2ecc15bd05b1732d107cb0c10438a9e8e871a91c5099686",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "getPrice",
            "source_mapping": {
              "start": 1847,
              "length": 77,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "OraclizeI",
                "source_mapping": {
                  "start": 1235,
                  "length": 864,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "getPrice(string,uint256)"
            }
          }
        ],
        "description": "getPrice(string,uint256) should be declared external:\n\t- OraclizeI.getPrice(string,uint256) ()\n",
        "markdown": "getPrice(string,uint256) should be declared external:\n\t- [OraclizeI.getPrice(string,uint256)]()\n",
        "first_markdown_element": "",
        "id": "0928ff40a2cd5c6bb7e7c4db46ce8527361a50c7bc66ebd8f2b364438c7287c0",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "query2_withGasLimit",
            "source_mapping": {
              "start": 1635,
              "length": 140,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "OraclizeI",
                "source_mapping": {
                  "start": 1235,
                  "length": 864,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "query2_withGasLimit(uint256,string,string,string,uint256)"
            }
          }
        ],
        "description": "query2_withGasLimit(uint256,string,string,string,uint256) should be declared external:\n\t- OraclizeI.query2_withGasLimit(uint256,string,string,string,uint256) ()\n",
        "markdown": "query2_withGasLimit(uint256,string,string,string,uint256) should be declared external:\n\t- [OraclizeI.query2_withGasLimit(uint256,string,string,string,uint256)]()\n",
        "first_markdown_element": "",
        "id": "177b2e93f959a814233f43d5450222d4551c2259c8c7835b69114994d567cdfb",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "query2",
            "source_mapping": {
              "start": 1519,
              "length": 111,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "OraclizeI",
                "source_mapping": {
                  "start": 1235,
                  "length": 864,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "query2(uint256,string,string,string)"
            }
          }
        ],
        "description": "query2(uint256,string,string,string) should be declared external:\n\t- OraclizeI.query2(uint256,string,string,string) ()\n",
        "markdown": "query2(uint256,string,string,string) should be declared external:\n\t- [OraclizeI.query2(uint256,string,string,string)]()\n",
        "first_markdown_element": "",
        "id": "28c47db3b2fd58e0e00bf259b88b0e5c16563822a9cbba15f8538faff05dcb58",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "__callback",
            "source_mapping": {
              "start": 3748,
              "length": 104,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "usingOraclize",
                "source_mapping": {
                  "start": 2186,
                  "length": 10042,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "__callback(bytes32,string)"
            }
          }
        ],
        "description": "__callback(bytes32,string) should be declared external:\n\t- usingOraclize.__callback(bytes32,string) ()\n",
        "markdown": "__callback(bytes32,string) should be declared external:\n\t- [usingOraclize.__callback(bytes32,string)]()\n",
        "first_markdown_element": "",
        "id": "600206a719b41462c2be86267859b90a233a7d0f2f7c23ec6da1c5bec420f1e5",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "getPrice",
            "source_mapping": {
              "start": 1780,
              "length": 62,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "OraclizeI",
                "source_mapping": {
                  "start": 1235,
                  "length": 864,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "getPrice(string)"
            }
          }
        ],
        "description": "getPrice(string) should be declared external:\n\t- OraclizeI.getPrice(string) ()\n",
        "markdown": "getPrice(string) should be declared external:\n\t- [OraclizeI.getPrice(string)]()\n",
        "first_markdown_element": "",
        "id": "7131bdae44c630bd349534321f508a4c6e6ee9be4b178ffe4370403a1e805c5f",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "query",
            "source_mapping": {
              "start": 1290,
              "length": 95,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "OraclizeI",
                "source_mapping": {
                  "start": 1235,
                  "length": 864,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "query(uint256,string,string)"
            }
          }
        ],
        "description": "query(uint256,string,string) should be declared external:\n\t- OraclizeI.query(uint256,string,string) ()\n",
        "markdown": "query(uint256,string,string) should be declared external:\n\t- [OraclizeI.query(uint256,string,string)]()\n",
        "first_markdown_element": "",
        "id": "7fbbe34ad8e213ffe5099a5bdf0c24b8a73edf078eda1e75416d510cc2f4fe2b",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "useCoupon",
            "source_mapping": {
              "start": 1929,
              "length": 35,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "OraclizeI",
                "source_mapping": {
                  "start": 1235,
                  "length": 864,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "useCoupon(string)"
            }
          }
        ],
        "description": "useCoupon(string) should be declared external:\n\t- OraclizeI.useCoupon(string) ()\n",
        "markdown": "useCoupon(string) should be declared external:\n\t- [OraclizeI.useCoupon(string)]()\n",
        "first_markdown_element": "",
        "id": "9d58ae755cfc2d61463ccac1e5542293b98a29ee026191cb1e013619244920a1",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "query_withGasLimit",
            "source_mapping": {
              "start": 1390,
              "length": 124,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "OraclizeI",
                "source_mapping": {
                  "start": 1235,
                  "length": 864,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "query_withGasLimit(uint256,string,string,uint256)"
            }
          }
        ],
        "description": "query_withGasLimit(uint256,string,string,uint256) should be declared external:\n\t- OraclizeI.query_withGasLimit(uint256,string,string,uint256) ()\n",
        "markdown": "query_withGasLimit(uint256,string,string,uint256) should be declared external:\n\t- [OraclizeI.query_withGasLimit(uint256,string,string,uint256)]()\n",
        "first_markdown_element": "",
        "id": "fdc72c39990c24160abb0ce91adcccfa1954d5d26c36d1ae059fbe0d5d8b525a",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      }
    ]
  }
}