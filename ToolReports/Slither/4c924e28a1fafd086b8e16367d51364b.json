{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "contract",
            "name": "Contract",
            "source_mapping": {
              "start": 279,
              "length": 1051,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "node",
            "name": "attList.push(newAtt)",
            "source_mapping": {
              "start": 864,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "addAttestation",
                "source_mapping": {
                  "start": 704,
                  "length": 623,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Contract",
                    "source_mapping": {
                      "start": 279,
                      "length": 1051,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "addAttestation(string,bool,address)"
                }
              }
            }
          }
        ],
        "description": "Contract () contract sets array length with a user-controlled value:\n\t- attList.push(newAtt) ()\n",
        "markdown": "[Contract]() contract sets array length with a user-controlled value:\n\t- [attList.push(newAtt)]()\n",
        "first_markdown_element": "",
        "id": "333b45d2e15d39b2cb91bc614cbb1c5266294805e82c4828a088b7b97c988deb",
        "check": "controlled-array-length",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "AttestationManager",
            "source_mapping": {
              "start": 1334,
              "length": 618,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          },
          {
            "type": "node",
            "name": "contracts.push(newContract)",
            "source_mapping": {
              "start": 1704,
              "length": 27,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "addContractWithInfo",
                "source_mapping": {
                  "start": 1506,
                  "length": 230,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "AttestationManager",
                    "source_mapping": {
                      "start": 1334,
                      "length": 618,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "addContractWithInfo(string,string)"
                }
              }
            }
          }
        ],
        "description": "AttestationManager () contract sets array length with a user-controlled value:\n\t- contracts.push(newContract) ()\n",
        "markdown": "[AttestationManager]() contract sets array length with a user-controlled value:\n\t- [contracts.push(newContract)]()\n",
        "first_markdown_element": "",
        "id": "54d89f9c98a2b1a91e66450e8a43e389741a6b6d4a99705aaa156e2dd3417794",
        "check": "controlled-array-length",
        "impact": "High",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_newAddress",
            "source_mapping": {
              "start": 580,
              "length": 19,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeAddress",
                "source_mapping": {
                  "start": 557,
                  "length": 144,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Contract",
                    "source_mapping": {
                      "start": 279,
                      "length": 1051,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeAddress(address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "liveAddress = _newAddress",
            "source_mapping": {
              "start": 639,
              "length": 25,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeAddress",
                "source_mapping": {
                  "start": 557,
                  "length": 144,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Contract",
                    "source_mapping": {
                      "start": 279,
                      "length": 1051,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeAddress(address)"
                }
              }
            }
          }
        ],
        "description": "Contract.changeAddress(address)._newAddress () lacks a zero-check on :\n\t\t- liveAddress = _newAddress ()\n",
        "markdown": "[Contract.changeAddress(address)._newAddress]() lacks a zero-check on :\n\t\t- [liveAddress = _newAddress]()\n",
        "first_markdown_element": "",
        "id": "5ac511585ba931920147907f4e0b1ab283e4d4a42ab859160383f5cbf4d9ba62",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_author",
            "source_mapping": {
              "start": 461,
              "length": 15,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "Contract",
                "source_mapping": {
                  "start": 406,
                  "length": 147,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Contract",
                    "source_mapping": {
                      "start": 279,
                      "length": 1051,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "Contract(string,string,address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "author = _author",
            "source_mapping": {
              "start": 532,
              "length": 16,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "Contract",
                "source_mapping": {
                  "start": 406,
                  "length": 147,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Contract",
                    "source_mapping": {
                      "start": 279,
                      "length": 1051,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "Contract(string,string,address)"
                }
              }
            }
          }
        ],
        "description": "Contract.Contract(string,string,address)._author () lacks a zero-check on :\n\t\t- author = _author ()\n",
        "markdown": "[Contract.Contract(string,string,address)._author]() lacks a zero-check on :\n\t\t- [author = _author]()\n",
        "first_markdown_element": "",
        "id": "9b330ef88f8801607f285e374eab223a8b6b023dcd4d81e6e5755dbf2b6ecba5",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_attestor",
            "source_mapping": {
              "start": 169,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "Attestation",
                "source_mapping": {
                  "start": 110,
                  "length": 163,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Attestation",
                    "source_mapping": {
                      "start": 25,
                      "length": 251,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "Attestation(string,bool,address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "attestor = _attestor",
            "source_mapping": {
              "start": 192,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "Attestation",
                "source_mapping": {
                  "start": 110,
                  "length": 163,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Attestation",
                    "source_mapping": {
                      "start": 25,
                      "length": 251,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "Attestation(string,bool,address)"
                }
              }
            }
          }
        ],
        "description": "Attestation.Attestation(string,bool,address)._attestor () lacks a zero-check on :\n\t\t- attestor = _attestor ()\n",
        "markdown": "[Attestation.Attestation(string,bool,address)._attestor]() lacks a zero-check on :\n\t\t- [attestor = _attestor]()\n",
        "first_markdown_element": "",
        "id": "e40e78994a0df0b9ac9d72591563435db40ad79763db9accf1fe1d4cdb021eec",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 685,
              "length": 5,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeAddress",
                "source_mapping": {
                  "start": 557,
                  "length": 144,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Contract",
                    "source_mapping": {
                      "start": 279,
                      "length": 1051,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeAddress(address)"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected THROW ():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "markdown": "Deprecated standard detected [THROW]():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "first_markdown_element": "",
        "id": "f5556cf1c70b64b9e4b1fc32044dd970b5f2c8b9fc21b7971fda01971033f2d5",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [],
        "description": "solc-0.4.0 is not recommended for deployment\n",
        "markdown": "solc-0.4.0 is not recommended for deployment\n",
        "first_markdown_element": "",
        "id": "e676d9e89e623fa7675baecce41eb7ab21d1d8ec9e856bc5b047e6cfb50b37ca",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "pragma",
            "name": "^0.4.0",
            "source_mapping": {
              "start": 0,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "directive": [
                "solidity",
                "^",
                "0.4",
                ".0"
              ]
            }
          }
        ],
        "description": "Pragma version^0.4.0 () allows old versions\n",
        "markdown": "Pragma version[^0.4.0]() allows old versions\n",
        "first_markdown_element": "",
        "id": "f4d0f96f990510a571c7ae954763f848d217d6f86fa5953d251f28f5221969e2",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_newAddress",
            "source_mapping": {
              "start": 580,
              "length": 19,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "changeAddress",
                "source_mapping": {
                  "start": 557,
                  "length": 144,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Contract",
                    "source_mapping": {
                      "start": 279,
                      "length": 1051,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "changeAddress(address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Contract.changeAddress(address)._newAddress () is not in mixedCase\n",
        "markdown": "Parameter [Contract.changeAddress(address)._newAddress]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "0139481f9603185458c8b43dbc772a6065e21ad980082ff82a2824290171aadf",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_title",
            "source_mapping": {
              "start": 1557,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "addContractWithInfo",
                "source_mapping": {
                  "start": 1506,
                  "length": 230,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "AttestationManager",
                    "source_mapping": {
                      "start": 1334,
                      "length": 618,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "addContractWithInfo(string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter AttestationManager.addContractWithInfo(string,string)._title () is not in mixedCase\n",
        "markdown": "Parameter [AttestationManager.addContractWithInfo(string,string)._title]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "3591328b3b6f401e14b7ad4607ed7a0d41a51ff564a2069ffb6ed2a3734ca0c0",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_contractHash",
            "source_mapping": {
              "start": 1535,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "addContractWithInfo",
                "source_mapping": {
                  "start": 1506,
                  "length": 230,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "AttestationManager",
                    "source_mapping": {
                      "start": 1334,
                      "length": 618,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "addContractWithInfo(string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter AttestationManager.addContractWithInfo(string,string)._contractHash () is not in mixedCase\n",
        "markdown": "Parameter [AttestationManager.addContractWithInfo(string,string)._contractHash]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "c4a2166fb8ee450b59273257d5eb4764cd6331f4c821db5190292d000ca3d584",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "creator",
            "source_mapping": {
              "start": 1413,
              "length": 15,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "AttestationManager",
                "source_mapping": {
                  "start": 1334,
                  "length": 618,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "AttestationManager",
            "source_mapping": {
              "start": 1334,
              "length": 618,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "AttestationManager.creator () is never used in AttestationManager ()\n",
        "markdown": "[AttestationManager.creator]() is never used in [AttestationManager]()\n",
        "first_markdown_element": "",
        "id": "23e7fecdeddedfc9a7476971a2b9761d7fe090cf325d244c5f1635fefc00874b",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "contractHash",
            "source_mapping": {
              "start": 1366,
              "length": 19,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "AttestationManager",
                "source_mapping": {
                  "start": 1334,
                  "length": 618,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          },
          {
            "type": "contract",
            "name": "AttestationManager",
            "source_mapping": {
              "start": 1334,
              "length": 618,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            }
          }
        ],
        "description": "AttestationManager.contractHash () is never used in AttestationManager ()\n",
        "markdown": "[AttestationManager.contractHash]() is never used in [AttestationManager]()\n",
        "first_markdown_element": "",
        "id": "621a0a29b23939f0b05edfd104657f6224b8af5542628c70ca32b672704f068d",
        "check": "unused-state",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "contractHash",
            "source_mapping": {
              "start": 1366,
              "length": 19,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "AttestationManager",
                "source_mapping": {
                  "start": 1334,
                  "length": 618,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "AttestationManager.contractHash () should be constant \n",
        "markdown": "[AttestationManager.contractHash]() should be constant \n",
        "first_markdown_element": "",
        "id": "76d5f47ea622f13bd827804d953c672d65e0e539c91c4c52881ab7b46df23ff2",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "creator",
            "source_mapping": {
              "start": 1413,
              "length": 15,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "AttestationManager",
                "source_mapping": {
                  "start": 1334,
                  "length": 618,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              }
            }
          }
        ],
        "description": "AttestationManager.creator () should be constant \n",
        "markdown": "[AttestationManager.creator]() should be constant \n",
        "first_markdown_element": "",
        "id": "bacd31b188682b88110e7b27eaecb7d3fd36fe6d516544e7196c449f1bcde583",
        "check": "constable-states",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "attestToContract",
            "source_mapping": {
              "start": 1740,
              "length": 209,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "AttestationManager",
                "source_mapping": {
                  "start": 1334,
                  "length": 618,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "attestToContract(uint256,bool,string)"
            }
          }
        ],
        "description": "attestToContract(uint256,bool,string) should be declared external:\n\t- AttestationManager.attestToContract(uint256,bool,string) ()\n",
        "markdown": "attestToContract(uint256,bool,string) should be declared external:\n\t- [AttestationManager.attestToContract(uint256,bool,string)]()\n",
        "first_markdown_element": "",
        "id": "173d82a1b1e5478b0d03514f71437ea596767075563e66fa378e2d8b60aded72",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "addContractWithInfo",
            "source_mapping": {
              "start": 1506,
              "length": 230,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "AttestationManager",
                "source_mapping": {
                  "start": 1334,
                  "length": 618,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "addContractWithInfo(string,string)"
            }
          }
        ],
        "description": "addContractWithInfo(string,string) should be declared external:\n\t- AttestationManager.addContractWithInfo(string,string) ()\n",
        "markdown": "addContractWithInfo(string,string) should be declared external:\n\t- [AttestationManager.addContractWithInfo(string,string)]()\n",
        "first_markdown_element": "",
        "id": "7d9f72531eb7082566d57aced754f5e2736d6dd7016aec67db1e4d8c56ac050c",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "addAttestation",
            "source_mapping": {
              "start": 704,
              "length": 623,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Contract",
                "source_mapping": {
                  "start": 279,
                  "length": 1051,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "addAttestation(string,bool,address)"
            }
          }
        ],
        "description": "addAttestation(string,bool,address) should be declared external:\n\t- Contract.addAttestation(string,bool,address) ()\n",
        "markdown": "addAttestation(string,bool,address) should be declared external:\n\t- [Contract.addAttestation(string,bool,address)]()\n",
        "first_markdown_element": "",
        "id": "eff6f5f84d14678d3b19c94df734a12ecbd058f6cbde489ccf6a2d9fc7411f7e",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      }
    ]
  }
}