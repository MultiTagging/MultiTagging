{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "variable",
            "name": "_recovery",
            "source_mapping": {
              "start": 3861,
              "length": 17,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "Vault",
                "source_mapping": {
                  "start": 3846,
                  "length": 160,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Vault",
                    "source_mapping": {
                      "start": 2417,
                      "length": 3576,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "Vault(address,uint256)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "recovery = _recovery",
            "source_mapping": {
              "start": 3939,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "Vault",
                "source_mapping": {
                  "start": 3846,
                  "length": 160,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Vault",
                    "source_mapping": {
                      "start": 2417,
                      "length": 3576,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "Vault(address,uint256)"
                }
              }
            }
          }
        ],
        "description": "Vault.Vault(address,uint256)._recovery () lacks a zero-check on :\n\t\t- recovery = _recovery ()\n",
        "markdown": "[Vault.Vault(address,uint256)._recovery]() lacks a zero-check on :\n\t\t- [recovery = _recovery]()\n",
        "first_markdown_element": "",
        "id": "696b16499694a2d178c0b89705220f4840c482def1541cb7c14aabc37fdaa67a",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "max",
            "source_mapping": {
              "start": 4016,
              "length": 118,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Vault",
                "source_mapping": {
                  "start": 2417,
                  "length": 3576,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "max(uint256,uint256)"
            }
          },
          {
            "type": "node",
            "name": "a > b",
            "source_mapping": {
              "start": 4082,
              "length": 5,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "max",
                "source_mapping": {
                  "start": 4016,
                  "length": 118,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Vault",
                    "source_mapping": {
                      "start": 2417,
                      "length": 3576,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "max(uint256,uint256)"
                }
              }
            }
          }
        ],
        "description": "Vault.max(uint256,uint256) () uses timestamp for comparisons\n\tDangerous comparisons:\n\t- a > b ()\n",
        "markdown": "[Vault.max(uint256,uint256)]() uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [a > b]()\n",
        "first_markdown_element": "",
        "id": "208d99d56844f8fd51413687c0dff30ff967d6aafbb9c80139b35b3c754c703e",
        "check": "timestamp",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "withdraw",
            "source_mapping": {
              "start": 4976,
              "length": 284,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Vault",
                "source_mapping": {
                  "start": 2417,
                  "length": 3576,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "withdraw()"
            }
          },
          {
            "type": "node",
            "name": "block.timestamp < withdrawTime || withdrawAmount == 0",
            "source_mapping": {
              "start": 5020,
              "length": 53,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "withdraw",
                "source_mapping": {
                  "start": 4976,
                  "length": 284,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Vault",
                    "source_mapping": {
                      "start": 2417,
                      "length": 3576,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "withdraw()"
                }
              }
            }
          }
        ],
        "description": "Vault.withdraw() () uses timestamp for comparisons\n\tDangerous comparisons:\n\t- block.timestamp < withdrawTime || withdrawAmount == 0 ()\n",
        "markdown": "[Vault.withdraw()]() uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [block.timestamp < withdrawTime || withdrawAmount == 0]()\n",
        "first_markdown_element": "",
        "id": "d92e6a42e1c5caad49d0fff4e9407d73cc33fddb612f544d25f09b1572410cd0",
        "check": "timestamp",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 4528,
              "length": 5,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "unvault",
                "source_mapping": {
                  "start": 4439,
                  "length": 389,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Vault",
                    "source_mapping": {
                      "start": 2417,
                      "length": 3576,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "unvault(uint256)"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected THROW ():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "markdown": "Deprecated standard detected [THROW]():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "first_markdown_element": "",
        "id": "f5556cf1c70b64b9e4b1fc32044dd970b5f2c8b9fc21b7971fda01971033f2d5",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [],
        "description": "solc-0.4.0 is not recommended for deployment\n",
        "markdown": "solc-0.4.0 is not recommended for deployment\n",
        "first_markdown_element": "",
        "id": "e676d9e89e623fa7675baecce41eb7ab21d1d8ec9e856bc5b047e6cfb50b37ca",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "pragma",
            "name": "^0.4.0",
            "source_mapping": {
              "start": 0,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "directive": [
                "solidity",
                "^",
                "0.4",
                ".0"
              ]
            }
          }
        ],
        "description": "Pragma version^0.4.0 () allows old versions\n",
        "markdown": "Pragma version[^0.4.0]() allows old versions\n",
        "first_markdown_element": "",
        "id": "f4d0f96f990510a571c7ae954763f848d217d6f86fa5953d251f28f5221969e2",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "only_recovery",
            "source_mapping": {
              "start": 3098,
              "length": 85,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Vault",
                "source_mapping": {
                  "start": 2417,
                  "length": 3576,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "only_recovery()"
            },
            "additional_fields": {
              "target": "modifier",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Modifier Vault.only_recovery() () is not in mixedCase\n",
        "markdown": "Modifier [Vault.only_recovery()]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "492bac1384fcf276690129e4b156d0a185ea609301595b0e0a4cca487870fbff",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "only_owner",
            "source_mapping": {
              "start": 3009,
              "length": 79,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Vault",
                "source_mapping": {
                  "start": 2417,
                  "length": 3576,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "only_owner()"
            },
            "additional_fields": {
              "target": "modifier",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Modifier Vault.only_owner() () is not in mixedCase\n",
        "markdown": "Modifier [Vault.only_owner()]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "b49469bc81c85c6717a20ca504b7be5ccf6b7a1da252b4212761a562d75d5d1b",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "withdraw",
            "source_mapping": {
              "start": 4976,
              "length": 284,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Vault",
                "source_mapping": {
                  "start": 2417,
                  "length": 3576,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "withdraw()"
            }
          },
          {
            "type": "node",
            "name": "! owner.send(amount)",
            "source_mapping": {
              "start": 5181,
              "length": 19,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "withdraw",
                "source_mapping": {
                  "start": 4976,
                  "length": 284,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Vault",
                    "source_mapping": {
                      "start": 2417,
                      "length": 3576,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "withdraw()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "external_calls"
            }
          },
          {
            "type": "node",
            "name": "Withdraw(owner,amount)",
            "source_mapping": {
              "start": 5230,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "withdraw",
                "source_mapping": {
                  "start": 4976,
                  "length": 284,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Vault",
                    "source_mapping": {
                      "start": 2417,
                      "length": 3576,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "withdraw()"
                }
              }
            },
            "additional_fields": {
              "underlying_type": "event"
            }
          }
        ],
        "description": "Reentrancy in Vault.withdraw() ():\n\tExternal calls:\n\t- ! owner.send(amount) ()\n\tEvent emitted after the call(s):\n\t- Withdraw(owner,amount) ()\n",
        "markdown": "Reentrancy in [Vault.withdraw()]():\n\tExternal calls:\n\t- [! owner.send(amount)]()\n\tEvent emitted after the call(s):\n\t- [Withdraw(owner,amount)]()\n",
        "first_markdown_element": "",
        "id": "d5c96dcc5d5f99284f86ffee949290cad06cb0a93c726be5db1ebdb7abd427a6",
        "check": "reentrancy-unlimited-gas",
        "impact": "Informational",
        "confidence": "Medium"
      }
    ]
  }
}