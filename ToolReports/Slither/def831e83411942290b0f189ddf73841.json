{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "variable",
            "name": "Validated",
            "source_mapping": {
              "start": 2300,
              "length": 14,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "CheckExecution",
                "source_mapping": {
                  "start": 2193,
                  "length": 399,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "CheckExecution(string)"
                }
              }
            }
          },
          {
            "type": "event",
            "name": "Validated",
            "source_mapping": {
              "start": 205,
              "length": 29,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Mapoc",
                "source_mapping": {
                  "start": 25,
                  "length": 7721,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "Validated(string)"
            }
          }
        ],
        "description": "Mapoc.CheckExecution(string).Validated () shadows:\n\t- Mapoc.Validated(string) () (event)\n",
        "markdown": "[Mapoc.CheckExecution(string).Validated]() shadows:\n\t- [Mapoc.Validated(string)]() (event)\n",
        "first_markdown_element": "",
        "id": "3381278ba3235d7ace14e3e2b2a418f5206104c888ca26b8d9a0c709f42c780d",
        "check": "shadowing-local",
        "impact": "Low",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "map",
            "source_mapping": {
              "start": 608,
              "length": 196,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Mapoc",
                "source_mapping": {
                  "start": 25,
                  "length": 7721,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "map(string)"
            }
          },
          {
            "type": "node",
            "name": "ret >= executions.length || ! strEqual(executions[ret].hash,hash)",
            "source_mapping": {
              "start": 705,
              "length": 65,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "map",
                "source_mapping": {
                  "start": 608,
                  "length": 196,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "map(string)"
                }
              }
            }
          }
        ],
        "description": "Mapoc.map(string) () uses timestamp for comparisons\n\tDangerous comparisons:\n\t- ret >= executions.length || ! strEqual(executions[ret].hash,hash) ()\n",
        "markdown": "[Mapoc.map(string)]() uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [ret >= executions.length || ! strEqual(executions[ret].hash,hash)]()\n",
        "first_markdown_element": "",
        "id": "3c3124eede7d254800b9b3af50c2a932e1a4123cf90329a77dda50dfbeab95a8",
        "check": "timestamp",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "strEqual",
            "source_mapping": {
              "start": 6232,
              "length": 266,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Mapoc",
                "source_mapping": {
                  "start": 25,
                  "length": 7721,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "strEqual(string,string)"
            }
          },
          {
            "type": "node",
            "name": "a.length != b.length",
            "source_mapping": {
              "start": 6363,
              "length": 20,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strEqual",
                "source_mapping": {
                  "start": 6232,
                  "length": 266,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strEqual(string,string)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "i < a.length",
            "source_mapping": {
              "start": 6422,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strEqual",
                "source_mapping": {
                  "start": 6232,
                  "length": 266,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strEqual(string,string)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "a[i] != b[i]",
            "source_mapping": {
              "start": 6449,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strEqual",
                "source_mapping": {
                  "start": 6232,
                  "length": 266,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strEqual(string,string)"
                }
              }
            }
          }
        ],
        "description": "Mapoc.strEqual(string,string) () uses timestamp for comparisons\n\tDangerous comparisons:\n\t- a.length != b.length ()\n\t- i < a.length ()\n\t- a[i] != b[i] ()\n",
        "markdown": "[Mapoc.strEqual(string,string)]() uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [a.length != b.length]()\n\t- [i < a.length]()\n\t- [a[i] != b[i]]()\n",
        "first_markdown_element": "",
        "id": "499a57850fc01b4e7e4325a3d7ad7457fc099603b9774b2e308f33d235aa27e3",
        "check": "timestamp",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "ListNotValSince",
            "source_mapping": {
              "start": 5096,
              "length": 614,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Mapoc",
                "source_mapping": {
                  "start": 25,
                  "length": 7721,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "ListNotValSince(uint256)"
            }
          },
          {
            "type": "node",
            "name": "executions[i].dateCreated < OldestTime",
            "source_mapping": {
              "start": 5539,
              "length": 38,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "ListNotValSince",
                "source_mapping": {
                  "start": 5096,
                  "length": 614,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "ListNotValSince(uint256)"
                }
              }
            }
          }
        ],
        "description": "Mapoc.ListNotValSince(uint256) () uses timestamp for comparisons\n\tDangerous comparisons:\n\t- executions[i].dateCreated < OldestTime ()\n",
        "markdown": "[Mapoc.ListNotValSince(uint256)]() uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [executions[i].dateCreated < OldestTime]()\n",
        "first_markdown_element": "",
        "id": "7cac6749cb99963d7c38929fe25452594b745090392438379663bd464899f2c4",
        "check": "timestamp",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "NotValSince",
            "source_mapping": {
              "start": 4242,
              "length": 844,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Mapoc",
                "source_mapping": {
                  "start": 25,
                  "length": 7721,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "NotValSince(uint256)"
            }
          },
          {
            "type": "node",
            "name": "executions[i].dateCreated < DateFirst",
            "source_mapping": {
              "start": 4646,
              "length": 37,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "NotValSince",
                "source_mapping": {
                  "start": 4242,
                  "length": 844,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "NotValSince(uint256)"
                }
              }
            }
          }
        ],
        "description": "Mapoc.NotValSince(uint256) () uses timestamp for comparisons\n\tDangerous comparisons:\n\t- executions[i].dateCreated < DateFirst ()\n",
        "markdown": "[Mapoc.NotValSince(uint256)]() uses timestamp for comparisons\n\tDangerous comparisons:\n\t- [executions[i].dateCreated < DateFirst]()\n",
        "first_markdown_element": "",
        "id": "a7de296a21f3f2b7487652339fc00011a057495e001d8c25140bd6545d658c48",
        "check": "timestamp",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "strConcat",
            "source_mapping": {
              "start": 7620,
              "length": 119,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Mapoc",
                "source_mapping": {
                  "start": 25,
                  "length": 7721,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "strConcat(string,string)"
            }
          }
        ],
        "description": "Mapoc.strConcat(string,string) () is never used and should be removed\n",
        "markdown": "[Mapoc.strConcat(string,string)]() is never used and should be removed\n",
        "first_markdown_element": "",
        "id": "b4a411424adb6287f07aec605d4678196d172cd092d737fb38eac14a0b94ef65",
        "check": "dead-code",
        "impact": "Informational",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "suicide(address)(_owner)",
            "source_mapping": {
              "start": 558,
              "length": 15,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "kill",
                "source_mapping": {
                  "start": 517,
                  "length": 63,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "kill()"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected suicide(address)(_owner) ():\n\t- Usage of \"suicide()\" should be replaced with \"selfdestruct()\"\n",
        "markdown": "Deprecated standard detected [suicide(address)(_owner)]():\n\t- Usage of \"suicide()\" should be replaced with \"selfdestruct()\"\n",
        "first_markdown_element": "",
        "id": "91fe93212a52f3c7b3f77aeb3c70721742dbfcd3d303e87f8e6824dd03d86edf",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 772,
              "length": 5,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "map",
                "source_mapping": {
                  "start": 608,
                  "length": 196,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "map(string)"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected THROW ():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "markdown": "Deprecated standard detected [THROW]():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "first_markdown_element": "",
        "id": "f5556cf1c70b64b9e4b1fc32044dd970b5f2c8b9fc21b7971fda01971033f2d5",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "pragma",
            "name": "^0.4.6",
            "source_mapping": {
              "start": 0,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "directive": [
                "solidity",
                "^",
                "0.4",
                ".6"
              ]
            }
          }
        ],
        "description": "Pragma version^0.4.6 () allows old versions\n",
        "markdown": "Pragma version[^0.4.6]() allows old versions\n",
        "first_markdown_element": "",
        "id": "54eae9514d5e93f8fb467cb6e12380204cb269720316b950ba80b399a769bf71",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [],
        "description": "solc-0.4.6 is not recommended for deployment\n",
        "markdown": "solc-0.4.6 is not recommended for deployment\n",
        "first_markdown_element": "",
        "id": "b2e09ce9c0c37029707bd5645a9a2972adb1c4c04948009825bacc17fa383ec8",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 6250,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strEqual",
                "source_mapping": {
                  "start": 6232,
                  "length": 266,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strEqual(string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Mapoc.strEqual(string,string)._a () is not in mixedCase\n",
        "markdown": "Parameter [Mapoc.strEqual(string,string)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "01eb7558f72d684a0d19ccafeb84f16ba012fd517cd79ed4b34ae99587b36a79",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "Hash",
            "source_mapping": {
              "start": 1647,
              "length": 11,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "AddExec",
                "source_mapping": {
                  "start": 1630,
                  "length": 291,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "AddExec(string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Mapoc.AddExec(string).Hash () is not in mixedCase\n",
        "markdown": "Parameter [Mapoc.AddExec(string).Hash]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "1ce894c731906b6daf4728e3eb100acd03af89c229c8e0c0abbc29b540c11ff3",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_b",
            "source_mapping": {
              "start": 6532,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 6502,
                  "length": 817,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Mapoc.strConcat(string,string,string,string,string)._b () is not in mixedCase\n",
        "markdown": "Parameter [Mapoc.strConcat(string,string,string,string,string)._b]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "1da918238a16f2d4c462d97daf436b747d48560886112b9899278e52d2ca81c0",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_c",
            "source_mapping": {
              "start": 6543,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 6502,
                  "length": 817,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Mapoc.strConcat(string,string,string,string,string)._c () is not in mixedCase\n",
        "markdown": "Parameter [Mapoc.strConcat(string,string,string,string,string)._c]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "207ac01867f0ac1856f5f5fad3af9e02b0c19fc8f165fb43d23cd8f87f34b8f3",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_b",
            "source_mapping": {
              "start": 7359,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 7329,
                  "length": 141,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Mapoc.strConcat(string,string,string,string)._b () is not in mixedCase\n",
        "markdown": "Parameter [Mapoc.strConcat(string,string,string,string)._b]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "24296eb514c51fd6971d6a310daf8d7b934830c0740e67b45ccd0af16a68a99d",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 6521,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 6502,
                  "length": 817,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Mapoc.strConcat(string,string,string,string,string)._a () is not in mixedCase\n",
        "markdown": "Parameter [Mapoc.strConcat(string,string,string,string,string)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "2feed4bf1ac2c08b11d1911007cc7372eee204a5e4e2a68c986fec2ac05eb7cf",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_d",
            "source_mapping": {
              "start": 6554,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 6502,
                  "length": 817,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Mapoc.strConcat(string,string,string,string,string)._d () is not in mixedCase\n",
        "markdown": "Parameter [Mapoc.strConcat(string,string,string,string,string)._d]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "34ccee8331d0a489fc2b523e6dfbf4c783380db4dcbc2f57b5e551c7cbd60b9a",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "AddExec",
            "source_mapping": {
              "start": 1630,
              "length": 291,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Mapoc",
                "source_mapping": {
                  "start": 25,
                  "length": 7721,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "AddExec(string)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function Mapoc.AddExec(string) () is not in mixedCase\n",
        "markdown": "Function [Mapoc.AddExec(string)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "39b2c6f84c0c8c4d167c7b217026075c85f1a6539f796cfd7bcc9c7de53f0456",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "ListNotValSince",
            "source_mapping": {
              "start": 5096,
              "length": 614,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Mapoc",
                "source_mapping": {
                  "start": 25,
                  "length": 7721,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "ListNotValSince(uint256)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function Mapoc.ListNotValSince(uint256) () is not in mixedCase\n",
        "markdown": "Function [Mapoc.ListNotValSince(uint256)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "69c8586afae6e407d08221cf7afbf0b94cc1a3da5e298ff666dfbf81adc0b4bb",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "ValidateExec",
            "source_mapping": {
              "start": 1931,
              "length": 252,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Mapoc",
                "source_mapping": {
                  "start": 25,
                  "length": 7721,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "ValidateExec(string)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function Mapoc.ValidateExec(string) () is not in mixedCase\n",
        "markdown": "Function [Mapoc.ValidateExec(string)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "6f2f8c147ba802874385254088887ed3eb99824613cd4a962adf2f49be07c046",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "CheckExecution",
            "source_mapping": {
              "start": 2193,
              "length": 399,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Mapoc",
                "source_mapping": {
                  "start": 25,
                  "length": 7721,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "CheckExecution(string)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function Mapoc.CheckExecution(string) () is not in mixedCase\n",
        "markdown": "Function [Mapoc.CheckExecution(string)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "6f9f0e63dbd3529a9955586f57c6277068e79af57d3cb23b1d9dfd5d07b89613",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_c",
            "source_mapping": {
              "start": 7521,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 7480,
                  "length": 130,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Mapoc.strConcat(string,string,string)._c () is not in mixedCase\n",
        "markdown": "Parameter [Mapoc.strConcat(string,string,string)._c]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "7596ca6927e1a30eb3bc84ba33e715cb832cf7473cbc173f54eae2ad1b485262",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "ListAllSince",
            "source_mapping": {
              "start": 5720,
              "length": 486,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Mapoc",
                "source_mapping": {
                  "start": 25,
                  "length": 7721,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "ListAllSince(uint256)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function Mapoc.ListAllSince(uint256) () is not in mixedCase\n",
        "markdown": "Function [Mapoc.ListAllSince(uint256)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "7652fb1bb1e9f52d837e9f0f46be3aa7f30dee779d78e6f7c43abfa22ceb4d9b",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_b",
            "source_mapping": {
              "start": 7650,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 7620,
                  "length": 119,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Mapoc.strConcat(string,string)._b () is not in mixedCase\n",
        "markdown": "Parameter [Mapoc.strConcat(string,string)._b]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "78741e536e2d4418ac9275b7282631de0dc60dba2ca14d62302def20b378c9b8",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "Hash",
            "source_mapping": {
              "start": 2217,
              "length": 11,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "CheckExecution",
                "source_mapping": {
                  "start": 2193,
                  "length": 399,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "CheckExecution(string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Mapoc.CheckExecution(string).Hash () is not in mixedCase\n",
        "markdown": "Parameter [Mapoc.CheckExecution(string).Hash]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "789cdf5ee491cb24247a8013431e67dde9004d862ef70a4316181da9c7bf0271",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 7499,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 7480,
                  "length": 130,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Mapoc.strConcat(string,string,string)._a () is not in mixedCase\n",
        "markdown": "Parameter [Mapoc.strConcat(string,string,string)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "792148578e2d6d61f8301092a06f073bd168a3860f82d7bb7ef1d5f25d479a6f",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_b",
            "source_mapping": {
              "start": 7510,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 7480,
                  "length": 130,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Mapoc.strConcat(string,string,string)._b () is not in mixedCase\n",
        "markdown": "Parameter [Mapoc.strConcat(string,string,string)._b]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "7e992d0d970e35c9e2de16e35643c0b137db6757a8586748fa6c63c2e57ec948",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "LastExecuted",
            "source_mapping": {
              "start": 2770,
              "length": 702,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Mapoc",
                "source_mapping": {
                  "start": 25,
                  "length": 7721,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "LastExecuted()"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function Mapoc.LastExecuted() () is not in mixedCase\n",
        "markdown": "Function [Mapoc.LastExecuted()]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "92df0d9ee6ac8d2ab5862283644df6c9f47269e12a4455880464ccbeddaa6450",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "Hash",
            "source_mapping": {
              "start": 1953,
              "length": 11,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "ValidateExec",
                "source_mapping": {
                  "start": 1931,
                  "length": 252,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "ValidateExec(string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Mapoc.ValidateExec(string).Hash () is not in mixedCase\n",
        "markdown": "Parameter [Mapoc.ValidateExec(string).Hash]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "952072cf13bcf6369fe0110625ec97e113b2e63eb8ce5ba17df0a7b353e49082",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "Hash",
            "source_mapping": {
              "start": 2623,
              "length": 11,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "IsValidated",
                "source_mapping": {
                  "start": 2602,
                  "length": 158,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "IsValidated(string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Mapoc.IsValidated(string).Hash () is not in mixedCase\n",
        "markdown": "Parameter [Mapoc.IsValidated(string).Hash]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "99b084615bf6fd3b46b8f089ad4e438ec2b7e40040b39959ff94c29d086cfe8c",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_d",
            "source_mapping": {
              "start": 7381,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 7329,
                  "length": 141,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Mapoc.strConcat(string,string,string,string)._d () is not in mixedCase\n",
        "markdown": "Parameter [Mapoc.strConcat(string,string,string,string)._d]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "9fc8ff6ea4524edf2106d9167a01822555355e049945b192e9325f47d13fd388",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_e",
            "source_mapping": {
              "start": 6565,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 6502,
                  "length": 817,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Mapoc.strConcat(string,string,string,string,string)._e () is not in mixedCase\n",
        "markdown": "Parameter [Mapoc.strConcat(string,string,string,string,string)._e]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "a4d3e7381966e874fd20ad1bbfa80dd68dac8bf207ff79b8555ecd2f150e5afb",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 7639,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 7620,
                  "length": 119,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Mapoc.strConcat(string,string)._a () is not in mixedCase\n",
        "markdown": "Parameter [Mapoc.strConcat(string,string)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "a8140fe1e138e0750841333d4d1a03fc177622b1cda23ef81228a4efcc5b23ed",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "NotValSince",
            "source_mapping": {
              "start": 4242,
              "length": 844,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Mapoc",
                "source_mapping": {
                  "start": 25,
                  "length": 7721,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "NotValSince(uint256)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function Mapoc.NotValSince(uint256) () is not in mixedCase\n",
        "markdown": "Function [Mapoc.NotValSince(uint256)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "b6ab8b2ccab90c64d27fd2ba0d8495105fa73edf0f22b1e9128d46720e7ec0ab",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_c",
            "source_mapping": {
              "start": 7370,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 7329,
                  "length": 141,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Mapoc.strConcat(string,string,string,string)._c () is not in mixedCase\n",
        "markdown": "Parameter [Mapoc.strConcat(string,string,string,string)._c]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "bcee6da3971d90b1bf25b98123065f2e1db53c0dc90a97c0be65c155c4369d83",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "LastValidated",
            "source_mapping": {
              "start": 3482,
              "length": 458,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Mapoc",
                "source_mapping": {
                  "start": 25,
                  "length": 7721,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "LastValidated()"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function Mapoc.LastValidated() () is not in mixedCase\n",
        "markdown": "Function [Mapoc.LastValidated()]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "bf151841abefbc4d26273bf36af45cb0fca85205cf4014cda0f86ce6381f3e9e",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "CountExecs",
            "source_mapping": {
              "start": 3950,
              "length": 282,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Mapoc",
                "source_mapping": {
                  "start": 25,
                  "length": 7721,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "CountExecs()"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function Mapoc.CountExecs() () is not in mixedCase\n",
        "markdown": "Function [Mapoc.CountExecs()]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "c0c3ad816a098b708089fc2a38a41b59470899c5bd773c159d97161c18102d49",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "IsValidated",
            "source_mapping": {
              "start": 2602,
              "length": 158,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Mapoc",
                "source_mapping": {
                  "start": 25,
                  "length": 7721,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "IsValidated(string)"
            },
            "additional_fields": {
              "target": "function",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Function Mapoc.IsValidated(string) () is not in mixedCase\n",
        "markdown": "Function [Mapoc.IsValidated(string)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "cbe3b5a61fafda16e181986e0b33fe6a891c9b7e4dd141992b8fe972ba2ab740",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_a",
            "source_mapping": {
              "start": 7348,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strConcat",
                "source_mapping": {
                  "start": 7329,
                  "length": 141,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strConcat(string,string,string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Mapoc.strConcat(string,string,string,string)._a () is not in mixedCase\n",
        "markdown": "Parameter [Mapoc.strConcat(string,string,string,string)._a]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "db1be681c6b90377dde6a7a1ebbeb8bf8d75767d2a4b3020116200f404866e5f",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_b",
            "source_mapping": {
              "start": 6261,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "strEqual",
                "source_mapping": {
                  "start": 6232,
                  "length": 266,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "strEqual(string,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Mapoc.strEqual(string,string)._b () is not in mixedCase\n",
        "markdown": "Parameter [Mapoc.strEqual(string,string)._b]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "f779719e0313879e6621aca3997598529ee37d6cd766621c720ca0a88510797a",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "i < executions.length",
            "source_mapping": {
              "start": 5870,
              "length": 21,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "ListAllSince",
                "source_mapping": {
                  "start": 5720,
                  "length": 486,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Mapoc",
                    "source_mapping": {
                      "start": 25,
                      "length": 7721,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "ListAllSince(uint256)"
                }
              }
            }
          }
        ],
        "description": "Loop condition i < executions.length () should use cached array length instead of referencing `length` member of the storage array.\n ",
        "markdown": "Loop condition [i < executions.length]() should use cached array length instead of referencing `length` member of the storage array.\n ",
        "first_markdown_element": "",
        "id": "86aee17dd9a426bcc2bd9d3e7aa2cbcd93b059013fd4445e522c54dff0fe8db0",
        "check": "cache-array-length",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "AddExec",
            "source_mapping": {
              "start": 1630,
              "length": 291,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Mapoc",
                "source_mapping": {
                  "start": 25,
                  "length": 7721,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "AddExec(string)"
            }
          }
        ],
        "description": "AddExec(string) should be declared external:\n\t- Mapoc.AddExec(string) ()\n",
        "markdown": "AddExec(string) should be declared external:\n\t- [Mapoc.AddExec(string)]()\n",
        "first_markdown_element": "",
        "id": "1e81a1996b3fd3f7751231b889c562e154b5bda314ac27ebc9e152d8b864aefe",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "CheckExecution",
            "source_mapping": {
              "start": 2193,
              "length": 399,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Mapoc",
                "source_mapping": {
                  "start": 25,
                  "length": 7721,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "CheckExecution(string)"
            }
          }
        ],
        "description": "CheckExecution(string) should be declared external:\n\t- Mapoc.CheckExecution(string) ()\n",
        "markdown": "CheckExecution(string) should be declared external:\n\t- [Mapoc.CheckExecution(string)]()\n",
        "first_markdown_element": "",
        "id": "206d7c9ab3afd8e02ac0341415a7276202dfa3389a66d50623db4ce6f0d4b618",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "ValidateExec",
            "source_mapping": {
              "start": 1931,
              "length": 252,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Mapoc",
                "source_mapping": {
                  "start": 25,
                  "length": 7721,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "ValidateExec(string)"
            }
          }
        ],
        "description": "ValidateExec(string) should be declared external:\n\t- Mapoc.ValidateExec(string) ()\n",
        "markdown": "ValidateExec(string) should be declared external:\n\t- [Mapoc.ValidateExec(string)]()\n",
        "first_markdown_element": "",
        "id": "5107f11f06774d2fa8af4a60c50211b72567aeffc43a9549b195518341d61e78",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "IsValidated",
            "source_mapping": {
              "start": 2602,
              "length": 158,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Mapoc",
                "source_mapping": {
                  "start": 25,
                  "length": 7721,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "IsValidated(string)"
            }
          }
        ],
        "description": "IsValidated(string) should be declared external:\n\t- Mapoc.IsValidated(string) ()\n",
        "markdown": "IsValidated(string) should be declared external:\n\t- [Mapoc.IsValidated(string)]()\n",
        "first_markdown_element": "",
        "id": "ccd500a0863da00d6fc47ecd43d3d1a3ef89c25d24708ca73631bb24471f24f9",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      }
    ]
  }
}