{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "function",
            "name": "setDelegate",
            "source_mapping": {
              "start": 1657,
              "length": 66,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SimpleCertifier",
                "source_mapping": {
                  "start": 733,
                  "length": 1146,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "setDelegate(address)"
            }
          },
          {
            "type": "node",
            "name": "delegate = _new",
            "source_mapping": {
              "start": 1705,
              "length": 15,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setDelegate",
                "source_mapping": {
                  "start": 1657,
                  "length": 66,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SimpleCertifier",
                    "source_mapping": {
                      "start": 733,
                      "length": 1146,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setDelegate(address)"
                }
              }
            }
          }
        ],
        "description": "SimpleCertifier.setDelegate(address) () should emit an event for: \n\t- delegate = _new () \n",
        "markdown": "[SimpleCertifier.setDelegate(address)]() should emit an event for: \n\t- [delegate = _new]() \n",
        "first_markdown_element": "",
        "id": "d85d2ad8ca68baac2c2167f624c0bb53efa6220cfc12235e4ad1fb5fe6fdb03b",
        "check": "events-access",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_new",
            "source_mapping": {
              "start": 241,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setOwner",
                "source_mapping": {
                  "start": 223,
                  "length": 83,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Owned",
                    "source_mapping": {
                      "start": 79,
                      "length": 266,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setOwner(address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "owner = _new",
            "source_mapping": {
              "start": 291,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setOwner",
                "source_mapping": {
                  "start": 223,
                  "length": 83,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Owned",
                    "source_mapping": {
                      "start": 79,
                      "length": 266,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setOwner(address)"
                }
              }
            }
          }
        ],
        "description": "Owned.setOwner(address)._new () lacks a zero-check on :\n\t\t- owner = _new ()\n",
        "markdown": "[Owned.setOwner(address)._new]() lacks a zero-check on :\n\t\t- [owner = _new]()\n",
        "first_markdown_element": "",
        "id": "cf95da28c3bea50f8dac751abbc1461fd46ac18f52ab78645a88e776f2c625ed",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_new",
            "source_mapping": {
              "start": 1678,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setDelegate",
                "source_mapping": {
                  "start": 1657,
                  "length": 66,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SimpleCertifier",
                    "source_mapping": {
                      "start": 733,
                      "length": 1146,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setDelegate(address)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "delegate = _new",
            "source_mapping": {
              "start": 1705,
              "length": 15,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setDelegate",
                "source_mapping": {
                  "start": 1657,
                  "length": 66,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SimpleCertifier",
                    "source_mapping": {
                      "start": 733,
                      "length": 1146,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setDelegate(address)"
                }
              }
            }
          }
        ],
        "description": "SimpleCertifier.setDelegate(address)._new () lacks a zero-check on :\n\t\t- delegate = _new ()\n",
        "markdown": "[SimpleCertifier.setDelegate(address)._new]() lacks a zero-check on :\n\t\t- [delegate = _new]()\n",
        "first_markdown_element": "",
        "id": "f79ef7a540e552d6f9077c52aee054e32ad6d8b26b33b8fac52df26ebfd2efda",
        "check": "missing-zero-check",
        "impact": "Low",
        "confidence": "Medium"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "puzzles[msg.sender] != sha3()(_code)",
            "source_mapping": {
              "start": 2372,
              "length": 34,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "confirm",
                "source_mapping": {
                  "start": 2317,
                  "length": 209,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProofOfSMS",
                    "source_mapping": {
                      "start": 1883,
                      "length": 951,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "confirm(bytes32)"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected puzzles[msg.sender] != sha3()(_code) ():\n\t- Usage of \"sha3()\" should be replaced with \"keccak256()\"\n",
        "markdown": "Deprecated standard detected [puzzles[msg.sender] != sha3()(_code)]():\n\t- Usage of \"sha3()\" should be replaced with \"keccak256()\"\n",
        "first_markdown_element": "",
        "id": "cfbd2053f82f7665e3a31be08eb5525ee5f76d0c90986fd1e68b98ee2c0b4c16",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "",
            "source_mapping": {
              "start": 2659,
              "length": 5,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "drain",
                "source_mapping": {
                  "start": 2588,
                  "length": 80,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProofOfSMS",
                    "source_mapping": {
                      "start": 1883,
                      "length": 951,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "drain()"
                }
              }
            }
          }
        ],
        "description": "Deprecated standard detected THROW ():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "markdown": "Deprecated standard detected [THROW]():\n\t- Usage of \"throw\" should be replaced with \"revert()\"\n",
        "first_markdown_element": "",
        "id": "f5556cf1c70b64b9e4b1fc32044dd970b5f2c8b9fc21b7971fda01971033f2d5",
        "check": "deprecated-standards",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [],
        "description": "solc-0.4.0 is not recommended for deployment\n",
        "markdown": "solc-0.4.0 is not recommended for deployment\n",
        "first_markdown_element": "",
        "id": "e676d9e89e623fa7675baecce41eb7ab21d1d8ec9e856bc5b047e6cfb50b37ca",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "pragma",
            "name": "^0.4.0",
            "source_mapping": {
              "start": 54,
              "length": 23,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "directive": [
                "solidity",
                "^",
                "0.4",
                ".0"
              ]
            }
          }
        ],
        "description": "Pragma version^0.4.0 () allows old versions\n",
        "markdown": "Pragma version[^0.4.0]() allows old versions\n",
        "first_markdown_element": "",
        "id": "f4d0f96f990510a571c7ae954763f848d217d6f86fa5953d251f28f5221969e2",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_who",
            "source_mapping": {
              "start": 1440,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "getAddress",
                "source_mapping": {
                  "start": 1420,
                  "length": 121,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SimpleCertifier",
                    "source_mapping": {
                      "start": 733,
                      "length": 1146,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "getAddress(address,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter SimpleCertifier.getAddress(address,string)._who () is not in mixedCase\n",
        "markdown": "Parameter [SimpleCertifier.getAddress(address,string)._who]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "1375461a7b5e14f2c67efdfaba426add3d431f8aac5e101269e417a74b10dbb4",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_field",
            "source_mapping": {
              "start": 1454,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "getAddress",
                "source_mapping": {
                  "start": 1420,
                  "length": 121,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SimpleCertifier",
                    "source_mapping": {
                      "start": 733,
                      "length": 1146,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "getAddress(address,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter SimpleCertifier.getAddress(address,string)._field () is not in mixedCase\n",
        "markdown": "Parameter [SimpleCertifier.getAddress(address,string)._field]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "1dc4db0e030f92764deb638fd5ee9cd299ee810b859cb951a0e57e97b95c71d7",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_who",
            "source_mapping": {
              "start": 1243,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "certified",
                "source_mapping": {
                  "start": 1224,
                  "length": 87,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SimpleCertifier",
                    "source_mapping": {
                      "start": 733,
                      "length": 1146,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "certified(address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter SimpleCertifier.certified(address)._who () is not in mixedCase\n",
        "markdown": "Parameter [SimpleCertifier.certified(address)._who]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "211292a756b2f9c5020aa3ae74918a84b132734ffeb707d076728fe992488d07",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_new",
            "source_mapping": {
              "start": 2545,
              "length": 9,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setFee",
                "source_mapping": {
                  "start": 2529,
                  "length": 56,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProofOfSMS",
                    "source_mapping": {
                      "start": 1883,
                      "length": 951,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setFee(uint256)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter ProofOfSMS.setFee(uint256)._new () is not in mixedCase\n",
        "markdown": "Parameter [ProofOfSMS.setFee(uint256)._new]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "3d368a9f60318406ff54ff056d6882eb1c9d89bc103a6874b38f79d5c279828a",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_new",
            "source_mapping": {
              "start": 1678,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setDelegate",
                "source_mapping": {
                  "start": 1657,
                  "length": 66,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SimpleCertifier",
                    "source_mapping": {
                      "start": 733,
                      "length": 1146,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setDelegate(address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter SimpleCertifier.setDelegate(address)._new () is not in mixedCase\n",
        "markdown": "Parameter [SimpleCertifier.setDelegate(address)._new]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "5ace62716c4e932cc12f018f750d63102bed438d8e4616a4186cc045f34deba3",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_field",
            "source_mapping": {
              "start": 1340,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "get",
                "source_mapping": {
                  "start": 1313,
                  "length": 105,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SimpleCertifier",
                    "source_mapping": {
                      "start": 733,
                      "length": 1146,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "get(address,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter SimpleCertifier.get(address,string)._field () is not in mixedCase\n",
        "markdown": "Parameter [SimpleCertifier.get(address,string)._field]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "60905527c0859b3a7cb1a971b22af068ea23d8fb0e3d76c9401672fa666a916a",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "only_certified",
            "source_mapping": {
              "start": 848,
              "length": 77,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SimpleCertifier",
                "source_mapping": {
                  "start": 733,
                  "length": 1146,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "only_certified(address)"
            },
            "additional_fields": {
              "target": "modifier",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Modifier SimpleCertifier.only_certified(address) () is not in mixedCase\n",
        "markdown": "Modifier [SimpleCertifier.only_certified(address)]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "65cab5c2c55cd21380c0f3261ed54ca9c9af6b50790177d7147d6c497a741f5f",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_field",
            "source_mapping": {
              "start": 1574,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "getUint",
                "source_mapping": {
                  "start": 1543,
                  "length": 112,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SimpleCertifier",
                    "source_mapping": {
                      "start": 733,
                      "length": 1146,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "getUint(address,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter SimpleCertifier.getUint(address,string)._field () is not in mixedCase\n",
        "markdown": "Parameter [SimpleCertifier.getUint(address,string)._field]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "6833c56a604709a718ef4842719721104aea7739904b8d1d16f5b8bed573cfaa",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_code",
            "source_mapping": {
              "start": 2334,
              "length": 13,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "confirm",
                "source_mapping": {
                  "start": 2317,
                  "length": 209,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProofOfSMS",
                    "source_mapping": {
                      "start": 1883,
                      "length": 951,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "confirm(bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter ProofOfSMS.confirm(bytes32)._code () is not in mixedCase\n",
        "markdown": "Parameter [ProofOfSMS.confirm(bytes32)._code]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "7b6a47736a0319fdc3357b14bcec028509b7bf6551d8816a193711a00f1aa098",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_puzzle",
            "source_mapping": {
              "start": 2226,
              "length": 15,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "puzzle",
                "source_mapping": {
                  "start": 2196,
                  "length": 118,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProofOfSMS",
                    "source_mapping": {
                      "start": 1883,
                      "length": 951,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "puzzle(address,bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter ProofOfSMS.puzzle(address,bytes32)._puzzle () is not in mixedCase\n",
        "markdown": "Parameter [ProofOfSMS.puzzle(address,bytes32)._puzzle]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "7d045837450b93ca5a877300c7a50fb97d01e5ded2efae796cfa4d607e0ce638",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_who",
            "source_mapping": {
              "start": 1122,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "revoke",
                "source_mapping": {
                  "start": 1106,
                  "length": 116,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SimpleCertifier",
                    "source_mapping": {
                      "start": 733,
                      "length": 1146,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "revoke(address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter SimpleCertifier.revoke(address)._who () is not in mixedCase\n",
        "markdown": "Parameter [SimpleCertifier.revoke(address)._who]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "83e459cafb3d1ed71e385934a204603e402316cdf1d96f19e9afcc4695e8880f",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "only_delegate",
            "source_mapping": {
              "start": 781,
              "length": 65,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SimpleCertifier",
                "source_mapping": {
                  "start": 733,
                  "length": 1146,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "only_delegate()"
            },
            "additional_fields": {
              "target": "modifier",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Modifier SimpleCertifier.only_delegate() () is not in mixedCase\n",
        "markdown": "Modifier [SimpleCertifier.only_delegate()]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "93016c2c5e2ceb1b2d359cb289cb1adadc9db9b13dfb7b14e8dcad987446a245",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "only_owner",
            "source_mapping": {
              "start": 97,
              "length": 59,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Owned",
                "source_mapping": {
                  "start": 79,
                  "length": 266,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "only_owner()"
            },
            "additional_fields": {
              "target": "modifier",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Modifier Owned.only_owner() () is not in mixedCase\n",
        "markdown": "Modifier [Owned.only_owner()]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "b45e9850ac7d459bf4575483f5d6bf02d14756b0b49740b0d01ed29a66a4cbc5",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_who",
            "source_mapping": {
              "start": 2690,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "certified",
                "source_mapping": {
                  "start": 2671,
                  "length": 90,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProofOfSMS",
                    "source_mapping": {
                      "start": 1883,
                      "length": 951,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "certified(address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter ProofOfSMS.certified(address)._who () is not in mixedCase\n",
        "markdown": "Parameter [ProofOfSMS.certified(address)._who]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "c70ddfeda68af68a1d589259fb5a67259b7c3bb6c617c66230326177b282dbc7",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_who",
            "source_mapping": {
              "start": 2212,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "puzzle",
                "source_mapping": {
                  "start": 2196,
                  "length": 118,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "ProofOfSMS",
                    "source_mapping": {
                      "start": 1883,
                      "length": 951,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "puzzle(address,bytes32)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter ProofOfSMS.puzzle(address,bytes32)._who () is not in mixedCase\n",
        "markdown": "Parameter [ProofOfSMS.puzzle(address,bytes32)._who]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "caa18c701472235b26a3f41d3200fa26b0c25353154d3079b81497d184759225",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_who",
            "source_mapping": {
              "start": 1326,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "get",
                "source_mapping": {
                  "start": 1313,
                  "length": 105,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SimpleCertifier",
                    "source_mapping": {
                      "start": 733,
                      "length": 1146,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "get(address,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter SimpleCertifier.get(address,string)._who () is not in mixedCase\n",
        "markdown": "Parameter [SimpleCertifier.get(address,string)._who]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "d0f6118dc6dc84a1e44eefc4cb3b668488dea7679a60402a4bab55c6760b1ea9",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_who",
            "source_mapping": {
              "start": 1560,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "getUint",
                "source_mapping": {
                  "start": 1543,
                  "length": 112,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SimpleCertifier",
                    "source_mapping": {
                      "start": 733,
                      "length": 1146,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "getUint(address,string)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter SimpleCertifier.getUint(address,string)._who () is not in mixedCase\n",
        "markdown": "Parameter [SimpleCertifier.getUint(address,string)._who]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "d78f9939d5ed9b1fd04c0f58f3810dd6476ca2c1b3de5e07bbc30483f3f2239e",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_who",
            "source_mapping": {
              "start": 1024,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "certify",
                "source_mapping": {
                  "start": 1007,
                  "length": 97,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "SimpleCertifier",
                    "source_mapping": {
                      "start": 733,
                      "length": 1146,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "certify(address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter SimpleCertifier.certify(address)._who () is not in mixedCase\n",
        "markdown": "Parameter [SimpleCertifier.certify(address)._who]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "da3f38106ea2c0dd43483ffa6ab866766387d54b0e93a351315fb7ddeefda075",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "variable",
            "name": "_new",
            "source_mapping": {
              "start": 241,
              "length": 12,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "setOwner",
                "source_mapping": {
                  "start": 223,
                  "length": 83,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Owned",
                    "source_mapping": {
                      "start": 79,
                      "length": 266,
                      "filename_relative": "",
                      "filename_absolute": "",
                      "filename_short": "",
                      "is_dependency": false,
                      "lines": [],
                      "starting_column": 0,
                      "ending_column": 0
                    }
                  },
                  "signature": "setOwner(address)"
                }
              }
            },
            "additional_fields": {
              "target": "parameter",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Parameter Owned.setOwner(address)._new () is not in mixedCase\n",
        "markdown": "Parameter [Owned.setOwner(address)._new]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "e3cd03fa892217e60abc7010df2e8b6777afbed11022c482c27ca453386423a3",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "when_fee_paid",
            "source_mapping": {
              "start": 1926,
              "length": 58,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "ProofOfSMS",
                "source_mapping": {
                  "start": 1883,
                  "length": 951,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "when_fee_paid()"
            },
            "additional_fields": {
              "target": "modifier",
              "convention": "mixedCase"
            }
          }
        ],
        "description": "Modifier ProofOfSMS.when_fee_paid() () is not in mixedCase\n",
        "markdown": "Modifier [ProofOfSMS.when_fee_paid()]() is not in mixedCase\n",
        "first_markdown_element": "",
        "id": "f126ab6003ce841be8d7a1401683c057340526831295a537ec6eaceb429ea0cc",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "get",
            "source_mapping": {
              "start": 504,
              "length": 71,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Certifier",
                "source_mapping": {
                  "start": 347,
                  "length": 384,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "get(address,string)"
            }
          },
          {
            "type": "function",
            "name": "get",
            "source_mapping": {
              "start": 1313,
              "length": 105,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SimpleCertifier",
                "source_mapping": {
                  "start": 733,
                  "length": 1146,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "get(address,string)"
            }
          }
        ],
        "description": "get(address,string) should be declared external:\n\t- Certifier.get(address,string) ()\n\t- SimpleCertifier.get(address,string) ()\n",
        "markdown": "get(address,string) should be declared external:\n\t- [Certifier.get(address,string)]()\n\t- [SimpleCertifier.get(address,string)]()\n",
        "first_markdown_element": "",
        "id": "22bed7be4a6c937789f18bac27aa3edf53be037d2034f3966c73cedac8ba8afe",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "getAddress",
            "source_mapping": {
              "start": 577,
              "length": 78,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Certifier",
                "source_mapping": {
                  "start": 347,
                  "length": 384,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "getAddress(address,string)"
            }
          },
          {
            "type": "function",
            "name": "getAddress",
            "source_mapping": {
              "start": 1420,
              "length": 121,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SimpleCertifier",
                "source_mapping": {
                  "start": 733,
                  "length": 1146,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "getAddress(address,string)"
            }
          }
        ],
        "description": "getAddress(address,string) should be declared external:\n\t- Certifier.getAddress(address,string) ()\n\t- SimpleCertifier.getAddress(address,string) ()\n",
        "markdown": "getAddress(address,string) should be declared external:\n\t- [Certifier.getAddress(address,string)]()\n\t- [SimpleCertifier.getAddress(address,string)]()\n",
        "first_markdown_element": "",
        "id": "6d4121c463b54a9610dc2c90ca3c95d64e38c71c7cb2bc9c537cb01bba6ee73d",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "getUint",
            "source_mapping": {
              "start": 657,
              "length": 72,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Certifier",
                "source_mapping": {
                  "start": 347,
                  "length": 384,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "getUint(address,string)"
            }
          },
          {
            "type": "function",
            "name": "getUint",
            "source_mapping": {
              "start": 1543,
              "length": 112,
              "filename_relative": "",
              "filename_absolute": "",
              "filename_short": "",
              "is_dependency": false,
              "lines": [],
              "starting_column": 0,
              "ending_column": 0
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "SimpleCertifier",
                "source_mapping": {
                  "start": 733,
                  "length": 1146,
                  "filename_relative": "",
                  "filename_absolute": "",
                  "filename_short": "",
                  "is_dependency": false,
                  "lines": [],
                  "starting_column": 0,
                  "ending_column": 0
                }
              },
              "signature": "getUint(address,string)"
            }
          }
        ],
        "description": "getUint(address,string) should be declared external:\n\t- Certifier.getUint(address,string) ()\n\t- SimpleCertifier.getUint(address,string) ()\n",
        "markdown": "getUint(address,string) should be declared external:\n\t- [Certifier.getUint(address,string)]()\n\t- [SimpleCertifier.getUint(address,string)]()\n",
        "first_markdown_element": "",
        "id": "88ad78da2f333fb4ede6e093a1ed4bda20215fb68270a353f88439473ac3690a",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "High"
      }
    ]
  }
}