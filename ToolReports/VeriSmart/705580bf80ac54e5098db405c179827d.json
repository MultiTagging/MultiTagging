{
  "fileName": "Benchmarks/Study_SamplesSet/705580bf80ac54e5098db405c179827d.sol",
  "baseName": "705580bf80ac54e5098db405c179827d.sol",
  "iter": 590,
  "time": "310.113621",
  "errMsg": null,
  "result": [
    {
      "no": "1",
      "kind": "IO",
      "line": 75,
      "signatures": [
        {
          "contractName": "WaRoll",
          "methodName": "doRollBet",
          "argTypes": [
            "uint256", "uint256", "bytes32", "bytes32", "bytes32"
          ]
        }
      ],
      "exp": "(ROLL_MAX_MOD - 3)",
      "status": "proven"
    },
    {
      "no": "2",
      "kind": "IO",
      "line": 103,
      "signatures": [
        {
          "contractName": "WaRoll",
          "methodName": "validRouletteBetData",
          "argTypes": [ "dbytes", "uint256" ]
        }
      ],
      "exp": "((length * 2) + 1)",
      "status": "unproven"
    },
    {
      "no": "3",
      "kind": "IO",
      "line": 103,
      "signatures": [
        {
          "contractName": "WaRoll",
          "methodName": "validRouletteBetData",
          "argTypes": [ "dbytes", "uint256" ]
        }
      ],
      "exp": "(length * 2)",
      "status": "unproven"
    },
    {
      "no": "4",
      "kind": "IO",
      "line": 105,
      "signatures": [
        {
          "contractName": "WaRoll",
          "methodName": "validRouletteBetData",
          "argTypes": [ "dbytes", "uint256" ]
        }
      ],
      "exp": "(i + 1)",
      "status": "proven"
    },
    {
      "no": "5",
      "kind": "IO",
      "line": 106,
      "signatures": [
        {
          "contractName": "WaRoll",
          "methodName": "validRouletteBetData",
          "argTypes": [ "dbytes", "uint256" ]
        }
      ],
      "exp": "(2 + (i * 2))",
      "status": "unproven"
    },
    {
      "no": "6",
      "kind": "IO",
      "line": 106,
      "signatures": [
        {
          "contractName": "WaRoll",
          "methodName": "validRouletteBetData",
          "argTypes": [ "dbytes", "uint256" ]
        }
      ],
      "exp": "(i * 2)",
      "status": "unproven"
    },
    {
      "no": "7",
      "kind": "IO",
      "line": 106,
      "signatures": [
        {
          "contractName": "WaRoll",
          "methodName": "validRouletteBetData",
          "argTypes": [ "dbytes", "uint256" ]
        }
      ],
      "exp": "(total + uint8(data[(2 + (i * 2))]))",
      "status": "unproven"
    },
    {
      "no": "8",
      "kind": "IO",
      "line": 108,
      "signatures": [
        {
          "contractName": "WaRoll",
          "methodName": "validRouletteBetData",
          "argTypes": [ "dbytes", "uint256" ]
        }
      ],
      "exp": "(total * ROULETTE_BASE_STAKE)",
      "status": "unproven"
    },
    {
      "no": "9",
      "kind": "IO",
      "line": 123,
      "signatures": [
        {
          "contractName": "WaRoll",
          "methodName": "doRollResult",
          "argTypes": [ "uint256", "struct WaRoll.BetData", "bytes32" ]
        }
      ],
      "exp": "((value % ROLL_MAX_MOD) + 1)",
      "status": "unproven"
    },
    {
      "no": "10",
      "kind": "IO",
      "line": 127,
      "signatures": [
        {
          "contractName": "WaRoll",
          "methodName": "doRollResult",
          "argTypes": [ "uint256", "struct WaRoll.BetData", "bytes32" ]
        }
      ],
      "exp": "((betAmount / 100) * FEE_PERCENT)",
      "status": "unproven"
    },
    {
      "no": "11",
      "kind": "IO",
      "line": 131,
      "signatures": [
        {
          "contractName": "WaRoll",
          "methodName": "doRollResult",
          "argTypes": [ "uint256", "struct WaRoll.BetData", "bytes32" ]
        }
      ],
      "exp": "((betAmount - fee) * ROLL_MAX_MOD)",
      "status": "unproven"
    },
    {
      "no": "12",
      "kind": "IO",
      "line": 131,
      "signatures": [
        {
          "contractName": "WaRoll",
          "methodName": "doRollResult",
          "argTypes": [ "uint256", "struct WaRoll.BetData", "bytes32" ]
        }
      ],
      "exp": "(betAmount - fee)",
      "status": "unproven"
    },
    {
      "no": "13",
      "kind": "IO",
      "line": 142,
      "signatures": [
        {
          "contractName": "WaRoll",
          "methodName": "doResult",
          "argTypes": [ "uint256", "bytes32", "bytes32", "uint256" ]
        }
      ],
      "exp": "(ROULETTE_BASE_STAKE * paymentMutiplier)",
      "status": "unproven"
    },
    {
      "no": "14",
      "kind": "DZ",
      "line": 123,
      "signatures": [
        {
          "contractName": "WaRoll",
          "methodName": "doRollResult",
          "argTypes": [ "uint256", "struct WaRoll.BetData", "bytes32" ]
        }
      ],
      "exp": "(value % ROLL_MAX_MOD)",
      "status": "proven"
    },
    {
      "no": "15",
      "kind": "DZ",
      "line": 127,
      "signatures": [
        {
          "contractName": "WaRoll",
          "methodName": "doRollResult",
          "argTypes": [ "uint256", "struct WaRoll.BetData", "bytes32" ]
        }
      ],
      "exp": "(betAmount / 100)",
      "status": "proven"
    },
    {
      "no": "16",
      "kind": "DZ",
      "line": 131,
      "signatures": [
        {
          "contractName": "WaRoll",
          "methodName": "doRollResult",
          "argTypes": [ "uint256", "struct WaRoll.BetData", "bytes32" ]
        }
      ],
      "exp": "(((betAmount - fee) * ROLL_MAX_MOD) / bet.value)",
      "status": "unproven"
    },
    {
      "no": "17",
      "kind": "DZ",
      "line": 141,
      "signatures": [
        {
          "contractName": "WaRoll",
          "methodName": "doResult",
          "argTypes": [ "uint256", "bytes32", "bytes32", "uint256" ]
        }
      ],
      "exp": "(value % ROULETTE_MAX_MOD)",
      "status": "proven"
    },
    {
      "no": "18",
      "kind": "KA",
      "line": 71,
      "signatures": [
        { "contractName": "WaRoll", "methodName": "kill", "argTypes": [] }
      ],
      "exp": "selfdestruct(owner);",
      "status": "proven"
    },
    {
      "no": "19",
      "kind": "ETH_LEAK",
      "line": 71,
      "signatures": [
        { "contractName": "WaRoll", "methodName": "kill", "argTypes": [] }
      ],
      "exp": "selfdestruct(owner);",
      "status": "proven"
    },
    {
      "no": "20",
      "kind": "ETH_LEAK",
      "line": 133,
      "signatures": [
        {
          "contractName": "WaRoll",
          "methodName": "doRollResult",
          "argTypes": [ "uint256", "struct WaRoll.BetData", "bytes32" ]
        }
      ],
      "exp": "bet.player.send(payAmount)",
      "status": "unproven"
    },
    {
      "no": "21",
      "kind": "ETH_LEAK",
      "line": 143,
      "signatures": [
        {
          "contractName": "WaRoll",
          "methodName": "doResult",
          "argTypes": [ "uint256", "bytes32", "bytes32", "uint256" ]
        }
      ],
      "exp": "bet.player.send(payAmount)",
      "status": "unproven"
    },
    {
      "no": "22",
      "kind": "ETH_LEAK",
      "line": 155,
      "signatures": [
        {
          "contractName": "WaRoll",
          "methodName": "withdraw",
          "argTypes": [ "address", "uint256" ]
        }
      ],
      "exp": "add.transfer(amount);",
      "status": "proven"
    }
  ]
}