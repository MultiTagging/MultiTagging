{
  "fileName": "Benchmarks/Study_SamplesSet/c3e88a7dcd37d1234601d890c7e1dc69.sol",
  "baseName": "c3e88a7dcd37d1234601d890c7e1dc69.sol",
  "iter": 671,
  "time": "301.401885",
  "errMsg": null,
  "result": [
    {
      "no": "1",
      "kind": "IO",
      "line": 63,
      "signatures": [
        {
          "contractName": "SingularityTest20",
          "methodName": "Sort",
          "argTypes": []
        }
      ],
      "exp": "((msg.value / 100) * 20)",
      "status": "unproven"
    },
    {
      "no": "2",
      "kind": "IO",
      "line": 63,
      "signatures": [
        {
          "contractName": "SingularityTest20",
          "methodName": "Sort",
          "argTypes": []
        }
      ],
      "exp": "(feecounter + ((msg.value / 100) * 20))",
      "status": "proven"
    },
    {
      "no": "3",
      "kind": "IO",
      "line": 71,
      "signatures": [
        {
          "contractName": "SingularityTest20",
          "methodName": "Sort",
          "argTypes": []
        }
      ],
      "exp": "(Tx.length + 1)",
      "status": "unproven"
    },
    {
      "no": "4",
      "kind": "IO",
      "line": 75,
      "signatures": [
        {
          "contractName": "SingularityTest20",
          "methodName": "Sort",
          "argTypes": []
        }
      ],
      "exp": "(balance[msg.sender] + msg.value)",
      "status": "unproven"
    },
    {
      "no": "5",
      "kind": "IO",
      "line": 84,
      "signatures": [
        {
          "contractName": "SingularityTest20",
          "methodName": "Count",
          "argTypes": []
        }
      ],
      "exp": "((balance[Tx[counter].txuser] / 100) * 4)",
      "status": "unproven"
    },
    {
      "no": "6",
      "kind": "IO",
      "line": 85,
      "signatures": [
        {
          "contractName": "SingularityTest20",
          "methodName": "Count",
          "argTypes": []
        }
      ],
      "exp": "(counter - 1)",
      "status": "proven"
    },
    {
      "no": "7",
      "kind": "IO",
      "line": 94,
      "signatures": [
        {
          "contractName": "SingularityTest20",
          "methodName": "ReFund",
          "argTypes": []
        }
      ],
      "exp": "(counter - 1)",
      "status": "proven"
    },
    {
      "no": "8",
      "kind": "DZ",
      "line": 63,
      "signatures": [
        {
          "contractName": "SingularityTest20",
          "methodName": "Sort",
          "argTypes": []
        }
      ],
      "exp": "(msg.value / 100)",
      "status": "proven"
    },
    {
      "no": "9",
      "kind": "DZ",
      "line": 84,
      "signatures": [
        {
          "contractName": "SingularityTest20",
          "methodName": "Count",
          "argTypes": []
        }
      ],
      "exp": "(balance[Tx[counter].txuser] / 100)",
      "status": "proven"
    },
    {
      "no": "10",
      "kind": "ETH_LEAK",
      "line": 40,
      "signatures": [
        {
          "contractName": "SingularityTest20",
          "methodName": "@fallback",
          "argTypes": []
        }
      ],
      "exp": "msg.sender.transfer(value);",
      "status": "unproven"
    },
    {
      "no": "11",
      "kind": "ETH_LEAK",
      "line": 64,
      "signatures": [
        {
          "contractName": "SingularityTest20",
          "methodName": "Sort",
          "argTypes": []
        }
      ],
      "exp": "owner.transfer(feecounter);",
      "status": "proven"
    },
    {
      "no": "12",
      "kind": "ETH_LEAK",
      "line": 84,
      "signatures": [
        {
          "contractName": "SingularityTest20",
          "methodName": "Count",
          "argTypes": []
        }
      ],
      "exp": "Tx[counter].txuser.transfer(((balance[Tx[counter].txuser] / 100) * 4));",
      "status": "unproven"
    },
    {
      "no": "13",
      "kind": "ETH_LEAK",
      "line": 93,
      "signatures": [
        {
          "contractName": "SingularityTest20",
          "methodName": "ReFund",
          "argTypes": []
        }
      ],
      "exp": "Tx[counter].txuser.transfer(balance[Tx[counter].txuser]);",
      "status": "unproven"
    }
  ]
}